; ModuleID = 'source/app/controller/ApiController.d'
source_filename = "source/app/controller/ApiController.d"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%0 = type opaque
%1 = type opaque
%2 = type opaque
%3 = type opaque
%4 = type opaque
%5 = type opaque
%6 = type opaque
%7 = type opaque
%8 = type { i32, i32, void ()*, i64, [8 x %object.ModuleInfo*], i64, [1 x %object.TypeInfo_Class*], [29 x i8] }
%object.TypeInfo_AssociativeArray = type { [20 x i8*]*, i8*, %object.TypeInfo*, %object.TypeInfo* }
%object.TypeInfo = type { [20 x i8*]*, i8* }
%object.TypeInfo_Delegate = type { [20 x i8*]*, i8*, %object.TypeInfo*, { i64, i8* } }
%object.TypeInfo_Array = type { [20 x i8*]*, i8*, %object.TypeInfo* }
%std.json.JSONValue = type { %std.json.JSONValue.Store, i8, [7 x i8] }
%std.json.JSONValue.Store = type { { i64, i8* } }
%object.TypeInfo_Class = type { [21 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, { i64, i8** }, { i64, %object.Interface* }, %object.TypeInfo_Class*, i8*, void (%object.Object*)*, i32, [4 x i8], i8*, { i64, %object.OffsetTypeInfo* }, void (%object.Object*)*, i8* }
%object.Interface = type { %object.TypeInfo_Class*, { i64, i8** }, i64 }
%object.OffsetTypeInfo = type { i64, %object.TypeInfo* }
%object.Object = type { [5 x i8*]*, i8* }
%hunt.framework.http.JsonResponse.JsonResponse = type <{ [19 x i8*]*, i8*, %hunt.http.server.HttpServerResponse.HttpServerResponse*, i8 }>
%hunt.http.server.HttpServerResponse.HttpServerResponse = type { [31 x i8*]*, i8*, [2 x i8*]*, %hunt.http.HttpVersion.HttpVersion, %hunt.http.HttpFields.HttpFields*, %hunt.http.HttpBody.HttpBody*, i64, { i64, i8* }, { i8*, %hunt.http.HttpFields.HttpFields* (i8*)* }, i32, [4 x i8], { i64, i8* } }
%hunt.http.HttpVersion.HttpVersion = type { { i64, i8* }, { i64, i8* }, i32, [4 x i8] }
%hunt.http.HttpFields.HttpFields = type <{ [51 x i8*]*, i8*, [2 x i8*]*, { i64, %hunt.http.HttpField.HttpField** }, i32 }>
%hunt.http.HttpField.HttpField = type <{ [13 x i8*]*, i8*, %hunt.http.HttpHeader.HttpHeader, { i64, i8* }, { i64, i8* }, i32 }>
%hunt.http.HttpHeader.HttpHeader = type { i32, [4 x i8], { i64, i8* }, { i64, i8* }, { i64, i8* } }
%hunt.http.HttpBody.HttpBody = type { [12 x i8*]*, i8* }
%app.controller.ApiController.ApiController = type { [38 x i8*]*, i8*, %hunt.framework.http.Request.Request*, %hunt.framework.http.Response.Response*, { i64, %hunt.framework.middleware.MiddlewareInfo.MiddlewareInfo** }, { i64, %hunt.framework.middleware.MiddlewareInfo.MiddlewareInfo** }, %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.framework.view.View.View*, i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*, { i64, i8* }, i8* }
%hunt.framework.http.Request.Request = type <{ [42 x i8*]*, i8*, %hunt.http.server.HttpSession.HttpSession*, %hunt.framework.http.session.SessionStorage.SessionStorage*, i8, i8, [6 x i8], { i64, %hunt.framework.file.UploadedFile.UploadedFile** }, i8*, { i64, i8* }, { i64, i8* }, %hunt.framework.auth.Auth.Auth*, { i64, i8* }, %"core.time.MonoTimeImpl!ClockType.normal.MonoTimeImpl", i8, [7 x i8], %hunt.http.server.HttpServerRequest.HttpServerRequest*, %std.socket.Address*, %std.json.JSONValue, { i64, i8* }, i8 }>
%hunt.http.server.HttpSession.HttpSession = type <{ [37 x i8*]*, i8*, { i64, i8* }, i64, i64, i32, [4 x i8], %std.json.JSONValue, i8 }>
%hunt.framework.http.session.SessionStorage.SessionStorage = type { [14 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, i32, [4 x i8], %hunt.cache.Cache.Cache* }
%hunt.cache.Cache.Cache = type <{ [5 x i8*]*, i8*, i8, [7 x i8], %hunt.cache.adapter.MemoryAdapter.MemoryAdapter*, %hunt.cache.adapter.RedisAdapter.RedisAdapter*, %hunt.cache.adapter.RedisClusterAdapter.RedisClusterAdapter*, %hunt.cache.CacheOptions.CacheOptions*, i32 }>
%hunt.cache.adapter.MemoryAdapter.MemoryAdapter = type { [12 x i8*]*, i8*, [5 x i8*]*, %hunt.collection.Radix.Radix*, %hunt.collection.Radix.Radix* }
%hunt.collection.Radix.Radix = type { %hunt.collection.Radix.RadixNode*, i64, i64 }
%hunt.collection.Radix.RadixNode = type { i64 }
%hunt.cache.adapter.RedisAdapter.RedisAdapter = type { [10 x i8*]*, i8*, [5 x i8*]* }
%hunt.cache.adapter.RedisClusterAdapter.RedisClusterAdapter = type { [9 x i8*]*, i8*, [5 x i8*]*, %hunt.redis.RedisCluster.RedisCluster* }
%hunt.redis.RedisCluster.RedisCluster = type { [33 x i8*]*, i8*, [10 x i8*]*, [4 x i8*]*, [1 x i8*]*, [2 x i8*]*, i32, [4 x i8], %hunt.redis.RedisClusterConnectionHandler.RedisClusterConnectionHandler*, [9 x i8*]*, [6 x i8*]*, [1 x i8*]* }
%hunt.redis.RedisClusterConnectionHandler.RedisClusterConnectionHandler = type { [12 x i8*]*, i8*, [2 x i8*]*, %hunt.redis.RedisClusterInfoCache.RedisClusterInfoCache* }
%hunt.redis.RedisClusterInfoCache.RedisClusterInfoCache = type { [15 x i8*]*, i8*, %"hunt.collection.Map.Map!(string, ObjectPool!(Redis)).Map"*, %"hunt.collection.Map.Map!(int, ObjectPool!(Redis)).Map"*, %core.sync.mutex.Mutex*, i8, [7 x i8], %hunt.redis.RedisPoolOptions.RedisPoolOptions*, %hunt.redis.RedisClusterHostAndPortMap.RedisClusterHostAndPortMap* }
%"hunt.collection.Map.Map!(string, ObjectPool!(Redis)).Map" = type { [27 x i8*]* }
%"hunt.collection.Map.Map!(int, ObjectPool!(Redis)).Map" = type { [27 x i8*]* }
%core.sync.mutex.Mutex = type { [11 x i8*]*, i8*, [3 x i8*]*, %core.sys.posix.sys.types.pthread_mutex_t, %core.sync.mutex.Mutex.MonitorProxy }
%core.sys.posix.sys.types.pthread_mutex_t = type { [40 x i8] }
%core.sync.mutex.Mutex.MonitorProxy = type { %object.Object.Monitor* }
%object.Object.Monitor = type { [3 x i8*]* }
%hunt.redis.RedisPoolOptions.RedisPoolOptions = type <{ [5 x i8*]*, i8*, i64, i32, [4 x i8], { i64, i8* }, %core.time.Duration, i32, [4 x i8], { i64, i8* }, i32, i32, i32, [4 x i8], { i64, i8* }, i32, [4 x i8], { i64, i8* }, i32, i8 }>
%core.time.Duration = type { i64 }
%hunt.redis.RedisClusterHostAndPortMap.RedisClusterHostAndPortMap = type { [2 x i8*]* }
%hunt.cache.CacheOptions.CacheOptions = type { [5 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, i8, i8, [2 x i8], i32, i8, [3 x i8], i32, i32, i8, i8, [2 x i8], i32, i32, %hunt.redis.RedisPoolOptions.RedisClusterConfig, %hunt.redis.RedisPoolOptions.RedisPoolOptions*, %hunt.cache.CacheOptions.CacheOptions.MemcacheConf, %hunt.cache.CacheOptions.CacheOptions.RocksdbConf }
%hunt.redis.RedisPoolOptions.RedisClusterConfig = type { { i64, { i64, i8* }* }, i32, [4 x i8] }
%hunt.cache.CacheOptions.CacheOptions.MemcacheConf = type { { i64, i8* }, i16, [2 x i8], i32 }
%hunt.cache.CacheOptions.CacheOptions.RocksdbConf = type { { i64, i8* } }
%hunt.framework.file.UploadedFile.UploadedFile = type { [17 x i8*]*, i8*, { i64, i8* }, i32, [4 x i8], { i64, i8* }, { i64, i8* }, { i64, i8* } }
%hunt.framework.auth.Auth.Auth = type { [20 x i8*]*, i8*, %hunt.framework.auth.Identity.Identity*, { i64, i8* }, i8, i8, i8, [1 x i8], i32, { i64, i8* }, %hunt.framework.auth.guard.Guard.Guard*, i8, [7 x i8], %hunt.framework.http.Request.Request* }
%hunt.framework.auth.Identity.Identity = type <{ [23 x i8*]*, i8*, %hunt.shiro.subject.Subject.Subject*, { i64, i8* }, i8 }>
%hunt.shiro.subject.Subject.Subject = type { [33 x i8*]* }
%hunt.framework.auth.guard.Guard.Guard = type { [16 x i8*]*, i8*, %hunt.shiro.mgt.DefaultSecurityManager.DefaultSecurityManager*, { i64, %hunt.shiro.realm.Realm.Realm** }, %hunt.framework.auth.UserService.UserService*, i32, [4 x i8], { i64, i8* }, { i64, i8* }, { i64, i8* } }
%hunt.shiro.mgt.DefaultSecurityManager.DefaultSecurityManager = type { [80 x i8*]*, i8*, [25 x i8*]*, [19 x i8*]*, [3 x i8*]*, [2 x i8*]*, [2 x i8*]*, [2 x i8*]*, %hunt.shiro.cache.CacheManager.CacheManager*, %hunt.shiro.event.EventBus.EventBus*, { i64, %hunt.shiro.realm.Realm.Realm** }, %hunt.shiro.authc.Authenticator.Authenticator*, %hunt.shiro.authz.Authorizer.Authorizer*, %hunt.shiro.session.mgt.SessionManager.SessionManager*, %hunt.shiro.mgt.RememberMeManager.RememberMeManager*, %hunt.shiro.mgt.SubjectDAO.SubjectDAO*, %hunt.shiro.mgt.SubjectFactory.SubjectFactory* }
%hunt.shiro.cache.CacheManager.CacheManager = type { [1 x i8*]* }
%hunt.shiro.event.EventBus.EventBus = type { [4 x i8*]* }
%hunt.shiro.authc.Authenticator.Authenticator = type { [2 x i8*]* }
%hunt.shiro.authz.Authorizer.Authorizer = type { [19 x i8*]* }
%hunt.shiro.session.mgt.SessionManager.SessionManager = type { [3 x i8*]* }
%hunt.shiro.mgt.RememberMeManager.RememberMeManager = type { [6 x i8*]* }
%hunt.shiro.mgt.SubjectDAO.SubjectDAO = type { [3 x i8*]* }
%hunt.shiro.mgt.SubjectFactory.SubjectFactory = type { [2 x i8*]* }
%hunt.shiro.realm.Realm.Realm = type { [4 x i8*]* }
%hunt.framework.auth.UserService.UserService = type { [5 x i8*]* }
%"core.time.MonoTimeImpl!ClockType.normal.MonoTimeImpl" = type { i64 }
%hunt.http.server.HttpServerRequest.HttpServerRequest = type { [68 x i8*]*, i8*, [2 x i8*]*, %hunt.http.HttpVersion.HttpVersion, %hunt.http.HttpFields.HttpFields*, %hunt.http.HttpBody.HttpBody*, i64, { i64, i8* }, { i8*, %hunt.http.HttpFields.HttpFields* (i8*)* }, { i64, i8* }, %hunt.net.util.HttpURI.HttpURI*, i8*, i8*, i8*, i8, i8, i8, [5 x i8], { i64, i8* }, { i64, i8* }, %hunt.http.server.HttpServerOptions.HttpServerOptions*, { i64, %hunt.http.Cookie.Cookie** }, %hunt.stream.PipedStream.PipedStream*, %hunt.http.codec.http.decode.MultipartFormParser.MultipartFormParser*, %hunt.net.util.UrlEncoded.UrlEncoded*, { i8*, void (i8*, %hunt.http.server.HttpServerRequest.HttpServerRequest*)* }, { i8*, void (i8*, %hunt.http.server.HttpServerRequest.HttpServerRequest*)* }, i64, { i64, i8* } }
%hunt.net.util.HttpURI.HttpURI = type { [32 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, i32, [4 x i8], { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, %"hunt.collection.MultiMap.MultiMap!string.MultiMap"*, { i64, i8* }, { i64, i8* } }
%"hunt.collection.MultiMap.MultiMap!string.MultiMap" = type <{ [47 x i8*]*, i8*, [27 x i8*]*, [4 x i8*]*, [2 x i8*]*, i32, [4 x i8], { i64, %"hunt.collection.HashMap.HashMapNode!(string, List!string).HashMapNode"** }, i32, i32, float }>
%"hunt.collection.HashMap.HashMapNode!(string, List!string).HashMapNode" = type { [10 x i8*]*, i8*, [8 x i8*]*, [2 x i8*]*, { i64, i8* }, %"hunt.collection.List.List!string.List"*, i64, %"hunt.collection.HashMap.HashMapNode!(string, List!string).HashMapNode"* }
%"hunt.collection.List.List!string.List" = type { [28 x i8*]* }
%hunt.http.server.HttpServerOptions.HttpServerOptions = type <{ [59 x i8*]*, i8*, %hunt.net.TcpSslOptions.TcpSslOptions*, i8, [3 x i8], i32, i32, [4 x i8], { i64, i8* }, i32, i32, i32, i32, i32, i32, i32, i32, { i64, i8* }, { i64, i8* }, i32, i32, %hunt.net.NetServerOptions.NetServerOptions*, %hunt.http.server.HttpRequestOptions.HttpRequestOptions*, i32, i8, [3 x i8], { i64, i8* }, i32 }>
%hunt.net.TcpSslOptions.TcpSslOptions = type { [58 x i8*]*, i8*, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i8, [7 x i8], %core.time.Duration, %core.time.Duration, %core.time.Duration, i32, i8, [3 x i8], %core.time.Duration, %hunt.net.KeyCertOptions.KeyCertOptions*, i8, [7 x i8], %hunt.net.OpenSSLEngineOptions.OpenSSLEngineOptions*, i8, i8, i8, [1 x i8], i32, %core.time.Duration }
%hunt.net.KeyCertOptions.KeyCertOptions = type { [10 x i8*]* }
%hunt.net.OpenSSLEngineOptions.OpenSSLEngineOptions = type <{ [8 x i8*]*, i8*, i8 }>
%hunt.net.NetServerOptions.NetServerOptions = type { [72 x i8*]*, i8*, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i8, [7 x i8], %core.time.Duration, %core.time.Duration, %core.time.Duration, i32, i8, [3 x i8], %core.time.Duration, %hunt.net.KeyCertOptions.KeyCertOptions*, i8, [7 x i8], %hunt.net.OpenSSLEngineOptions.OpenSSLEngineOptions*, i8, i8, i8, [1 x i8], i32, %core.time.Duration, i16, [6 x i8], { i64, i8* }, i32, i32, i8, [7 x i8], i64, i64 }
%hunt.http.server.HttpRequestOptions.HttpRequestOptions = type { [18 x i8*]*, i8*, i32, i32, i32, [4 x i8], { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* } }
%hunt.http.Cookie.Cookie = type { [24 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, i32, [4 x i8], { i64, i8* }, i8, [3 x i8], i32, i8, [7 x i8], i64 }
%hunt.stream.PipedStream.PipedStream = type { [4 x i8*]* }
%hunt.http.codec.http.decode.MultipartFormParser.MultipartFormParser = type <{ [13 x i8*]*, i8*, i32, [4 x i8], %hunt.stream.Common.InputStream*, %hunt.http.MultipartOptions.MultipartOptions*, { i64, i8* }, %"hunt.collection.MultiMap.MultiMap!(Part).MultiMap"*, %object.Exception*, { i64, i8* }, { i64, i8* }, i8, i8 }>
%hunt.stream.Common.InputStream = type { [15 x i8*]*, i8*, [2 x i8*]* }
%hunt.http.MultipartOptions.MultipartOptions = type <{ [11 x i8*]*, i8*, { i64, i8* }, i64, i64, i32, i8 }>
%"hunt.collection.MultiMap.MultiMap!(Part).MultiMap" = type <{ [47 x i8*]*, i8*, [27 x i8*]*, [4 x i8*]*, [2 x i8*]*, i32, [4 x i8], { i64, %"hunt.collection.HashMap.HashMapNode!(string, List!(Part)).HashMapNode"** }, i32, i32, float }>
%"hunt.collection.HashMap.HashMapNode!(string, List!(Part)).HashMapNode" = type { [10 x i8*]*, i8*, [8 x i8*]*, [2 x i8*]*, { i64, i8* }, %"hunt.collection.List.List!(Part).List"*, i64, %"hunt.collection.HashMap.HashMapNode!(string, List!(Part)).HashMapNode"* }
%"hunt.collection.List.List!(Part).List" = type { [27 x i8*]* }
%object.Exception = type <{ [10 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, i64, %object.Throwable.TraceInfo*, void (%object.Throwable.TraceInfo*)*, %object.Throwable*, i32 }>
%object.Throwable.TraceInfo = type { [4 x i8*]* }
%object.Throwable = type <{ [10 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, i64, %object.Throwable.TraceInfo*, void (%object.Throwable.TraceInfo*)*, %object.Throwable*, i32 }>
%hunt.net.util.UrlEncoded.UrlEncoded = type { [51 x i8*]*, i8*, [27 x i8*]*, [4 x i8*]*, [2 x i8*]*, i32, [4 x i8], { i64, %"hunt.collection.HashMap.HashMapNode!(string, List!string).HashMapNode"** }, i32, i32, float, i32 }
%std.socket.Address = type { [14 x i8*]*, i8* }
%hunt.framework.http.Response.Response = type <{ [18 x i8*]*, i8*, %hunt.http.server.HttpServerResponse.HttpServerResponse*, i8 }>
%hunt.framework.middleware.MiddlewareInfo.MiddlewareInfo = type { [5 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* } }
%hunt.http.routing.RoutingContext.RoutingContext = type { [67 x i8*]*, i8*, [2 x i8*]* }
%hunt.framework.view.View.View = type { [15 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, i32, [4 x i8], %hunt.framework.view.Environment.Environment*, { i64, i8* }, %std.json.JSONValue }
%hunt.framework.view.Environment.Environment = type { [14 x i8*]*, i8*, %hunt.framework.http.Request.Request*, { i64, i8* }, { i64, i8* }, %"hunt.framework.view.Parser.Parser!(Lexer!(\22{{\22, \22}}\22, \22{%\22, \22%}\22, \22{#\22, \22#}\22, \22#!\22, \22##!\22)).Parser", { i64, i8* }, { i64, i8* } }
%"hunt.framework.view.Parser.Parser!(Lexer!(\22{{\22, \22}}\22, \22{%\22, \22%}\22, \22{#\22, \22#}\22, \22#!\22, \22##!\22)).Parser" = type { i8*, { i64, %hunt.framework.view.Lexer.Token* }, i8*, { i64, %"hunt.framework.view.Parser.Parser!(Lexer!(\22{{\22, \22}}\22, \22{%\22, \22%}\22, \22{#\22, \22#}\22, \22#!\22, \22##!\22)).Parser.ParserState"* } }
%hunt.framework.view.Lexer.Token = type { i32, [4 x i8], { i64, i8* }, %hunt.framework.view.Lexer.Position }
%hunt.framework.view.Lexer.Position = type { { i64, i8* }, i64, i64 }
%"hunt.framework.view.Parser.Parser!(Lexer!(\22{{\22, \22}}\22, \22{%\22, \22%}\22, \22{#\22, \22#}\22, \22#!\22, \22##!\22)).Parser.ParserState" = type { { i64, %hunt.framework.view.Lexer.Token* }, i8* }
%hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext = type { [5 x i8*]* }
%std.utf.UTFException = type { [11 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, i64, %object.Throwable.TraceInfo*, void (%object.Throwable.TraceInfo*)*, %object.Throwable*, i32, [4 x i8], i64, [4 x i32], i64 }
%hunt.logging.Logger.Logger = type { [11 x i8*]*, i8*, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }, i8, [7 x i8], %hunt.logging.Logger.LogConf, %std.concurrency.Tid, %std.stdio.File, %hunt.logging.Logger.SizeBaseRollover* }
%hunt.logging.Logger.LogConf = type { i32, i8, [3 x i8], { i64, i8* }, { i64, i8* }, i32, [4 x i8] }
%std.concurrency.Tid = type { %std.concurrency.MessageBox* }
%std.concurrency.MessageBox = type <{ [5 x i8*]*, i8*, %"std.concurrency.List!(Message).List", %"std.concurrency.List!(Message).List", %core.sync.mutex.Mutex*, %core.sync.condition.Condition*, %core.sync.condition.Condition*, i64, %"std.concurrency.List!(Message).List", %"std.concurrency.List!(Message).List", i1 (i64)*, i64, i64, i8 }>
%core.sync.condition.Condition = type { [15 x i8*]*, i8*, %core.sync.mutex.Mutex*, %core.sys.posix.sys.types.pthread_cond_t }
%core.sys.posix.sys.types.pthread_cond_t = type { [48 x i8] }
%"std.concurrency.List!(Message).List" = type { %"std.concurrency.List!(Message).List.Node"*, %"std.concurrency.List!(Message).List.Node"*, i64 }
%"std.concurrency.List!(Message).List.Node" = type { %"std.concurrency.List!(Message).List.Node"*, [8 x i8], %std.concurrency.Message }
%std.concurrency.Message = type { i32, [12 x i8], %"std.variant.VariantN!32LU.VariantN" }
%"std.variant.VariantN!32LU.VariantN" = type { [32 x i8], i64 (i32, [32 x i8]*, i8*)*, [8 x i8] }
%std.stdio.File = type { %std.stdio.File.Impl*, { i64, i8* } }
%std.stdio.File.Impl = type { %core.stdc.stdio._IO_FILE*, i32, i8, [3 x i8], i32, [4 x i8] }
%core.stdc.stdio._IO_FILE = type { i32, [4 x i8], i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %core.stdc.stdio._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], [4 x i8], i8*, i64, i8*, i8*, %core.stdc.stdio._IO_FILE*, i8*, i64, i32, [20 x i8] }
%hunt.logging.Logger.SizeBaseRollover = type { [11 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, i32, i32 }
%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result" = type { { i64, i8* }, { i64, i8* }, i64 }
%object.TypeInfo_Const = type { [20 x i8*]*, i8*, %object.TypeInfo* }
%"std.format.spec.FormatSpec!char.FormatSpec" = type { i32, i32, i32, i8, [3 x i8], i32, i8, i8, i8, i8, { i64, i8* }, { i64, i8* }, { i64, i8* } }
%std.format.FormatException = type <{ [10 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, i64, %object.Throwable.TraceInfo*, void (%object.Throwable.TraceInfo*)*, %object.Throwable*, i32 }>
%object.TypeInfo_Struct = type { [20 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, i64 (i8*)*, i1 (i8*, i8*)*, i32 (i8*, i8*)*, { i64, i8* } (i8*)*, i32, [4 x i8], void (i8*)*, void (i8*)*, i32, [4 x i8], %object.TypeInfo*, %object.TypeInfo*, i8* }
%std.json.JSONException = type <{ [10 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, i64, %object.Throwable.TraceInfo*, void (%object.Throwable.TraceInfo*)*, %object.Throwable*, i32 }>
%std.conv.ConvOverflowException = type <{ [10 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, i64, %object.Throwable.TraceInfo*, void (%object.Throwable.TraceInfo*)*, %object.Throwable*, i32 }>
%std.conv.ConvException = type <{ [10 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, i64, %object.Throwable.TraceInfo*, void (%object.Throwable.TraceInfo*)*, %object.Throwable*, i32 }>
%object.ModuleInfo = type { i32, i32 }
%hunt.framework.controller.Controller.Controller = type { [32 x i8*]*, i8*, %hunt.framework.http.Request.Request*, %hunt.framework.http.Response.Response*, { i64, %hunt.framework.middleware.MiddlewareInfo.MiddlewareInfo** }, { i64, %hunt.framework.middleware.MiddlewareInfo.MiddlewareInfo** }, %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.framework.view.View.View*, i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*, { i64, i8* }, i8* }
%std.datetime.systime.SysTime = type { i64, %"std.typecons.Rebindable!(immutable(TimeZone)).Rebindable" }
%"std.typecons.Rebindable!(immutable(TimeZone)).Rebindable" = type { %std.datetime.timezone.TimeZone* }
%std.datetime.timezone.TimeZone = type { [13 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, { i64, i8* } }
%std.datetime.timezone.LocalTime = type { [13 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, { i64, i8* } }
%nest.get = type { { i64, i8* } }
%hunt.http.HttpMetaData.HttpMetaData = type { [25 x i8*]*, i8*, [2 x i8*]*, %hunt.http.HttpVersion.HttpVersion, %hunt.http.HttpFields.HttpFields*, %hunt.http.HttpBody.HttpBody*, i64, { i64, i8* }, { i8*, %hunt.http.HttpFields.HttpFields* (i8*)* } }
%nest.callHandler = type { %object.Throwable* }
%hunt.framework.config.ApplicationConfig.ApplicationConfig = type { [5 x i8*]*, i8*, %hunt.framework.config.ApplicationConfig.ApplicationConfig.DatabaseConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.ApplicationConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.AuthConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.StaticFilesConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.CookieConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.SessionConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.CacheConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpsConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.RouteConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.QueueConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.TaskConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.RedisConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.GrpcConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.LoggingConfig, %hunt.framework.config.ApplicationConfig.ApplicationConfig.UploadConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.CornConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.DateConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.MailConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.RpcConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.View, %hunt.framework.config.ApplicationConfig.ApplicationConfig.TraceConf }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.DatabaseConf = type { { i64, i8* }, { i64, i8* }, i16, [6 x i8], { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, i8, [7 x i8], %hunt.framework.config.ApplicationConfig.ApplicationConfig.DbPoolConf }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.DbPoolConf = type { { i64, i8* }, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.ApplicationConf = type { { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, i32, [4 x i8], { i64, i8* } }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.AuthConf = type { { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, i32, i32 }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.StaticFilesConf = type { i8, [7 x i8], { i64, i8* }, i8, [3 x i8], i32 }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.CookieConf = type { { i64, i8* }, { i64, i8* }, i32, i8, i8, [2 x i8] }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.SessionConf = type { { i64, i8* }, i32, [4 x i8] }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.CacheConf = type { { i64, i8* }, { i64, i8* }, i8, [3 x i8], i32, i8, [3 x i8], i32, i32, i8, i8, [2 x i8], i32, i32 }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf = type { { i64, i8* }, { i64, i8* }, i16, [2 x i8], i32, i32, [4 x i8], i64, i64, i32, i8, [3 x i8], { i64, i8* }, { i64, i8* }, { i64, i8* } }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpsConf = type { i8, [7 x i8], { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* } }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.RouteConf = type { { i64, %hunt.framework.config.ApplicationConfig.RouteGroupConfig* } }
%hunt.framework.config.ApplicationConfig.RouteGroupConfig = type { { i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* } }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.QueueConf = type { i8, [7 x i8], { i64, i8* } }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.TaskConf = type { i8, [3 x i8], i32 }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.RedisConf = type { i8, [7 x i8], { i64, i8* }, { i64, i8* }, i16, i16, i32, %hunt.framework.config.ApplicationConfig.ApplicationConfig.RedisPoolConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.RedisClusterConf }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.RedisPoolConf = type { i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.RedisClusterConf = type { i8, [7 x i8], { i64, { i64, i8* }* }, i32, [4 x i8] }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.GrpcConf = type { %hunt.framework.config.ApplicationConfig.GrpcServerConf, { i64, %hunt.framework.config.ApplicationConfig.GrpcClientConf* } }
%hunt.framework.config.ApplicationConfig.GrpcServerConf = type { i8, [3 x i8], i32, { i64, i8* }, i16, [6 x i8] }
%hunt.framework.config.ApplicationConfig.GrpcClientConf = type { { i64, i8* }, { i64, i8* }, i16, [2 x i8], i32 }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.LoggingConfig = type { { i64, i8* }, { i64, i8* }, { i64, i8* }, i8, [7 x i8], { i64, i8* }, i32, [4 x i8] }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.UploadConf = type { { i64, i8* }, i64 }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.CornConf = type { { i64, i8* } }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.DateConf = type { { i64, i8* }, { i64, i8* } }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.MailConf = type { %hunt.framework.config.ApplicationConfig.ApplicationConfig.MailSmtpConf }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.MailSmtpConf = type { { i64, i8* }, { i64, i8* }, i16, [6 x i8], { i64, i8* }, { i64, i8* }, { i64, i8* } }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.RpcConf = type { i8, [7 x i8], %hunt.framework.config.ApplicationConfig.ApplicationConfig.ServiceConf }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.ServiceConf = type { { i64, i8* }, i16, [2 x i8], i32, { i64, i8* } }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.View = type { { i64, i8* }, { i64, i8* }, i32, [4 x i8] }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.TraceConf = type { i8, i8, [6 x i8], %hunt.framework.config.ApplicationConfig.ApplicationConfig.TraceService, { i64, i8* } }
%hunt.framework.config.ApplicationConfig.ApplicationConfig.TraceService = type { { i64, i8* }, i16, [6 x i8] }
%hunt.framework.application.Application.Application = type { [5 x i8*]*, i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }, %hunt.http.server.HttpServer.HttpServer*, %hunt.http.server.HttpServerOptions.HttpServerOptions*, %hunt.framework.config.ApplicationConfig.ApplicationConfig*, i8, [7 x i8], i8*, { i8*, void (i8*)* }, { i8*, void (i8*)* }, %hunt.framework.application.HostEnvironment.HostEnvironment*, { i64, %hunt.console.command.Command.Command** }, %hunt.framework.provider.listener.ServiceProviderListener.ServiceProviderListener*, %hunt.logging.Logger.Logger*, %hunt.framework.breadcrumb.BreadcrumbsManager.BreadcrumbsManager* }
%hunt.http.server.HttpServer.HttpServer = type { [20 x i8*]*, i8*, [4 x i8*]*, i8, [7 x i8], %hunt.net.NetServer.NetServer*, %hunt.net.NetServerOptions.NetServerOptions*, %hunt.http.server.HttpServerOptions.HttpServerOptions*, { i64, i8* }, i32, [4 x i8], { i8*, void (i8*)* }, { i8*, void (i8*, %object.Throwable*)* }, { i8*, void (i8*, %hunt.http.server.HttpServer.HttpServer*, %object.Exception*)* } }
%hunt.net.NetServer.NetServer = type { [13 x i8*]* }
%hunt.framework.application.HostEnvironment.HostEnvironment = type { [14 x i8*]*, i8*, { i64, i8* }, { i64, i8* } }
%hunt.console.command.Command.Command = type { [42 x i8*]*, i8*, %hunt.console.Console.Console*, { i64, i8* }, { i64, { i64, i8* }* }, %hunt.console.input.InputDefinition.InputDefinition*, { i64, i8* }, { i64, i8* }, i8, i8, i8, [5 x i8], { i64, i8* }, %hunt.console.helper.HelperSet.HelperSet*, %hunt.console.command.CommandExecutor.CommandExecutor* }
%hunt.console.Console.Console = type { [37 x i8*]*, i8*, %"hunt.collection.Map.Map!(string, Command).Map"*, i8, [7 x i8], { i64, i8* }, { i64, i8* }, %hunt.console.input.InputDefinition.InputDefinition*, i8, [7 x i8], { i64, i8* }, i8, [7 x i8], %hunt.console.command.Command.Command*, { i64, %hunt.console.command.Command.Command** }, { i64, i32* }, %hunt.console.helper.HelperSet.HelperSet* }
%"hunt.collection.Map.Map!(string, Command).Map" = type { [27 x i8*]* }
%hunt.console.input.InputDefinition.InputDefinition = type { [32 x i8*]*, i8*, %"hunt.collection.Map.Map!(string, InputArgument).Map"*, i32, i8, i8, [2 x i8], %"hunt.collection.Map.Map!(string, InputOption).Map"*, %"hunt.collection.Map.Map!(string, string).Map"* }
%"hunt.collection.Map.Map!(string, InputArgument).Map" = type { [27 x i8*]* }
%"hunt.collection.Map.Map!(string, InputOption).Map" = type { [27 x i8*]* }
%"hunt.collection.Map.Map!(string, string).Map" = type { [27 x i8*]* }
%hunt.console.helper.HelperSet.HelperSet = type { [12 x i8*]*, i8*, [2 x i8*]*, %"hunt.collection.Map.Map!(string, Helper).Map"*, %hunt.console.command.Command.Command* }
%"hunt.collection.Map.Map!(string, Helper).Map" = type { [27 x i8*]* }
%hunt.console.command.CommandExecutor.CommandExecutor = type { [2 x i8*]* }
%hunt.framework.provider.listener.ServiceProviderListener.ServiceProviderListener = type { [4 x i8*]* }
%hunt.framework.breadcrumb.BreadcrumbsManager.BreadcrumbsManager = type { [9 x i8*]*, i8*, %hunt.framework.breadcrumb.Breadcrumbs.Breadcrumbs*, i8* }
%hunt.framework.breadcrumb.Breadcrumbs.Breadcrumbs = type { [9 x i8*]*, i8*, %"std.container.array.Array!(BreadcrumbItem).Array", i8* }
%"std.container.array.Array!(BreadcrumbItem).Array" = type { %"std.typecons.RefCounted!(Payload, RefCountedAutoInitialize.no).RefCounted" }
%"std.typecons.RefCounted!(Payload, RefCountedAutoInitialize.no).RefCounted" = type { %"std.typecons.RefCounted!(Payload, RefCountedAutoInitialize.no).RefCounted.RefCountedStore" }
%"std.typecons.RefCounted!(Payload, RefCountedAutoInitialize.no).RefCounted.RefCountedStore" = type { %"std.typecons.RefCounted!(Payload, RefCountedAutoInitialize.no).RefCounted.RefCountedStore.Impl"* }
%"std.typecons.RefCounted!(Payload, RefCountedAutoInitialize.no).RefCounted.RefCountedStore.Impl" = type { %"std.container.array.Array!(BreadcrumbItem).Array.Payload", i64 }
%"std.container.array.Array!(BreadcrumbItem).Array.Payload" = type { i64, { i64, %hunt.framework.breadcrumb.BreadcrumbItem.BreadcrumbItem** } }
%hunt.framework.breadcrumb.BreadcrumbItem.BreadcrumbItem = type { [5 x i8*]*, i8*, { i64, i8* }, { i64, i8* } }
%nest.callHandler.2 = type { %object.Throwable* }
%nest.callHandler.5 = type { %object.Throwable* }
%nest.callHandler.8 = type { %object.Throwable* }
%hunt.framework.middleware.MiddlewareInterface.MiddlewareInterface = type { [3 x i8*]* }
%nest.decodeImpl = type { i8*, i64 }
%"std.array.Appender!string.Appender" = type { %"std.array.Appender!string.Appender.Data"* }
%"std.array.Appender!string.Appender.Data" = type { i64, { i64, i8* }, i8, [7 x i8] }
%nest.put = type { %"std.array.Appender!string.Appender"* }
%nest.bigDataFun = type { %nest.put*, i64 }
%nest.put.0 = type { %"std.array.Appender!string.Appender"*, i64, i8 }
%nest.format = type { i32 }
%nest.logWarning = type { { i8*, { i64, i8* } (i8*)* } }
%"std.array.Appender!(string[]).Appender" = type { %"std.array.Appender!(string[]).Appender.Data"* }
%"std.array.Appender!(string[]).Appender.Data" = type { i64, { i64, { i64, i8* }* }, i8, [7 x i8] }
%nest.put.1 = type { %"std.array.Appender!(string[]).Appender"*, i64, { i64, i8* } }
%core.memory.BlkInfo_ = type { i8*, i64, i32, [4 x i8] }
%"ldc.intrinsics.OverflowRet!ulong.OverflowRet" = type { i64, i8, [7 x i8] }
%nest.ensureAddable = type { %"std.array.Appender!(string[]).Appender"*, i64, i64, i64, i64, %core.memory.BlkInfo_ }
%nest.emplaceRef = type { { i64, i8* }* }
%"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S" = type { { i64, i8* } }
%nest.logError = type { { i8*, %object.Throwable* (i8*)* } }
%nest.error = type { { i8*, %object.Throwable* (i8*)* }, %hunt.logging.Logger.Logger* }
%nest.formattedWrite = type { %"std.format.spec.FormatSpec!char.FormatSpec" }
%nest.fillUp = type { %"std.format.spec.FormatSpec!char.FormatSpec"*, i64 }
%nest.formatObject = type { %"std.array.Appender!string.Appender"* }
%nest.logError.3 = type { { i8*, %object.Throwable* (i8*)* } }
%nest.error.4 = type { { i8*, %object.Throwable* (i8*)* }, %hunt.logging.Logger.Logger* }
%nest.logError.6 = type { { i8*, %object.Throwable* (i8*)* } }
%nest.error.7 = type { { i8*, %object.Throwable* (i8*)* }, %hunt.logging.Logger.Logger* }
%nest.logError.9 = type { { i8*, %object.Throwable* (i8*)* } }
%nest.error.10 = type { { i8*, %object.Throwable* (i8*)* }, %hunt.logging.Logger.Logger* }
%core.sys.posix.time.timespec = type { i64, i64 }
%nest.assign = type { %std.json.JSONValue*, { i64, i8* } }
%nest.singleSpec = type { %"std.format.spec.FormatSpec!char.FormatSpec"* }
%"std.format.spec.singleSpec!(immutable(char)).singleSpec.DummyOutputRange" = type { [1 x i8] }
%nest.formatValueImpl = type { i8* }

@.str = private unnamed_addr constant [84 x i8] c"_D3app10controller13ApiControllerQp7testApiMFZC4hunt9framework4http12JsonResponseQo\00" ; [#uses = 1]
@.str.1 = private unnamed_addr constant [8 x i8] c"testApi\00" ; [#uses = 1]
@_D66TypeInfo_HAyaDFC4hunt10validation26ConstraintValidatorContextQBcZv6__initZ = linkonce_odr global %object.TypeInfo_AssociativeArray { [20 x i8*]* @_D25TypeInfo_AssociativeArray6__vtblZ, i8* null, %object.TypeInfo* bitcast (%object.TypeInfo_Delegate* @_D62TypeInfo_DFC4hunt10validation26ConstraintValidatorContextQBcZv6__initZ to %object.TypeInfo*), %object.TypeInfo* bitcast (%object.TypeInfo_Array* @_D12TypeInfo_Aya6__initZ to %object.TypeInfo*) } ; [#uses = 4]
@_D25TypeInfo_AssociativeArray6__vtblZ = external constant [20 x i8*] ; [#uses = 2]
@_D62TypeInfo_DFC4hunt10validation26ConstraintValidatorContextQBcZv6__initZ = linkonce_odr global %object.TypeInfo_Delegate { [20 x i8*]* @_D17TypeInfo_Delegate6__vtblZ, i8* null, %object.TypeInfo* @_D10TypeInfo_v6__initZ, { i64, i8* } { i64 53, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i32 0, i32 0) } } ; [#uses = 1]
@_D17TypeInfo_Delegate6__vtblZ = external constant [20 x i8*] ; [#uses = 1]
@_D10TypeInfo_v6__initZ = external global %object.TypeInfo ; [#uses = 1]
@.str.2 = private unnamed_addr constant [54 x i8] c"DFC4hunt10validation26ConstraintValidatorContextQBcZv\00" ; [#uses = 1]
@_D12TypeInfo_Aya6__initZ = external global %object.TypeInfo_Array ; [#uses = 2]
@.str.3 = private unnamed_addr constant [84 x i8] c"_D3app10controller13ApiControllerQp4echoMFAyaZC4hunt9framework4http12JsonResponseQo\00" ; [#uses = 1]
@.str.4 = private unnamed_addr constant [5 x i8] c"echo\00" ; [#uses = 1]
@.str.5 = private unnamed_addr constant [4 x i8] c"msg\00" ; [#uses = 1]
@.str.6 = private unnamed_addr constant [84 x i8] c"_D3app10controller13ApiControllerQp4factMFAyaZC4hunt9framework4http12JsonResponseQo\00" ; [#uses = 1]
@.str.7 = private unnamed_addr constant [5 x i8] c"fact\00" ; [#uses = 1]
@.str.8 = private unnamed_addr constant [2 x i8] c"n\00" ; [#uses = 1]
@.str.9 = private unnamed_addr constant [92 x i8] c"_D4hunt9framework10controller10ControllerQm37isSkippedMiddlewareInControllerActionMFAyaQdZb\00" ; [#uses = 1]
@.str.10 = private unnamed_addr constant [38 x i8] c"isSkippedMiddlewareInControllerAction\00" ; [#uses = 1]
@.str.11 = private unnamed_addr constant [11 x i8] c"actionName\00" ; [#uses = 1]
@.str.12 = private unnamed_addr constant [15 x i8] c"middlewareName\00" ; [#uses = 1]
@.str.13 = private unnamed_addr constant [10 x i8] c"text/html\00" ; [#uses = 1]
@.str.14 = private unnamed_addr constant [41 x i8] c"app.controller.Api.ApiController.testApi\00" ; [#uses = 1]
@.str.15 = private unnamed_addr constant [8 x i8] c"default\00" ; [#uses = 1]
@.str.16 = private unnamed_addr constant [38 x i8] c"app.controller.Api.ApiController.echo\00" ; [#uses = 1]
@.str.17 = private unnamed_addr constant [38 x i8] c"app.controller.Api.ApiController.fact\00" ; [#uses = 1]
@.str.18 = private unnamed_addr constant [65 x i8] c"app.controller.Api.ApiController.isSkippedMiddlewareInController\00" ; [#uses = 1]
@_D3std4json9JSONValue6__initZ = external constant %std.json.JSONValue, align 8 ; [#uses = 1]
@.str.19 = private unnamed_addr constant [9 x i8] c"currtime\00" ; [#uses = 1]
@_D4hunt9framework4http12JsonResponseQo7__ClassZ = external global %object.TypeInfo_Class ; [#uses = 3]
@_D4hunt9framework4http12JsonResponseQo6__vtblZ = external constant [19 x i8*] ; [#uses = 3]
@_D4hunt9framework4http12JsonResponseQo6__initZ = external constant %hunt.framework.http.JsonResponse.JsonResponse, align 8 ; [#uses = 3]
@.str.20 = private unnamed_addr constant [7 x i8] c"result\00" ; [#uses = 1]
@_D3app10controller13ApiControllerQp6__initZ = constant %app.controller.ApiController.ApiController { [38 x i8*]* @_D3app10controller13ApiControllerQp6__vtblZ, i8* null, %hunt.framework.http.Request.Request* null, %hunt.framework.http.Response.Response* null, { i64, %hunt.framework.middleware.MiddlewareInfo.MiddlewareInfo** } zeroinitializer, { i64, %hunt.framework.middleware.MiddlewareInfo.MiddlewareInfo** } zeroinitializer, %hunt.http.routing.RoutingContext.RoutingContext* null, %hunt.framework.view.View.View* null, i8* null, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext* null, { i64, i8* } zeroinitializer, i8* null }, align 8 ; [#uses = 5]
@_D3app10controller13ApiControllerQp6__vtblZ = constant [38 x i8*] [i8* bitcast (%object.TypeInfo_Class* @_D3app10controller13ApiControllerQp7__ClassZ to i8*), i8* bitcast ({ i64, i8* } (%object.Object*)* @_D6object6Object8toStringMFZAya to i8*), i8* bitcast (i64 (%object.Object*)* @_D6object6Object6toHashMFNbNeZm to i8*), i8* bitcast (i32 (%object.Object*, %object.Object*)* @_D6object6Object5opCmpMFCQqZi to i8*), i8* bitcast (i1 (%object.Object*, %object.Object*)* @_D6object6Object8opEqualsMFCQtZb to i8*), i8* bitcast (%hunt.http.routing.RoutingContext.RoutingContext* (%hunt.framework.controller.Controller.Controller*)* @_D4hunt9framework10controller10ControllerQm14routingContextMFZCQCj4http7routing14RoutingContextQq to i8*), i8* bitcast (%hunt.framework.http.Request.Request* (%hunt.framework.controller.Controller.Controller*)* @_D4hunt9framework10controller10ControllerQm7requestMFZCQCbQBz4http7RequestQi to i8*), i8* bitcast (%hunt.framework.http.Request.Request* (%hunt.framework.controller.Controller.Controller*, i1)* @_D4hunt9framework10controller10ControllerQm13createRequestMFbZCQCjQCh4http7RequestQi to i8*), i8* bitcast (void (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* @_D4hunt9framework10controller10ControllerQm8responseMFNdCQCdQCb4http8ResponseQjZv to i8*), i8* bitcast (%hunt.framework.auth.Auth.Auth* (%hunt.framework.controller.Controller.Controller*)* @_D4hunt9framework10controller10ControllerQm4authMFZCQByQBwQp4AuthQf to i8*), i8* bitcast (%hunt.framework.auth.Identity.Identity* (%hunt.framework.controller.Controller.Controller*)* @_D4hunt9framework10controller10ControllerQm4userMFZCQByQBw4auth8IdentityQj to i8*), i8* bitcast (%hunt.framework.view.View.View* (%hunt.framework.controller.Controller.Controller*)* @_D4hunt9framework10controller10ControllerQm4viewMFNdZCQCaQByQr4ViewQf to i8*), i8* bitcast (i1 (%hunt.framework.controller.Controller.Controller*)* @_D4hunt9framework10controller10ControllerQm6beforeMFZb to i8*), i8* bitcast (i1 (%hunt.framework.controller.Controller.Controller*)* @_D4hunt9framework10controller10ControllerQm5afterMFZb to i8*), i8* bitcast (i1 (%hunt.framework.controller.Controller.Controller*, %hunt.framework.middleware.MiddlewareInterface.MiddlewareInterface*)* @_D4hunt9framework10controller10ControllerQm13addMiddlewareMFCQChQCf10middleware19MiddlewareInterfaceQvZb to i8*), i8* bitcast (void (%hunt.framework.controller.Controller.Controller*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*)* @_D4hunt9framework10controller10ControllerQm21addAcceptedMiddlewareMFAyaQdQfQhZv to i8*), i8* bitcast (void (%hunt.framework.controller.Controller.Controller*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*)* @_D4hunt9framework10controller10ControllerQm20addSkippedMiddlewareMFAyaQdQfQhZv to i8*), i8* bitcast ({ i64, %hunt.framework.middleware.MiddlewareInterface.MiddlewareInterface** } (%hunt.framework.controller.Controller.Controller*, { i64, i8* })* @_D4hunt9framework10controller10ControllerQm34getAcceptedMiddlewaresInRouteGroupMFAyaZACQDhQDf10middleware19MiddlewareInterfaceQv to i8*), i8* bitcast ({ i64, %hunt.framework.middleware.MiddlewareInterface.MiddlewareInterface** } (%hunt.framework.controller.Controller.Controller*, { i64, i8* }, { i64, i8* })* @_D4hunt9framework10controller10ControllerQm33getAcceptedMiddlewaresInRouteItemMFAyaQdZACQDiQDg10middleware19MiddlewareInterfaceQv to i8*), i8* bitcast ({ i64, %hunt.framework.middleware.MiddlewareInterface.MiddlewareInterface** } (%hunt.framework.controller.Controller.Controller*, { i64, i8* })* @_D4hunt9framework10controller10ControllerQm34getAcceptedMiddlewaresInControllerMFAyaZACQDhQDf10middleware19MiddlewareInterfaceQv to i8*), i8* bitcast (i1 (%hunt.framework.controller.Controller.Controller*, { i64, i8* }, { i64, i8* })* @_D4hunt9framework10controller10ControllerQm31isSkippedMiddlewareInRouteGroupMFAyaQdZb to i8*), i8* bitcast (i1 (%hunt.framework.controller.Controller.Controller*, { i64, i8* }, { i64, i8* }, { i64, i8* }*)* @_D4hunt9framework10controller10ControllerQm30isSkippedMiddlewareInRouteItemMFAyaQdQfZb to i8*), i8* bitcast (i1 (%hunt.framework.controller.Controller.Controller*, { i64, i8* }, { i64, i8* })* @_D4hunt9framework10controller10ControllerQm37isSkippedMiddlewareInControllerActionMFAyaQdZb to i8*), i8* bitcast (i8* (%hunt.framework.controller.Controller.Controller*)* @_D4hunt9framework10controller10ControllerQm14getMiddlewaresMFZHAyaCQCnQCl10middleware19MiddlewareInterfaceQv to i8*), i8* bitcast (%hunt.framework.http.Response.Response* (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* @_D4hunt9framework10controller10ControllerQm15processResponseMFCQCjQCh4http8ResponseQjZQy to i8*), i8* bitcast (%hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext* (%hunt.framework.controller.Controller.Controller*)* @_D4hunt9framework10controller10ControllerQm8validateMFZCQCc10validation26ConstraintValidatorContextQBc to i8*), i8* bitcast (void (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* @_D4hunt9framework10controller10ControllerQm10raiseErrorMFCQCeQCc4http8ResponseQjZv to i8*), i8* bitcast (%hunt.framework.http.Response.Response* (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* @_D4hunt9framework10controller10ControllerQm7onErrorMFCQCaQBy4http8ResponseQjZQy to i8*), i8* bitcast (void (%hunt.framework.controller.Controller.Controller*)* @_D4hunt9framework10controller10ControllerQm4doneMFZv to i8*), i8* bitcast (void (%hunt.framework.controller.Controller.Controller*)* @_D4hunt9framework10controller10ControllerQm10handleCorsMFZv to i8*), i8* bitcast (void (%hunt.framework.controller.Controller.Controller*)* @_D4hunt9framework10controller10ControllerQm18handleAuthResponseMFZv to i8*), i8* bitcast (void (%hunt.framework.controller.Controller.Controller*)* @_D4hunt9framework10controller10ControllerQm7disposeMFZv to i8*), i8* bitcast (%hunt.framework.http.JsonResponse.JsonResponse* (%app.controller.ApiController.ApiController*)* @_D3app10controller13ApiControllerQp7testApiMFZC4hunt9framework4http12JsonResponseQo to i8*), i8* bitcast (%hunt.framework.http.JsonResponse.JsonResponse* (%app.controller.ApiController.ApiController*, { i64, i8* })* @_D3app10controller13ApiControllerQp4echoMFAyaZC4hunt9framework4http12JsonResponseQo to i8*), i8* bitcast (%hunt.framework.http.JsonResponse.JsonResponse* (%app.controller.ApiController.ApiController*, { i64, i8* })* @_D3app10controller13ApiControllerQp4factMFAyaZC4hunt9framework4http12JsonResponseQo to i8*), i8* bitcast (void (%app.controller.ApiController.ApiController*)* @_D3app10controller13ApiControllerQp8__mixin48__mixin121initializeMiddlewaresMFZv to i8*), i8* bitcast (i32 (%app.controller.ApiController.ApiController*, i32)* @_D3app10controller13ApiControllerQp4factMFiZi to i8*), i8* bitcast (void (%app.controller.ApiController.ApiController*, { i64, i8* }, %hunt.http.routing.RoutingContext.RoutingContext*)* @_D3app10controller13ApiControllerQp8__mixin48__mixin116callActionMethodMFAyaC4hunt4http7routing14RoutingContextQqZv to i8*)] ; [#uses = 6]
@_D3app10controller13ApiControllerQp7__ClassZ = global %object.TypeInfo_Class { [21 x i8*]* @_D14TypeInfo_Class6__vtblZ, i8* null, { i64, i8* } { i64 120, i8* bitcast (%app.controller.ApiController.ApiController* @_D3app10controller13ApiControllerQp6__initZ to i8*) }, { i64, i8* } { i64 42, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21, i32 0, i32 0) }, { i64, i8** } { i64 38, i8** getelementptr inbounds ([38 x i8*], [38 x i8*]* @_D3app10controller13ApiControllerQp6__vtblZ, i32 0, i32 0) }, { i64, %object.Interface* } zeroinitializer, %object.TypeInfo_Class* @_D4hunt9framework10controller10ControllerQm7__ClassZ, i8* null, void (%object.Object*)* null, i32 60, [4 x i8] zeroinitializer, i8* null, { i64, %object.OffsetTypeInfo* } zeroinitializer, void (%object.Object*)* bitcast (%app.controller.ApiController.ApiController* (%app.controller.ApiController.ApiController*)* @_D3app10controller13ApiControllerQp6__ctorMFZCQBsQBrQBiQBl to void (%object.Object*)*), i8* bitcast ([2 x i64]* @_D6object__T10RTInfoImplVAmA2i120i28588ZQBcyG2m to i8*) } ; [#uses = 6]
@_D14TypeInfo_Class6__vtblZ = external constant [21 x i8*] ; [#uses = 1]
@.str.21 = private unnamed_addr constant [43 x i8] c"app.controller.ApiController.ApiController\00" ; [#uses = 1]
@_D4hunt9framework10controller10ControllerQm7__ClassZ = external global %object.TypeInfo_Class ; [#uses = 2]
@_D6object__T10RTInfoImplVAmA2i120i28588ZQBcyG2m = weak_odr constant [2 x i64] [i64 120, i64 28588], align 8 ; [#uses = 2]
@_D9Exception7__ClassZ = external global %object.TypeInfo_Class ; [#uses = 1]
@_D9Exception6__vtblZ = external constant [10 x i8*] ; [#uses = 1]
@_D9Exception6__initZ = external constant %object.Exception, align 8 ; [#uses = 1]
@.str.22 = private unnamed_addr constant [19 x i8] c"Enforcement failed\00" ; [#uses = 1]
@_D12TypeInfo_Axa6__initZ = external global %object.TypeInfo_Array ; [#uses = 1]
@.str.23 = private unnamed_addr constant [74 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/core/internal/array/duplication.d\00" ; [#uses = 1]
@_D6object__T10RTInfoImplVAmA2i8i1ZQwyG2m = weak_odr constant [2 x i64] [i64 8, i64 1], align 8 ; [#uses = 0]
@.str.24 = private unnamed_addr constant [56 x i8] c"Attempting to fetch the front of an empty array of char\00" ; [#uses = 1]
@.str.25 = private unnamed_addr constant [63 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/std/range/primitives.d\00" ; [#uses = 1]
@.str.26 = private unnamed_addr constant [45 x i8] c"Attempted to decode past the end of a string\00" ; [#uses = 1]
@.str.27 = private unnamed_addr constant [50 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/std/utf.d\00" ; [#uses = 1]
@.str.28 = private unnamed_addr constant [58 x i8] c"Attempting to popFront() past the end of an array of char\00" ; [#uses = 1]
@_D3std5range10primitives__T8popFrontTaZQmFNaNbNeMKANgaZ12charWidthTabyAh = weak_odr constant { i64, i8* } { i64 64, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.constarray, i32 0, i32 0) }, align 8 ; [#uses = 1]
@.constarray = internal global [64 x i8] c"\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\04\04\04\04\04\04\04\04\05\05\05\05\06\06\01\01" ; [#uses = 1]
@.str.29 = private unnamed_addr constant [23 x i8] c"Invalid UTF-8 sequence\00" ; [#uses = 1]
@_D3std3utf12UTFException7__ClassZ = external global %object.TypeInfo_Class ; [#uses = 2]
@_D3std3utf12UTFException6__vtblZ = external constant [11 x i8*] ; [#uses = 2]
@_D3std3utf12UTFException6__initZ = external constant %std.utf.UTFException, align 8 ; [#uses = 2]
@.str.30 = private unnamed_addr constant [52 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/std/array.d\00" ; [#uses = 1]
@.str.31 = private unnamed_addr constant [41 x i8] c"Encoding a surrogate code point in UTF-8\00" ; [#uses = 1]
@.str.32 = private unnamed_addr constant [40 x i8] c"Encoding an invalid code point in UTF-8\00" ; [#uses = 1]
@_D6object__T10RTInfoImplVAmA2i16i2ZQxyG2m = weak_odr constant [2 x i64] [i64 16, i64 2], align 8 ; [#uses = 0]
@.str.33 = private unnamed_addr constant [1 x i8] zeroinitializer ; [#uses = 1]
@.str.34 = private unnamed_addr constant [31 x i8] c"Orphan format arguments: args[\00" ; [#uses = 1]
@.str.35 = private unnamed_addr constant [3 x i8] c"..\00" ; [#uses = 1]
@.str.36 = private unnamed_addr constant [2 x i8] c"]\00" ; [#uses = 1]
@.str.37 = private unnamed_addr constant [61 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/std/format/package.d\00" ; [#uses = 1]
@_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz = external global %hunt.logging.Logger.Logger*, align 8 ; [#uses = 15]
@.str.38 = private unnamed_addr constant [68 x i8] c"hunt.http.server.HttpServerRequest.HttpServerRequest.get!string.get\00" ; [#uses = 1]
@.str.39 = private unnamed_addr constant [90 x i8] c"../../.dub/packages/hunt-http/0.8.2/hunt-http/source/hunt/http/server/HttpServerRequest.d\00" ; [#uses = 1]
@.str.40 = private unnamed_addr constant [5 x i8] c"true\00" ; [#uses = 1]
@.str.41 = private unnamed_addr constant [6 x i8] c"false\00" ; [#uses = 1]
@.str.42 = private unnamed_addr constant [240 x i8] c"\0A\09registerRouteHandler(\22app.controller.Api.ApiController.testApi\22, (context) { \0A                            context.groupName = \22default\22;\0A                            callHandler!(ApiController,\22testApi\22)(context);\0A                    });\0A\00" ; [#uses = 1]
@.str.43 = private unnamed_addr constant [234 x i8] c"\0A\09registerRouteHandler(\22app.controller.Api.ApiController.echo\22, (context) { \0A                            context.groupName = \22default\22;\0A                            callHandler!(ApiController,\22echo\22)(context);\0A                    });\0A\00" ; [#uses = 1]
@.str.44 = private unnamed_addr constant [234 x i8] c"\0A\09registerRouteHandler(\22app.controller.Api.ApiController.fact\22, (context) { \0A                            context.groupName = \22default\22;\0A                            callHandler!(ApiController,\22fact\22)(context);\0A                    });\0A\00" ; [#uses = 1]
@.str.45 = private unnamed_addr constant [294 x i8] c"\0A\09registerRouteHandler(\22app.controller.Api.ApiController.isSkippedMiddlewareInController\22, (context) { \0A                            context.groupName = \22default\22;\0A                            callHandler!(ApiController,\22isSkippedMiddlewareInControllerAction\22)(context);\0A                    });\0A\00" ; [#uses = 1]
@.str.46 = private unnamed_addr constant [28 x i8] c"The input must not be empty\00" ; [#uses = 1]
@.str.47 = private unnamed_addr constant [66 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/std/algorithm/iteration.d\00" ; [#uses = 1]
@.str.48 = private unnamed_addr constant [52 x i8] c"Attempting to fetch the front of an empty splitter.\00" ; [#uses = 1]
@.str.49 = private unnamed_addr constant [42 x i8] c"Attempting to popFront an empty splitter.\00" ; [#uses = 1]
@_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result6__initZ = weak_odr constant %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result" { { i64, i8* } zeroinitializer, { i64, i8* } zeroinitializer, i64 -1 }, align 8 ; [#uses = 0]
@_D13TypeInfo_xAya6__initZ = linkonce_odr global %object.TypeInfo_Const { [20 x i8*]* @_D14TypeInfo_Const6__vtblZ, i8* null, %object.TypeInfo* bitcast (%object.TypeInfo_Array* @_D12TypeInfo_Aya6__initZ to %object.TypeInfo*) } ; [#uses = 7]
@_D14TypeInfo_Const6__vtblZ = external constant [20 x i8*] ; [#uses = 9]
@_D11TypeInfo_xm6__initZ = linkonce_odr global %object.TypeInfo_Const { [20 x i8*]* @_D14TypeInfo_Const6__vtblZ, i8* null, %object.TypeInfo* @_D10TypeInfo_m6__initZ } ; [#uses = 4]
@_D10TypeInfo_m6__initZ = external global %object.TypeInfo ; [#uses = 1]
@_D6object__T10RTInfoImplVAmA2i40i10ZQyyG2m = weak_odr constant [2 x i64] [i64 40, i64 10], align 8 ; [#uses = 0]
@_D14TypeInfo_xAAya6__initZ = linkonce_odr global %object.TypeInfo_Const { [20 x i8*]* @_D14TypeInfo_Const6__vtblZ, i8* null, %object.TypeInfo* bitcast (%object.TypeInfo_Array* @_D14TypeInfo_AxAya6__initZ to %object.TypeInfo*) } ; [#uses = 2]
@_D14TypeInfo_AxAya6__initZ = linkonce_odr global %object.TypeInfo_Array { [20 x i8*]* @_D14TypeInfo_Array6__vtblZ, i8* null, %object.TypeInfo* bitcast (%object.TypeInfo_Const* @_D13TypeInfo_xAya6__initZ to %object.TypeInfo*) } ; [#uses = 1]
@_D14TypeInfo_Array6__vtblZ = external constant [20 x i8*] ; [#uses = 2]
@_D11TypeInfo_xb6__initZ = linkonce_odr global %object.TypeInfo_Const { [20 x i8*]* @_D14TypeInfo_Const6__vtblZ, i8* null, %object.TypeInfo* @_D10TypeInfo_b6__initZ } ; [#uses = 4]
@_D10TypeInfo_b6__initZ = external global %object.TypeInfo ; [#uses = 1]
@.str.50 = private unnamed_addr constant [58 x i8] c"the reallocation would exceed the available pointer range\00" ; [#uses = 1]
@.str.51 = private unnamed_addr constant [54 x i8] c"Attempting to shrink Appender with newlength > length\00" ; [#uses = 1]
@.str.52 = private unnamed_addr constant [60 x i8] c"Attempting to shrink empty Appender with non-zero newlength\00" ; [#uses = 1]
@_D13TypeInfo_AAya6__initZ = linkonce_odr global %object.TypeInfo_Array { [20 x i8*]* @_D14TypeInfo_Array6__vtblZ, i8* null, %object.TypeInfo* bitcast (%object.TypeInfo_Array* @_D12TypeInfo_Aya6__initZ to %object.TypeInfo*) } ; [#uses = 2]
@.str.53 = private unnamed_addr constant [72 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/core/internal/array/appending.d\00" ; [#uses = 1]
@_D6object__T10RTInfoImplVAmA2i32i4ZQxyG2m = weak_odr constant [2 x i64] [i64 32, i64 4], align 8 ; [#uses = 0]
@_D4hunt9framework4http8ResponseQj7__ClassZ = external global %object.TypeInfo_Class ; [#uses = 4]
@_D4hunt9framework4http8ResponseQj6__vtblZ = external constant [18 x i8*] ; [#uses = 4]
@_D4hunt9framework4http8ResponseQj6__initZ = external constant %hunt.framework.http.Response.Response, align 8 ; [#uses = 4]
@.str.54 = private unnamed_addr constant [24 x i8] c"text/html;charset=UTF-8\00" ; [#uses = 1]
@_D6object9Throwable7__ClassZ = external global %object.TypeInfo_Class ; [#uses = 6]
@.str.55 = private unnamed_addr constant [88 x i8] c"hunt.framework.controller.Controller.callHandler!(ApiController, \22testApi\22).callHandler\00" ; [#uses = 1]
@.str.56 = private unnamed_addr constant [102 x i8] c"../../.dub/packages/hunt-framework/3.4.6/hunt-framework/source/hunt/framework/controller/Controller.d\00" ; [#uses = 1]
@.str.57 = private unnamed_addr constant [3 x i8] c"%s\00" ; [#uses = 1]
@_D3std6format4spec__T10FormatSpecTaZQp6__initZ = weak_odr constant %"std.format.spec.FormatSpec!char.FormatSpec" { i32 0, i32 2147483646, i32 2147483646, i8 0, [3 x i8] zeroinitializer, i32 44, i8 115, i8 0, i8 0, i8 0, { i64, i8* } zeroinitializer, { i64, i8* } zeroinitializer, { i64, i8* } zeroinitializer }, align 8 ; [#uses = 1]
@.str.58 = private unnamed_addr constant [27 x i8] c"Orphan format specifier: %\00" ; [#uses = 1]
@.str.59 = private unnamed_addr constant [59 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/std/format/write.d\00" ; [#uses = 1]
@.str.60 = private unnamed_addr constant [36 x i8] c"The index must be greater than zero\00" ; [#uses = 1]
@.str.61 = private unnamed_addr constant [40 x i8] c"The precision must be greater than zero\00" ; [#uses = 1]
@_D3std6format15FormatException7__ClassZ = external global %object.TypeInfo_Class ; [#uses = 12]
@_D3std6format15FormatException6__vtblZ = external constant [10 x i8*] ; [#uses = 12]
@_D3std6format15FormatException6__initZ = external constant %std.format.FormatException, align 8 ; [#uses = 12]
@.str.62 = private unnamed_addr constant [23 x i8] c"Positional specifier %\00" ; [#uses = 1]
@.str.63 = private unnamed_addr constant [16 x i8] c" index exceeds \00" ; [#uses = 1]
@.str.64 = private unnamed_addr constant [30 x i8] c"Incorrect format specifier: %\00" ; [#uses = 1]
@.str.65 = private unnamed_addr constant [58 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/std/format/spec.d\00" ; [#uses = 1]
@.str.66 = private unnamed_addr constant [20 x i8] c"$ expected after '*\00" ; [#uses = 1]
@.str.67 = private unnamed_addr constant [19 x i8] c"' in format string\00" ; [#uses = 1]
@.str.68 = private unnamed_addr constant [29 x i8] c"Incorrect format specifier %\00" ; [#uses = 1]
@.str.69 = private unnamed_addr constant [11 x i8] c"$ expected\00" ; [#uses = 1]
@.str.70 = private unnamed_addr constant [29 x i8] c"Incorrect format specifier: \00" ; [#uses = 1]
@_D11TypeInfo_xi6__initZ = linkonce_odr global %object.TypeInfo_Const { [20 x i8*]* @_D14TypeInfo_Const6__vtblZ, i8* null, %object.TypeInfo* @_D10TypeInfo_i6__initZ } ; [#uses = 6]
@_D10TypeInfo_i6__initZ = external global %object.TypeInfo ; [#uses = 1]
@_D11TypeInfo_xw6__initZ = linkonce_odr global %object.TypeInfo_Const { [20 x i8*]* @_D14TypeInfo_Const6__vtblZ, i8* null, %object.TypeInfo* @_D10TypeInfo_w6__initZ } ; [#uses = 2]
@_D10TypeInfo_w6__initZ = external global %object.TypeInfo ; [#uses = 1]
@_D11TypeInfo_xa6__initZ = linkonce_odr global %object.TypeInfo_Const { [20 x i8*]* @_D14TypeInfo_Const6__vtblZ, i8* null, %object.TypeInfo* @_D10TypeInfo_a6__initZ } ; [#uses = 2]
@_D10TypeInfo_a6__initZ = external global %object.TypeInfo ; [#uses = 1]
@_D11TypeInfo_xh6__initZ = linkonce_odr global %object.TypeInfo_Const { [20 x i8*]* @_D14TypeInfo_Const6__vtblZ, i8* null, %object.TypeInfo* @_D10TypeInfo_h6__initZ } ; [#uses = 8]
@_D10TypeInfo_h6__initZ = external global %object.TypeInfo ; [#uses = 1]
@_D12TypeInfo_xAa6__initZ = linkonce_odr global %object.TypeInfo_Const { [20 x i8*]* @_D14TypeInfo_Const6__vtblZ, i8* null, %object.TypeInfo* bitcast (%object.TypeInfo_Array* @_D12TypeInfo_Axa6__initZ to %object.TypeInfo*) } ; [#uses = 6]
@.str.71 = private unnamed_addr constant [35 x i8] c"Unterminated format specifier: \22%\22\00" ; [#uses = 1]
@.str.72 = private unnamed_addr constant [14 x i8] c"integer width\00" ; [#uses = 1]
@.str.73 = private unnamed_addr constant [16 x i8] c" expected, not \00" ; [#uses = 1]
@.str.74 = private unnamed_addr constant [10 x i8] c"Throwable\00" ; [#uses = 1]
@.str.75 = private unnamed_addr constant [16 x i8] c" for argument #\00" ; [#uses = 1]
@.str.76 = private unnamed_addr constant [68 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/std/format/internal/write.d\00" ; [#uses = 1]
@.str.77 = private unnamed_addr constant [9 x i8] c"Missing \00" ; [#uses = 1]
@.str.78 = private unnamed_addr constant [10 x i8] c" argument\00" ; [#uses = 1]
@.str.79 = private unnamed_addr constant [18 x i8] c"integer precision\00" ; [#uses = 1]
@.str.80 = private unnamed_addr constant [22 x i8] c"separator digit width\00" ; [#uses = 1]
@.str.81 = private unnamed_addr constant [20 x i8] c"separator character\00" ; [#uses = 1]
@.str.82 = private unnamed_addr constant [47 x i8] c"Dynamic argument not allowed for `formatValue`\00" ; [#uses = 1]
@.str.83 = private unnamed_addr constant [5 x i8] c"null\00" ; [#uses = 1]
@.str.84 = private unnamed_addr constant [52 x i8] c"Expected '%s' format specifier for type 'Throwable'\00" ; [#uses = 1]
@.str.85 = private unnamed_addr constant [85 x i8] c"hunt.framework.controller.Controller.callHandler!(ApiController, \22echo\22).callHandler\00" ; [#uses = 1]
@.str.86 = private unnamed_addr constant [85 x i8] c"hunt.framework.controller.Controller.callHandler!(ApiController, \22fact\22).callHandler\00" ; [#uses = 1]
@.str.87 = private unnamed_addr constant [118 x i8] c"hunt.framework.controller.Controller.callHandler!(ApiController, \22isSkippedMiddlewareInControllerAction\22).callHandler\00" ; [#uses = 1]
@.str.88 = private unnamed_addr constant [33 x i8] c"JSONValue must be object or null\00" ; [#uses = 1]
@.str.89 = private unnamed_addr constant [51 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/std/json.d\00" ; [#uses = 1]
@_D33TypeInfo_HAyaS3std4json9JSONValue6__initZ = linkonce_odr global %object.TypeInfo_AssociativeArray { [20 x i8*]* @_D25TypeInfo_AssociativeArray6__vtblZ, i8* null, %object.TypeInfo* bitcast (%object.TypeInfo_Struct* @_D29TypeInfo_S3std4json9JSONValue6__initZ to %object.TypeInfo*), %object.TypeInfo* bitcast (%object.TypeInfo_Array* @_D12TypeInfo_Aya6__initZ to %object.TypeInfo*) } ; [#uses = 4]
@_D29TypeInfo_S3std4json9JSONValue6__initZ = linkonce_odr global %object.TypeInfo_Struct { [20 x i8*]* @_D15TypeInfo_Struct6__vtblZ, i8* null, { i64, i8* } { i64 20, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.90, i32 0, i32 0) }, { i64, i8* } { i64 24, i8* bitcast (%std.json.JSONValue* @_D3std4json9JSONValue6__initZ to i8*) }, i64 (i8*)* null, i1 (i8*, i8*)* bitcast (i1 (%std.json.JSONValue*, %std.json.JSONValue*)* @_D3std4json9JSONValue8opEqualsMxFNaNbNiNeKxSQBqQBpQBnZb to i1 (i8*, i8*)*), i32 (i8*, i8*)* null, { i64, i8* } (i8*)* null, i32 1, [4 x i8] zeroinitializer, void (i8*)* null, void (i8*)* null, i32 8, [4 x i8] zeroinitializer, %object.TypeInfo* null, %object.TypeInfo* null, i8* inttoptr (i64 1 to i8*) } ; [#uses = 1]
@_D15TypeInfo_Struct6__vtblZ = external constant [20 x i8*] ; [#uses = 1]
@.str.90 = private unnamed_addr constant [21 x i8] c"S3std4json9JSONValue\00" ; [#uses = 1]
@_D3std4json13JSONException7__ClassZ = external global %object.TypeInfo_Class ; [#uses = 1]
@_D3std4json13JSONException6__vtblZ = external constant [10 x i8*] ; [#uses = 1]
@_D3std4json13JSONException6__initZ = external constant %std.json.JSONException, align 8 ; [#uses = 1]
@_D3std4conv21ConvOverflowException7__ClassZ = external global %object.TypeInfo_Class ; [#uses = 1]
@_D3std4conv21ConvOverflowException6__vtblZ = external constant [10 x i8*] ; [#uses = 1]
@_D3std4conv21ConvOverflowException6__initZ = external constant %std.conv.ConvOverflowException, align 8 ; [#uses = 1]
@.str.91 = private unnamed_addr constant [32 x i8] c"Overflow in integral conversion\00" ; [#uses = 1]
@.str.92 = private unnamed_addr constant [51 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/std/conv.d\00" ; [#uses = 1]
@.str.93 = private unnamed_addr constant [69 x i8] c"Unexpected end of input when converting from type string to type int\00" ; [#uses = 1]
@.str.94 = private unnamed_addr constant [61 x i8] c"Unexpected '\\n' when converting from type string to type int\00" ; [#uses = 1]
@.str.95 = private unnamed_addr constant [13 x i8] c"Unexpected '\00" ; [#uses = 1]
@.str.96 = private unnamed_addr constant [47 x i8] c"' when converting from type string to type int\00" ; [#uses = 1]
@_D3std4conv13ConvException7__ClassZ = external global %object.TypeInfo_Class ; [#uses = 1]
@_D3std4conv13ConvException6__vtblZ = external constant [10 x i8*] ; [#uses = 1]
@_D3std4conv13ConvException6__initZ = external constant %std.conv.ConvException, align 8 ; [#uses = 1]
@.str.97 = private unnamed_addr constant [2 x i8] c".\00" ; [#uses = 1]
@.str.98 = private unnamed_addr constant [11 x i8] c"address = \00" ; [#uses = 1]
@.str.99 = private unnamed_addr constant [10 x i8] c"\0Awidth = \00" ; [#uses = 1]
@.str.100 = private unnamed_addr constant [14 x i8] c"\0Aprecision = \00" ; [#uses = 1]
@.str.101 = private unnamed_addr constant [9 x i8] c"\0Aspec = \00" ; [#uses = 1]
@.str.102 = private unnamed_addr constant [15 x i8] c"\0AindexStart = \00" ; [#uses = 1]
@.str.103 = private unnamed_addr constant [13 x i8] c"\0AindexEnd = \00" ; [#uses = 1]
@.str.104 = private unnamed_addr constant [11 x i8] c"\0AflDash = \00" ; [#uses = 1]
@.str.105 = private unnamed_addr constant [11 x i8] c"\0AflZero = \00" ; [#uses = 1]
@.str.106 = private unnamed_addr constant [12 x i8] c"\0AflSpace = \00" ; [#uses = 1]
@.str.107 = private unnamed_addr constant [11 x i8] c"\0AflPlus = \00" ; [#uses = 1]
@.str.108 = private unnamed_addr constant [12 x i8] c"\0AflEqual = \00" ; [#uses = 1]
@.str.109 = private unnamed_addr constant [11 x i8] c"\0AflHash = \00" ; [#uses = 1]
@.str.110 = private unnamed_addr constant [16 x i8] c"\0AflSeparator = \00" ; [#uses = 1]
@.str.111 = private unnamed_addr constant [11 x i8] c"\0Anested = \00" ; [#uses = 1]
@.str.112 = private unnamed_addr constant [13 x i8] c"\0Atrailing = \00" ; [#uses = 1]
@.str.113 = private unnamed_addr constant [39 x i8] c"fmt must be at least 2 characters long\00" ; [#uses = 1]
@.str.114 = private unnamed_addr constant [36 x i8] c"fmt must start with a '%' character\00" ; [#uses = 1]
@.str.115 = private unnamed_addr constant [43 x i8] c"'%%' is not a permissible format specifier\00" ; [#uses = 1]
@.str.116 = private unnamed_addr constant [37 x i8] c"Trailing characters in fmt string: '\00" ; [#uses = 1]
@.str.117 = private unnamed_addr constant [47 x i8] c"Expected one of %s, %x or %X for pointer type.\00" ; [#uses = 1]
@.str.118 = private unnamed_addr constant [40 x i8] c"Incorrect format specifier for range: %\00" ; [#uses = 1]
@.str.119 = private unnamed_addr constant [2 x i8] c"0\00" ; [#uses = 1]
@.str.120 = private unnamed_addr constant [66 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/std/algorithm/searching.d\00" ; [#uses = 1]
@.str.121 = private unnamed_addr constant [58 x i8] c"/usr/lib/ldc/x86_64-linux-gnu/include/d/std/uni/package.d\00" ; [#uses = 1]
@_D6object__T10RTInfoImplVAmA2i72i336ZQzyG2m = weak_odr constant [2 x i64] [i64 72, i64 336], align 8 ; [#uses = 0]
@_D4hunt9framework12__ModuleInfoZ = external global %0 ; [#uses = 1]
@_D4hunt4http6server17HttpServerRequest12__ModuleInfoZ = external global %1 ; [#uses = 1]
@_D4hunt4http6server18HttpServerResponse12__ModuleInfoZ = external global %2 ; [#uses = 1]
@_D4hunt4http7routing14RoutingContext12__ModuleInfoZ = external global %3 ; [#uses = 1]
@_D4hunt4http8HttpBody12__ModuleInfoZ = external global %4 ; [#uses = 1]
@_D4hunt7logging12__ModuleInfoZ = external global %5 ; [#uses = 1]
@_D4hunt9framework10middleware19MiddlewareInterface12__ModuleInfoZ = external global %6 ; [#uses = 1]
@_D4hunt4util14ResoureManager12__ModuleInfoZ = external global %7 ; [#uses = 1]
@_D3app10controller13ApiController12__ModuleInfoZ = global %8 { i32 -2147480544, i32 0, void ()* @_D3app10controller13ApiControllerQp8__mixin48__mixin127_sharedStaticCtor_L568_C5_1FZv, i64 8, [8 x %object.ModuleInfo*] [%object.ModuleInfo* bitcast (%0* @_D4hunt9framework12__ModuleInfoZ to %object.ModuleInfo*), %object.ModuleInfo* bitcast (%1* @_D4hunt4http6server17HttpServerRequest12__ModuleInfoZ to %object.ModuleInfo*), %object.ModuleInfo* bitcast (%2* @_D4hunt4http6server18HttpServerResponse12__ModuleInfoZ to %object.ModuleInfo*), %object.ModuleInfo* bitcast (%3* @_D4hunt4http7routing14RoutingContext12__ModuleInfoZ to %object.ModuleInfo*), %object.ModuleInfo* bitcast (%4* @_D4hunt4http8HttpBody12__ModuleInfoZ to %object.ModuleInfo*), %object.ModuleInfo* bitcast (%5* @_D4hunt7logging12__ModuleInfoZ to %object.ModuleInfo*), %object.ModuleInfo* bitcast (%6* @_D4hunt9framework10middleware19MiddlewareInterface12__ModuleInfoZ to %object.ModuleInfo*), %object.ModuleInfo* bitcast (%7* @_D4hunt4util14ResoureManager12__ModuleInfoZ to %object.ModuleInfo*)], i64 1, [1 x %object.TypeInfo_Class*] [%object.TypeInfo_Class* @_D3app10controller13ApiControllerQp7__ClassZ], [29 x i8] c"app.controller.ApiController\00" } ; [#uses = 1]
@_D3app10controller13ApiController11__moduleRefZ = linkonce_odr hidden global %object.ModuleInfo* bitcast (%8* @_D3app10controller13ApiController12__ModuleInfoZ to %object.ModuleInfo*), section "__minfo" ; [#uses = 1]
@llvm.used = appending global [1 x i8*] [i8* bitcast (%object.ModuleInfo** @_D3app10controller13ApiController11__moduleRefZ to i8*)], section "llvm.metadata" ; [#uses = 0]

; [#uses = 1]
; Function Attrs: uwtable
define void @_D3app10controller13ApiControllerQp8__mixin48__mixin121initializeMiddlewaresMFZv(%app.controller.ApiController.ApiController* nonnull %.this_arg) #0 {
  %this = alloca %app.controller.ApiController.ApiController*, align 8 ; [#uses = 1, size/byte = 8]
  store %app.controller.ApiController.ApiController* %.this_arg, %app.controller.ApiController.ApiController** %this, align 8
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define void @_D3app10controller13ApiControllerQp8__mixin48__mixin116callActionMethodMFAyaC4hunt4http7routing14RoutingContextQqZv(%app.controller.ApiController.ApiController* nonnull %.this_arg, { i64, i8* } %methodName_arg, %hunt.http.routing.RoutingContext.RoutingContext* %context_arg) #0 {
  %this = alloca %app.controller.ApiController.ApiController*, align 8 ; [#uses = 41, size/byte = 8]
  %methodName = alloca { i64, i8* }, align 8      ; [#uses = 2, size/byte = 16]
  %context = alloca %hunt.http.routing.RoutingContext.RoutingContext*, align 8 ; [#uses = 2, size/byte = 8]
  %rb = alloca %hunt.http.HttpBody.HttpBody*, align 8 ; [#uses = 1, size/byte = 8]
  %middleResponse = alloca %hunt.framework.http.Response.Response*, align 8 ; [#uses = 3, size/byte = 8]
  %__aaval2012 = alloca { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }, align 8 ; [#uses = 2, size/byte = 16]
  %.makelvaluetmp = alloca { i64, i8* }, align 8  ; [#uses = 3, size/byte = 16]
  %result = alloca %hunt.framework.http.JsonResponse.JsonResponse*, align 8 ; [#uses = 2, size/byte = 8]
  %middleResponse7 = alloca %hunt.framework.http.Response.Response*, align 8 ; [#uses = 3, size/byte = 8]
  %__var0 = alloca { i64, i8* }, align 8          ; [#uses = 3, size/byte = 16]
  %__aaval2013 = alloca { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }, align 8 ; [#uses = 2, size/byte = 16]
  %.makelvaluetmp18 = alloca { i64, i8* }, align 8 ; [#uses = 3, size/byte = 16]
  %result20 = alloca %hunt.framework.http.JsonResponse.JsonResponse*, align 8 ; [#uses = 2, size/byte = 8]
  %middleResponse27 = alloca %hunt.framework.http.Response.Response*, align 8 ; [#uses = 3, size/byte = 8]
  %__var038 = alloca { i64, i8* }, align 8        ; [#uses = 3, size/byte = 16]
  %__aaval2014 = alloca { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }, align 8 ; [#uses = 2, size/byte = 16]
  %.makelvaluetmp43 = alloca { i64, i8* }, align 8 ; [#uses = 3, size/byte = 16]
  %result45 = alloca %hunt.framework.http.JsonResponse.JsonResponse*, align 8 ; [#uses = 2, size/byte = 8]
  %middleResponse52 = alloca %hunt.framework.http.Response.Response*, align 8 ; [#uses = 3, size/byte = 8]
  %__var063 = alloca { i64, i8* }, align 8        ; [#uses = 3, size/byte = 16]
  %__var1 = alloca { i64, i8* }, align 8          ; [#uses = 3, size/byte = 16]
  %__aaval2015 = alloca { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }, align 8 ; [#uses = 2, size/byte = 16]
  %.makelvaluetmp72 = alloca { i64, i8* }, align 8 ; [#uses = 3, size/byte = 16]
  %result74 = alloca i8, align 1                  ; [#uses = 2, size/byte = 1]
  store %app.controller.ApiController.ApiController* %.this_arg, %app.controller.ApiController.ApiController** %this, align 8
  store { i64, i8* } %methodName_arg, { i64, i8* }* %methodName, align 8
  store %hunt.http.routing.RoutingContext.RoutingContext* %context_arg, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8
  %1 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %2 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %1, i32 0, i32 6 ; [#uses = 1, type = %hunt.http.routing.RoutingContext.RoutingContext**]
  %3 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  store %hunt.http.routing.RoutingContext.RoutingContext* %3, %hunt.http.routing.RoutingContext.RoutingContext** %2, align 8
  store %hunt.http.HttpBody.HttpBody* null, %hunt.http.HttpBody.HttpBody** %rb, align 8
  %4 = load { i64, i8* }, { i64, i8* }* %methodName, align 8 ; [#uses = 1]
  %5 = call i32 @_D4core8internal7switch___T8__switchTyaVxAyaa4_6563686fVxQqa4_66616374VxQBfa7_74657374417069VxQCba37_6973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6eZQFtFNaNbNiNfMxQFtZi({ i64, i8* } %4) #1 ; [#uses = 1]
  switch i32 %5, label %defaultcntr [
    i32 2, label %casecntr
    i32 0, label %casecntr79
    i32 1, label %casecntr80
    i32 3, label %casecntr81
  ]

switchbody:                                       ; No predecessors!
  br label %case

casecntr:                                         ; preds = %0
  br label %case

case:                                             ; preds = %casecntr, %switchbody
  %6 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %7 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %6, i32 0, i32 10 ; [#uses = 2, type = { i64, i8* }*]
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %7, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 83, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %7, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str, i32 0, i32 0), i8** %9, align 8
  %10 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 1]
  %11 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %10, align 8 ; [#uses = 1]
  %12 = call %hunt.framework.http.Response.Response* @_D4hunt9framework10controller10ControllerQm17handleMiddlewaresMFAyaZCQCpQCn4http8ResponseQj(%hunt.framework.controller.Controller.Controller* nonnull %11, { i64, i8* } { i64 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0) }) #1 ; [#uses = 1]
  store %hunt.framework.http.Response.Response* %12, %hunt.framework.http.Response.Response** %middleResponse, align 8
  %13 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %middleResponse, align 8 ; [#uses = 1]
  %14 = icmp ne %hunt.framework.http.Response.Response* %13, null ; [#uses = 1]
  br i1 %14, label %if, label %endif

if:                                               ; preds = %case
  %15 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %16 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %15, align 8 ; [#uses = 1]
  %17 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %16, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %18 = load [32 x i8*]*, [32 x i8*]** %17, align 8 ; [#uses = 1]
  %"response@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %18, i32 0, i32 8 ; [#uses = 1, type = i8**]
  %19 = load i8*, i8** %"response@vtbl", align 8  ; [#uses = 1]
  %response = bitcast i8* %19 to void (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* ; [#uses = 1]
  %20 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %15, align 8 ; [#uses = 1]
  %21 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %middleResponse, align 8 ; [#uses = 1]
  call void %response(%hunt.framework.controller.Controller.Controller* nonnull %20, %hunt.framework.http.Response.Response* %21)
  ret void

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %case
  %22 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %23 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %22, align 8 ; [#uses = 1]
  %24 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %23, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %25 = load [32 x i8*]*, [32 x i8*]** %24, align 8 ; [#uses = 1]
  %"before@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %25, i32 0, i32 12 ; [#uses = 1, type = i8**]
  %26 = load i8*, i8** %"before@vtbl", align 8    ; [#uses = 1]
  %before = bitcast i8* %26 to i1 (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %27 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %22, align 8 ; [#uses = 1]
  %28 = call zeroext i1 %before(%hunt.framework.controller.Controller.Controller* nonnull %27) ; [#uses = 1]
  %29 = icmp eq i1 %28, false                     ; [#uses = 1]
  br i1 %29, label %if1, label %endif2

if1:                                              ; preds = %endif
  ret void

dummy.afterreturn3:                               ; No predecessors!
  br label %endif2

endif2:                                           ; preds = %dummy.afterreturn3, %endif
  store { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* } { i8* null, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* @_D3app10controller13ApiControllerQp8__mixin48__mixin116callActionMethodMFAyaC4hunt4http7routing14RoutingContextQqZ9__lambda5MFNaNbNiNfCQCg10validation26ConstraintValidatorContextQBcZv }, { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* %__aaval2012, align 8
  %30 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %31 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %30, i32 0, i32 11 ; [#uses = 1, type = i8**]
  %32 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 83, i64* %32, align 8
  %33 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str, i32 0, i32 0), i8** %33, align 8
  %34 = bitcast { i64, i8* }* %.makelvaluetmp to i8* ; [#uses = 1]
  %aa.index = call i8* @_aaGetY(i8** nocapture %31, %object.TypeInfo_AssociativeArray* @_D66TypeInfo_HAyaDFC4hunt10validation26ConstraintValidatorContextQBcZv6__initZ, i64 16, i8* nocapture %34) #2 ; [#uses = 1]
  %35 = bitcast i8* %aa.index to { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* ; [#uses = 1]
  %36 = load { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }, { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* %__aaval2012, align 8 ; [#uses = 1]
  store { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* } %36, { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* %35, align 8
  %37 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %38 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %37, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  %39 = load [38 x i8*]*, [38 x i8*]** %38, align 8 ; [#uses = 1]
  %"testApi@vtbl" = getelementptr inbounds [38 x i8*], [38 x i8*]* %39, i32 0, i32 32 ; [#uses = 1, type = i8**]
  %40 = load i8*, i8** %"testApi@vtbl", align 8   ; [#uses = 1]
  %testApi = bitcast i8* %40 to %hunt.framework.http.JsonResponse.JsonResponse* (%app.controller.ApiController.ApiController*)* ; [#uses = 1]
  %41 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %42 = call %hunt.framework.http.JsonResponse.JsonResponse* %testApi(%app.controller.ApiController.ApiController* nonnull %41) ; [#uses = 1]
  store %hunt.framework.http.JsonResponse.JsonResponse* %42, %hunt.framework.http.JsonResponse.JsonResponse** %result, align 8
  %43 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %44 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %43, align 8 ; [#uses = 1]
  %45 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %44, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %46 = load [32 x i8*]*, [32 x i8*]** %45, align 8 ; [#uses = 1]
  %"response@vtbl4" = getelementptr inbounds [32 x i8*], [32 x i8*]* %46, i32 0, i32 8 ; [#uses = 1, type = i8**]
  %47 = load i8*, i8** %"response@vtbl4", align 8 ; [#uses = 1]
  %response5 = bitcast i8* %47 to void (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* ; [#uses = 1]
  %48 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %43, align 8 ; [#uses = 1]
  %49 = bitcast %hunt.framework.http.JsonResponse.JsonResponse** %result to %hunt.framework.http.Response.Response** ; [#uses = 1]
  %50 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %49, align 8 ; [#uses = 1]
  call void %response5(%hunt.framework.controller.Controller.Controller* nonnull %48, %hunt.framework.http.Response.Response* %50)
  %51 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %52 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %51, align 8 ; [#uses = 1]
  %53 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %52, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %54 = load [32 x i8*]*, [32 x i8*]** %53, align 8 ; [#uses = 1]
  %"after@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %54, i32 0, i32 13 ; [#uses = 1, type = i8**]
  %55 = load i8*, i8** %"after@vtbl", align 8     ; [#uses = 1]
  %after = bitcast i8* %55 to i1 (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %56 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %51, align 8 ; [#uses = 1]
  %57 = call zeroext i1 %after(%hunt.framework.controller.Controller.Controller* nonnull %56) ; [#uses = 0]
  br label %switchend

afterbreak:                                       ; No predecessors!
  br label %case6

casecntr79:                                       ; preds = %0
  br label %case6

case6:                                            ; preds = %casecntr79, %afterbreak
  %58 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %59 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %58, i32 0, i32 10 ; [#uses = 2, type = { i64, i8* }*]
  %60 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %59, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 83, i64* %60, align 8
  %61 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %59, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.3, i32 0, i32 0), i8** %61, align 8
  %62 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 1]
  %63 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %62, align 8 ; [#uses = 1]
  %64 = call %hunt.framework.http.Response.Response* @_D4hunt9framework10controller10ControllerQm17handleMiddlewaresMFAyaZCQCpQCn4http8ResponseQj(%hunt.framework.controller.Controller.Controller* nonnull %63, { i64, i8* } { i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0) }) #1 ; [#uses = 1]
  store %hunt.framework.http.Response.Response* %64, %hunt.framework.http.Response.Response** %middleResponse7, align 8
  %65 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %middleResponse7, align 8 ; [#uses = 1]
  %66 = icmp ne %hunt.framework.http.Response.Response* %65, null ; [#uses = 1]
  br i1 %66, label %if8, label %endif9

if8:                                              ; preds = %case6
  %67 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %68 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %67, align 8 ; [#uses = 1]
  %69 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %68, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %70 = load [32 x i8*]*, [32 x i8*]** %69, align 8 ; [#uses = 1]
  %"response@vtbl10" = getelementptr inbounds [32 x i8*], [32 x i8*]* %70, i32 0, i32 8 ; [#uses = 1, type = i8**]
  %71 = load i8*, i8** %"response@vtbl10", align 8 ; [#uses = 1]
  %response11 = bitcast i8* %71 to void (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* ; [#uses = 1]
  %72 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %67, align 8 ; [#uses = 1]
  %73 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %middleResponse7, align 8 ; [#uses = 1]
  call void %response11(%hunt.framework.controller.Controller.Controller* nonnull %72, %hunt.framework.http.Response.Response* %73)
  ret void

dummy.afterreturn12:                              ; No predecessors!
  br label %endif9

endif9:                                           ; preds = %dummy.afterreturn12, %case6
  %74 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %75 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %74, align 8 ; [#uses = 1]
  %76 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %75, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %77 = load [32 x i8*]*, [32 x i8*]** %76, align 8 ; [#uses = 1]
  %"before@vtbl13" = getelementptr inbounds [32 x i8*], [32 x i8*]* %77, i32 0, i32 12 ; [#uses = 1, type = i8**]
  %78 = load i8*, i8** %"before@vtbl13", align 8  ; [#uses = 1]
  %before14 = bitcast i8* %78 to i1 (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %79 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %74, align 8 ; [#uses = 1]
  %80 = call zeroext i1 %before14(%hunt.framework.controller.Controller.Controller* nonnull %79) ; [#uses = 1]
  %81 = icmp eq i1 %80, false                     ; [#uses = 1]
  br i1 %81, label %if15, label %endif16

if15:                                             ; preds = %endif9
  ret void

dummy.afterreturn17:                              ; No predecessors!
  br label %endif16

endif16:                                          ; preds = %dummy.afterreturn17, %endif9
  %82 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %83 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %82, align 8 ; [#uses = 1]
  %84 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %83, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %85 = load [32 x i8*]*, [32 x i8*]** %84, align 8 ; [#uses = 1]
  %"request@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %85, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %86 = load i8*, i8** %"request@vtbl", align 8   ; [#uses = 1]
  %request = bitcast i8* %86 to %hunt.framework.http.Request.Request* (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %87 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %82, align 8 ; [#uses = 1]
  %88 = call %hunt.framework.http.Request.Request* %request(%hunt.framework.controller.Controller.Controller* nonnull %87) ; [#uses = 1]
  %89 = getelementptr inbounds %hunt.framework.http.Request.Request, %hunt.framework.http.Request.Request* %88, i32 0, i32 16 ; [#uses = 1, type = %hunt.http.server.HttpServerRequest.HttpServerRequest**]
  %90 = load %hunt.http.server.HttpServerRequest.HttpServerRequest*, %hunt.http.server.HttpServerRequest.HttpServerRequest** %89, align 8 ; [#uses = 1]
  %91 = call { i64, i8* } @_D4hunt4http6server17HttpServerRequestQt__T3getTAyaZQjMFQiQkZQn(%hunt.http.server.HttpServerRequest.HttpServerRequest* nonnull %90, { i64, i8* } { i64 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i32 0, i32 0) }, { i64, i8* } zeroinitializer) #1 ; [#uses = 2]
  %92 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__var0, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = extractvalue { i64, i8* } %91, 0        ; [#uses = 1]
  store i64 %.len, i64* %92, align 8
  %93 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__var0, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = extractvalue { i64, i8* } %91, 1        ; [#uses = 1]
  store i8* %.ptr, i8** %93, align 8
  store { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* } { i8* null, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* @_D3app10controller13ApiControllerQp8__mixin48__mixin116callActionMethodMFAyaC4hunt4http7routing14RoutingContextQqZ9__lambda9MFNaNbNiNfCQCg10validation26ConstraintValidatorContextQBcZv }, { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* %__aaval2013, align 8
  %94 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %95 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %94, i32 0, i32 11 ; [#uses = 1, type = i8**]
  %96 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp18, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 83, i64* %96, align 8
  %97 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp18, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.3, i32 0, i32 0), i8** %97, align 8
  %98 = bitcast { i64, i8* }* %.makelvaluetmp18 to i8* ; [#uses = 1]
  %aa.index19 = call i8* @_aaGetY(i8** nocapture %95, %object.TypeInfo_AssociativeArray* @_D66TypeInfo_HAyaDFC4hunt10validation26ConstraintValidatorContextQBcZv6__initZ, i64 16, i8* nocapture %98) #2 ; [#uses = 1]
  %99 = bitcast i8* %aa.index19 to { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* ; [#uses = 1]
  %100 = load { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }, { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* %__aaval2013, align 8 ; [#uses = 1]
  store { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* } %100, { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* %99, align 8
  %101 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %102 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %101, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  %103 = load [38 x i8*]*, [38 x i8*]** %102, align 8 ; [#uses = 1]
  %"echo@vtbl" = getelementptr inbounds [38 x i8*], [38 x i8*]* %103, i32 0, i32 33 ; [#uses = 1, type = i8**]
  %104 = load i8*, i8** %"echo@vtbl", align 8     ; [#uses = 1]
  %echo = bitcast i8* %104 to %hunt.framework.http.JsonResponse.JsonResponse* (%app.controller.ApiController.ApiController*, { i64, i8* })* ; [#uses = 1]
  %105 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %106 = load { i64, i8* }, { i64, i8* }* %__var0, align 8 ; [#uses = 1]
  %107 = call %hunt.framework.http.JsonResponse.JsonResponse* %echo(%app.controller.ApiController.ApiController* nonnull %105, { i64, i8* } %106) ; [#uses = 1]
  store %hunt.framework.http.JsonResponse.JsonResponse* %107, %hunt.framework.http.JsonResponse.JsonResponse** %result20, align 8
  %108 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %109 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %108, align 8 ; [#uses = 1]
  %110 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %109, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %111 = load [32 x i8*]*, [32 x i8*]** %110, align 8 ; [#uses = 1]
  %"response@vtbl21" = getelementptr inbounds [32 x i8*], [32 x i8*]* %111, i32 0, i32 8 ; [#uses = 1, type = i8**]
  %112 = load i8*, i8** %"response@vtbl21", align 8 ; [#uses = 1]
  %response22 = bitcast i8* %112 to void (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* ; [#uses = 1]
  %113 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %108, align 8 ; [#uses = 1]
  %114 = bitcast %hunt.framework.http.JsonResponse.JsonResponse** %result20 to %hunt.framework.http.Response.Response** ; [#uses = 1]
  %115 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %114, align 8 ; [#uses = 1]
  call void %response22(%hunt.framework.controller.Controller.Controller* nonnull %113, %hunt.framework.http.Response.Response* %115)
  %116 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %117 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %116, align 8 ; [#uses = 1]
  %118 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %117, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %119 = load [32 x i8*]*, [32 x i8*]** %118, align 8 ; [#uses = 1]
  %"after@vtbl23" = getelementptr inbounds [32 x i8*], [32 x i8*]* %119, i32 0, i32 13 ; [#uses = 1, type = i8**]
  %120 = load i8*, i8** %"after@vtbl23", align 8  ; [#uses = 1]
  %after24 = bitcast i8* %120 to i1 (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %121 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %116, align 8 ; [#uses = 1]
  %122 = call zeroext i1 %after24(%hunt.framework.controller.Controller.Controller* nonnull %121) ; [#uses = 0]
  br label %switchend

afterbreak25:                                     ; No predecessors!
  br label %case26

casecntr80:                                       ; preds = %0
  br label %case26

case26:                                           ; preds = %casecntr80, %afterbreak25
  %123 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %124 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %123, i32 0, i32 10 ; [#uses = 2, type = { i64, i8* }*]
  %125 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %124, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 83, i64* %125, align 8
  %126 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %124, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.6, i32 0, i32 0), i8** %126, align 8
  %127 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 1]
  %128 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %127, align 8 ; [#uses = 1]
  %129 = call %hunt.framework.http.Response.Response* @_D4hunt9framework10controller10ControllerQm17handleMiddlewaresMFAyaZCQCpQCn4http8ResponseQj(%hunt.framework.controller.Controller.Controller* nonnull %128, { i64, i8* } { i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0) }) #1 ; [#uses = 1]
  store %hunt.framework.http.Response.Response* %129, %hunt.framework.http.Response.Response** %middleResponse27, align 8
  %130 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %middleResponse27, align 8 ; [#uses = 1]
  %131 = icmp ne %hunt.framework.http.Response.Response* %130, null ; [#uses = 1]
  br i1 %131, label %if28, label %endif29

if28:                                             ; preds = %case26
  %132 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %133 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %132, align 8 ; [#uses = 1]
  %134 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %133, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %135 = load [32 x i8*]*, [32 x i8*]** %134, align 8 ; [#uses = 1]
  %"response@vtbl30" = getelementptr inbounds [32 x i8*], [32 x i8*]* %135, i32 0, i32 8 ; [#uses = 1, type = i8**]
  %136 = load i8*, i8** %"response@vtbl30", align 8 ; [#uses = 1]
  %response31 = bitcast i8* %136 to void (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* ; [#uses = 1]
  %137 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %132, align 8 ; [#uses = 1]
  %138 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %middleResponse27, align 8 ; [#uses = 1]
  call void %response31(%hunt.framework.controller.Controller.Controller* nonnull %137, %hunt.framework.http.Response.Response* %138)
  ret void

dummy.afterreturn32:                              ; No predecessors!
  br label %endif29

endif29:                                          ; preds = %dummy.afterreturn32, %case26
  %139 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %140 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %139, align 8 ; [#uses = 1]
  %141 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %140, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %142 = load [32 x i8*]*, [32 x i8*]** %141, align 8 ; [#uses = 1]
  %"before@vtbl33" = getelementptr inbounds [32 x i8*], [32 x i8*]* %142, i32 0, i32 12 ; [#uses = 1, type = i8**]
  %143 = load i8*, i8** %"before@vtbl33", align 8 ; [#uses = 1]
  %before34 = bitcast i8* %143 to i1 (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %144 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %139, align 8 ; [#uses = 1]
  %145 = call zeroext i1 %before34(%hunt.framework.controller.Controller.Controller* nonnull %144) ; [#uses = 1]
  %146 = icmp eq i1 %145, false                   ; [#uses = 1]
  br i1 %146, label %if35, label %endif36

if35:                                             ; preds = %endif29
  ret void

dummy.afterreturn37:                              ; No predecessors!
  br label %endif36

endif36:                                          ; preds = %dummy.afterreturn37, %endif29
  %147 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %148 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %147, align 8 ; [#uses = 1]
  %149 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %148, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %150 = load [32 x i8*]*, [32 x i8*]** %149, align 8 ; [#uses = 1]
  %"request@vtbl39" = getelementptr inbounds [32 x i8*], [32 x i8*]* %150, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %151 = load i8*, i8** %"request@vtbl39", align 8 ; [#uses = 1]
  %request40 = bitcast i8* %151 to %hunt.framework.http.Request.Request* (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %152 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %147, align 8 ; [#uses = 1]
  %153 = call %hunt.framework.http.Request.Request* %request40(%hunt.framework.controller.Controller.Controller* nonnull %152) ; [#uses = 1]
  %154 = getelementptr inbounds %hunt.framework.http.Request.Request, %hunt.framework.http.Request.Request* %153, i32 0, i32 16 ; [#uses = 1, type = %hunt.http.server.HttpServerRequest.HttpServerRequest**]
  %155 = load %hunt.http.server.HttpServerRequest.HttpServerRequest*, %hunt.http.server.HttpServerRequest.HttpServerRequest** %154, align 8 ; [#uses = 1]
  %156 = call { i64, i8* } @_D4hunt4http6server17HttpServerRequestQt__T3getTAyaZQjMFQiQkZQn(%hunt.http.server.HttpServerRequest.HttpServerRequest* nonnull %155, { i64, i8* } { i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0) }, { i64, i8* } zeroinitializer) #1 ; [#uses = 2]
  %157 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__var038, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len41 = extractvalue { i64, i8* } %156, 0     ; [#uses = 1]
  store i64 %.len41, i64* %157, align 8
  %158 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__var038, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr42 = extractvalue { i64, i8* } %156, 1     ; [#uses = 1]
  store i8* %.ptr42, i8** %158, align 8
  store { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* } { i8* null, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* @_D3app10controller13ApiControllerQp8__mixin48__mixin116callActionMethodMFAyaC4hunt4http7routing14RoutingContextQqZ10__lambda11MFNaNbNiNfCQCi10validation26ConstraintValidatorContextQBcZv }, { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* %__aaval2014, align 8
  %159 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %160 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %159, i32 0, i32 11 ; [#uses = 1, type = i8**]
  %161 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp43, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 83, i64* %161, align 8
  %162 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp43, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.6, i32 0, i32 0), i8** %162, align 8
  %163 = bitcast { i64, i8* }* %.makelvaluetmp43 to i8* ; [#uses = 1]
  %aa.index44 = call i8* @_aaGetY(i8** nocapture %160, %object.TypeInfo_AssociativeArray* @_D66TypeInfo_HAyaDFC4hunt10validation26ConstraintValidatorContextQBcZv6__initZ, i64 16, i8* nocapture %163) #2 ; [#uses = 1]
  %164 = bitcast i8* %aa.index44 to { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* ; [#uses = 1]
  %165 = load { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }, { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* %__aaval2014, align 8 ; [#uses = 1]
  store { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* } %165, { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* %164, align 8
  %166 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %167 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %166, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  %168 = load [38 x i8*]*, [38 x i8*]** %167, align 8 ; [#uses = 1]
  %"fact@vtbl" = getelementptr inbounds [38 x i8*], [38 x i8*]* %168, i32 0, i32 34 ; [#uses = 1, type = i8**]
  %169 = load i8*, i8** %"fact@vtbl", align 8     ; [#uses = 1]
  %fact = bitcast i8* %169 to %hunt.framework.http.JsonResponse.JsonResponse* (%app.controller.ApiController.ApiController*, { i64, i8* })* ; [#uses = 1]
  %170 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %171 = load { i64, i8* }, { i64, i8* }* %__var038, align 8 ; [#uses = 1]
  %172 = call %hunt.framework.http.JsonResponse.JsonResponse* %fact(%app.controller.ApiController.ApiController* nonnull %170, { i64, i8* } %171) ; [#uses = 1]
  store %hunt.framework.http.JsonResponse.JsonResponse* %172, %hunt.framework.http.JsonResponse.JsonResponse** %result45, align 8
  %173 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %174 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %173, align 8 ; [#uses = 1]
  %175 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %174, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %176 = load [32 x i8*]*, [32 x i8*]** %175, align 8 ; [#uses = 1]
  %"response@vtbl46" = getelementptr inbounds [32 x i8*], [32 x i8*]* %176, i32 0, i32 8 ; [#uses = 1, type = i8**]
  %177 = load i8*, i8** %"response@vtbl46", align 8 ; [#uses = 1]
  %response47 = bitcast i8* %177 to void (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* ; [#uses = 1]
  %178 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %173, align 8 ; [#uses = 1]
  %179 = bitcast %hunt.framework.http.JsonResponse.JsonResponse** %result45 to %hunt.framework.http.Response.Response** ; [#uses = 1]
  %180 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %179, align 8 ; [#uses = 1]
  call void %response47(%hunt.framework.controller.Controller.Controller* nonnull %178, %hunt.framework.http.Response.Response* %180)
  %181 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %182 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %181, align 8 ; [#uses = 1]
  %183 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %182, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %184 = load [32 x i8*]*, [32 x i8*]** %183, align 8 ; [#uses = 1]
  %"after@vtbl48" = getelementptr inbounds [32 x i8*], [32 x i8*]* %184, i32 0, i32 13 ; [#uses = 1, type = i8**]
  %185 = load i8*, i8** %"after@vtbl48", align 8  ; [#uses = 1]
  %after49 = bitcast i8* %185 to i1 (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %186 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %181, align 8 ; [#uses = 1]
  %187 = call zeroext i1 %after49(%hunt.framework.controller.Controller.Controller* nonnull %186) ; [#uses = 0]
  br label %switchend

afterbreak50:                                     ; No predecessors!
  br label %case51

casecntr81:                                       ; preds = %0
  br label %case51

case51:                                           ; preds = %casecntr81, %afterbreak50
  %188 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %189 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %188, i32 0, i32 10 ; [#uses = 2, type = { i64, i8* }*]
  %190 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %189, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 91, i64* %190, align 8
  %191 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %189, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.9, i32 0, i32 0), i8** %191, align 8
  %192 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 1]
  %193 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %192, align 8 ; [#uses = 1]
  %194 = call %hunt.framework.http.Response.Response* @_D4hunt9framework10controller10ControllerQm17handleMiddlewaresMFAyaZCQCpQCn4http8ResponseQj(%hunt.framework.controller.Controller.Controller* nonnull %193, { i64, i8* } { i64 37, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i32 0, i32 0) }) #1 ; [#uses = 1]
  store %hunt.framework.http.Response.Response* %194, %hunt.framework.http.Response.Response** %middleResponse52, align 8
  %195 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %middleResponse52, align 8 ; [#uses = 1]
  %196 = icmp ne %hunt.framework.http.Response.Response* %195, null ; [#uses = 1]
  br i1 %196, label %if53, label %endif54

if53:                                             ; preds = %case51
  %197 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %198 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %197, align 8 ; [#uses = 1]
  %199 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %198, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %200 = load [32 x i8*]*, [32 x i8*]** %199, align 8 ; [#uses = 1]
  %"response@vtbl55" = getelementptr inbounds [32 x i8*], [32 x i8*]* %200, i32 0, i32 8 ; [#uses = 1, type = i8**]
  %201 = load i8*, i8** %"response@vtbl55", align 8 ; [#uses = 1]
  %response56 = bitcast i8* %201 to void (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* ; [#uses = 1]
  %202 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %197, align 8 ; [#uses = 1]
  %203 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %middleResponse52, align 8 ; [#uses = 1]
  call void %response56(%hunt.framework.controller.Controller.Controller* nonnull %202, %hunt.framework.http.Response.Response* %203)
  ret void

dummy.afterreturn57:                              ; No predecessors!
  br label %endif54

endif54:                                          ; preds = %dummy.afterreturn57, %case51
  %204 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %205 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %204, align 8 ; [#uses = 1]
  %206 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %205, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %207 = load [32 x i8*]*, [32 x i8*]** %206, align 8 ; [#uses = 1]
  %"before@vtbl58" = getelementptr inbounds [32 x i8*], [32 x i8*]* %207, i32 0, i32 12 ; [#uses = 1, type = i8**]
  %208 = load i8*, i8** %"before@vtbl58", align 8 ; [#uses = 1]
  %before59 = bitcast i8* %208 to i1 (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %209 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %204, align 8 ; [#uses = 1]
  %210 = call zeroext i1 %before59(%hunt.framework.controller.Controller.Controller* nonnull %209) ; [#uses = 1]
  %211 = icmp eq i1 %210, false                   ; [#uses = 1]
  br i1 %211, label %if60, label %endif61

if60:                                             ; preds = %endif54
  ret void

dummy.afterreturn62:                              ; No predecessors!
  br label %endif61

endif61:                                          ; preds = %dummy.afterreturn62, %endif54
  %212 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %213 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %212, align 8 ; [#uses = 1]
  %214 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %213, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %215 = load [32 x i8*]*, [32 x i8*]** %214, align 8 ; [#uses = 1]
  %"request@vtbl64" = getelementptr inbounds [32 x i8*], [32 x i8*]* %215, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %216 = load i8*, i8** %"request@vtbl64", align 8 ; [#uses = 1]
  %request65 = bitcast i8* %216 to %hunt.framework.http.Request.Request* (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %217 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %212, align 8 ; [#uses = 1]
  %218 = call %hunt.framework.http.Request.Request* %request65(%hunt.framework.controller.Controller.Controller* nonnull %217) ; [#uses = 1]
  %219 = getelementptr inbounds %hunt.framework.http.Request.Request, %hunt.framework.http.Request.Request* %218, i32 0, i32 16 ; [#uses = 1, type = %hunt.http.server.HttpServerRequest.HttpServerRequest**]
  %220 = load %hunt.http.server.HttpServerRequest.HttpServerRequest*, %hunt.http.server.HttpServerRequest.HttpServerRequest** %219, align 8 ; [#uses = 1]
  %221 = call { i64, i8* } @_D4hunt4http6server17HttpServerRequestQt__T3getTAyaZQjMFQiQkZQn(%hunt.http.server.HttpServerRequest.HttpServerRequest* nonnull %220, { i64, i8* } { i64 10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i32 0, i32 0) }, { i64, i8* } zeroinitializer) #1 ; [#uses = 2]
  %222 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__var063, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len66 = extractvalue { i64, i8* } %221, 0     ; [#uses = 1]
  store i64 %.len66, i64* %222, align 8
  %223 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__var063, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr67 = extractvalue { i64, i8* } %221, 1     ; [#uses = 1]
  store i8* %.ptr67, i8** %223, align 8
  %224 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %225 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %224, align 8 ; [#uses = 1]
  %226 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %225, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %227 = load [32 x i8*]*, [32 x i8*]** %226, align 8 ; [#uses = 1]
  %"request@vtbl68" = getelementptr inbounds [32 x i8*], [32 x i8*]* %227, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %228 = load i8*, i8** %"request@vtbl68", align 8 ; [#uses = 1]
  %request69 = bitcast i8* %228 to %hunt.framework.http.Request.Request* (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %229 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %224, align 8 ; [#uses = 1]
  %230 = call %hunt.framework.http.Request.Request* %request69(%hunt.framework.controller.Controller.Controller* nonnull %229) ; [#uses = 1]
  %231 = getelementptr inbounds %hunt.framework.http.Request.Request, %hunt.framework.http.Request.Request* %230, i32 0, i32 16 ; [#uses = 1, type = %hunt.http.server.HttpServerRequest.HttpServerRequest**]
  %232 = load %hunt.http.server.HttpServerRequest.HttpServerRequest*, %hunt.http.server.HttpServerRequest.HttpServerRequest** %231, align 8 ; [#uses = 1]
  %233 = call { i64, i8* } @_D4hunt4http6server17HttpServerRequestQt__T3getTAyaZQjMFQiQkZQn(%hunt.http.server.HttpServerRequest.HttpServerRequest* nonnull %232, { i64, i8* } { i64 14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i32 0, i32 0) }, { i64, i8* } zeroinitializer) #1 ; [#uses = 2]
  %234 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__var1, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len70 = extractvalue { i64, i8* } %233, 0     ; [#uses = 1]
  store i64 %.len70, i64* %234, align 8
  %235 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__var1, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr71 = extractvalue { i64, i8* } %233, 1     ; [#uses = 1]
  store i8* %.ptr71, i8** %235, align 8
  store { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* } { i8* null, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* @_D3app10controller13ApiControllerQp8__mixin48__mixin116callActionMethodMFAyaC4hunt4http7routing14RoutingContextQqZ10__lambda14MFNaNbNiNfCQCi10validation26ConstraintValidatorContextQBcZv }, { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* %__aaval2015, align 8
  %236 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %237 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %236, i32 0, i32 11 ; [#uses = 1, type = i8**]
  %238 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp72, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 91, i64* %238, align 8
  %239 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp72, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.9, i32 0, i32 0), i8** %239, align 8
  %240 = bitcast { i64, i8* }* %.makelvaluetmp72 to i8* ; [#uses = 1]
  %aa.index73 = call i8* @_aaGetY(i8** nocapture %237, %object.TypeInfo_AssociativeArray* @_D66TypeInfo_HAyaDFC4hunt10validation26ConstraintValidatorContextQBcZv6__initZ, i64 16, i8* nocapture %240) #2 ; [#uses = 1]
  %241 = bitcast i8* %aa.index73 to { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* ; [#uses = 1]
  %242 = load { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }, { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* %__aaval2015, align 8 ; [#uses = 1]
  store { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* } %242, { i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* }* %241, align 8
  %243 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %244 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %243, align 8 ; [#uses = 1]
  %245 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %244, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %246 = load [32 x i8*]*, [32 x i8*]** %245, align 8 ; [#uses = 1]
  %"isSkippedMiddlewareInControllerAction@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %246, i32 0, i32 22 ; [#uses = 1, type = i8**]
  %247 = load i8*, i8** %"isSkippedMiddlewareInControllerAction@vtbl", align 8 ; [#uses = 1]
  %isSkippedMiddlewareInControllerAction = bitcast i8* %247 to i1 (%hunt.framework.controller.Controller.Controller*, { i64, i8* }, { i64, i8* })* ; [#uses = 1]
  %248 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %243, align 8 ; [#uses = 1]
  %249 = load { i64, i8* }, { i64, i8* }* %__var063, align 8 ; [#uses = 1]
  %250 = load { i64, i8* }, { i64, i8* }* %__var1, align 8 ; [#uses = 1]
  %251 = call zeroext i1 %isSkippedMiddlewareInControllerAction(%hunt.framework.controller.Controller.Controller* nonnull %248, { i64, i8* } %249, { i64, i8* } %250) ; [#uses = 1]
  %252 = zext i1 %251 to i8                       ; [#uses = 1]
  store i8 %252, i8* %result74, align 1
  %253 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 1]
  %254 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %253, align 8 ; [#uses = 1]
  %255 = call %hunt.framework.http.Response.Response* @_D4hunt9framework10controller10ControllerQm8responseMFNdZCQCeQCc4http8ResponseQj(%hunt.framework.controller.Controller.Controller* nonnull %254) #1 ; [#uses = 1]
  %256 = load i8, i8* %result74, align 1          ; [#uses = 1]
  %257 = trunc i8 %256 to i1                      ; [#uses = 1]
  %258 = call %hunt.framework.http.Response.Response* @_D4hunt9framework4http8ResponseQj__T10setContentTbZQpMFbAyaZCQChQCfQByQBwQBz(%hunt.framework.http.Response.Response* nonnull %255, i1 zeroext %257, { i64, i8* } { i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0) }) #1 ; [#uses = 0]
  %259 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %260 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %259, align 8 ; [#uses = 1]
  %261 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %260, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %262 = load [32 x i8*]*, [32 x i8*]** %261, align 8 ; [#uses = 1]
  %"after@vtbl75" = getelementptr inbounds [32 x i8*], [32 x i8*]* %262, i32 0, i32 13 ; [#uses = 1, type = i8**]
  %263 = load i8*, i8** %"after@vtbl75", align 8  ; [#uses = 1]
  %after76 = bitcast i8* %263 to i1 (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %264 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %259, align 8 ; [#uses = 1]
  %265 = call zeroext i1 %after76(%hunt.framework.controller.Controller.Controller* nonnull %264) ; [#uses = 0]
  br label %switchend

afterbreak77:                                     ; No predecessors!
  br label %default

defaultcntr:                                      ; preds = %0
  br label %default

default:                                          ; preds = %defaultcntr, %afterbreak77
  br label %switchend

afterbreak78:                                     ; No predecessors!
  br label %switchend

switchend:                                        ; preds = %afterbreak78, %default, %endif61, %endif36, %endif16, %endif2
  ret void
}

; [#uses = 4]
declare %hunt.framework.http.Response.Response* @_D4hunt9framework10controller10ControllerQm17handleMiddlewaresMFAyaZCQCpQCn4http8ResponseQj(%hunt.framework.controller.Controller.Controller* nonnull, { i64, i8* }) #1

; [#uses = 1]
declare void @_D4hunt9framework10controller10ControllerQm8responseMFNdCQCdQCb4http8ResponseQjZv(%hunt.framework.controller.Controller.Controller* nonnull, %hunt.framework.http.Response.Response*) #1

; [#uses = 1]
declare zeroext i1 @_D4hunt9framework10controller10ControllerQm6beforeMFZb(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal void @_D3app10controller13ApiControllerQp8__mixin48__mixin116callActionMethodMFAyaC4hunt4http7routing14RoutingContextQqZ9__lambda5MFNaNbNiNfCQCg10validation26ConstraintValidatorContextQBcZv(i8* nonnull %.nest_arg, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext* %context_arg) #0 {
  %context = alloca %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*, align 8 ; [#uses = 1, size/byte = 8]
  store %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext* %context_arg, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext** %context, align 8
  ret void
}

; [#uses = 8]
; Function Attrs: uwtable
declare i8* @_aaGetY(i8** nocapture, %object.TypeInfo_AssociativeArray*, i64, i8* nocapture) #2

; [#uses = 1]
; Function Attrs: uwtable
define %hunt.framework.http.JsonResponse.JsonResponse* @_D3app10controller13ApiControllerQp7testApiMFZC4hunt9framework4http12JsonResponseQo(%app.controller.ApiController.ApiController* nonnull %.this_arg) #0 {
  %this = alloca %app.controller.ApiController.ApiController*, align 8 ; [#uses = 1, size/byte = 8]
  %dt = alloca %std.datetime.systime.SysTime, align 8 ; [#uses = 2, size/byte = 16]
  %1 = alloca %std.datetime.systime.SysTime, align 8 ; [#uses = 2, size/byte = 16]
  %dts = alloca { i64, i8* }, align 8             ; [#uses = 3, size/byte = 16]
  %js = alloca %std.json.JSONValue, align 8       ; [#uses = 3, size/byte = 24]
  %resp = alloca %hunt.framework.http.JsonResponse.JsonResponse*, align 8 ; [#uses = 3, size/byte = 8]
  store %app.controller.ApiController.ApiController* %.this_arg, %app.controller.ApiController.ApiController** %this, align 8
  %2 = call %std.datetime.timezone.LocalTime* @_D3std8datetime8timezone9LocalTime6opCallFNaNbNeZyCQBxQBwQBqQBk() #1 ; [#uses = 1]
  %3 = bitcast %std.datetime.timezone.LocalTime* %2 to %std.datetime.timezone.TimeZone* ; [#uses = 1]
  %4 = call %std.datetime.systime.SysTime @_D3std8datetime7systime5Clock__T8currTimeVE4core4time9ClockTypei0ZQBiFNbNfyCQCwQCv8timezone8TimeZoneZSQDwQDvQDp7SysTime(%std.datetime.timezone.TimeZone* %3) #1 ; [#uses = 1]
  store %std.datetime.systime.SysTime %4, %std.datetime.systime.SysTime* %1, align 8
  %5 = bitcast %std.datetime.systime.SysTime* %dt to i8* ; [#uses = 1]
  %6 = bitcast %std.datetime.systime.SysTime* %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 16, i1 false)
  %7 = call { i64, i8* } @_D3std8datetime7systime7SysTime14toISOExtStringMxFNbNlNfiZAya(%std.datetime.systime.SysTime* nonnull %dt, i32 -1) #1 ; [#uses = 2]
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %dts, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = extractvalue { i64, i8* } %7, 0         ; [#uses = 1]
  store i64 %.len, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %dts, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = extractvalue { i64, i8* } %7, 1         ; [#uses = 1]
  store i8* %.ptr, i8** %9, align 8
  %10 = bitcast %std.json.JSONValue* %js to i8*   ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 bitcast (%std.json.JSONValue* @_D3std4json9JSONValue6__initZ to i8*), i64 24, i1 false)
  call void @_D3std4json9JSONValue__T13opIndexAssignTAyaZQuMFNaNfKQnQpZv(%std.json.JSONValue* nonnull %js, { i64, i8* }* dereferenceable(16) %dts, { i64, i8* } { i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0) }) #1
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D4hunt9framework4http12JsonResponseQo7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %hunt.framework.http.JsonResponse.JsonResponse* ; [#uses = 5]
  %vtbl = getelementptr inbounds %hunt.framework.http.JsonResponse.JsonResponse, %hunt.framework.http.JsonResponse.JsonResponse* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [19 x i8*]**]
  store [19 x i8*]* @_D4hunt9framework4http12JsonResponseQo6__vtblZ, [19 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %hunt.framework.http.JsonResponse.JsonResponse, %hunt.framework.http.JsonResponse.JsonResponse* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %11 = getelementptr inbounds %hunt.framework.http.JsonResponse.JsonResponse, %hunt.framework.http.JsonResponse.JsonResponse* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %12 = getelementptr inbounds %hunt.framework.http.JsonResponse.JsonResponse, %hunt.framework.http.JsonResponse.JsonResponse* @_D4hunt9framework4http12JsonResponseQo6__initZ, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %13 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %11 to i8* ; [#uses = 1]
  %14 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %12 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %14, i64 9, i1 false)
  %15 = call %hunt.framework.http.JsonResponse.JsonResponse* @_D4hunt9framework4http12JsonResponseQo__T6__ctorTS3std4json9JSONValueZQBdMFQBaZCQDaQCyQCrQCpQCs(%hunt.framework.http.JsonResponse.JsonResponse* nonnull returned %.newclass_gc, %std.json.JSONValue* byval(%std.json.JSONValue) align 8 %js) #1 ; [#uses = 0]
  store %hunt.framework.http.JsonResponse.JsonResponse* %.newclass_gc, %hunt.framework.http.JsonResponse.JsonResponse** %resp, align 8
  %16 = load %hunt.framework.http.JsonResponse.JsonResponse*, %hunt.framework.http.JsonResponse.JsonResponse** %resp, align 8 ; [#uses = 0]
  %17 = load %hunt.framework.http.JsonResponse.JsonResponse*, %hunt.framework.http.JsonResponse.JsonResponse** %resp, align 8 ; [#uses = 1]
  ret %hunt.framework.http.JsonResponse.JsonResponse* %17
}

; [#uses = 1]
declare zeroext i1 @_D4hunt9framework10controller10ControllerQm5afterMFZb(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 1]
declare %hunt.framework.http.Request.Request* @_D4hunt9framework10controller10ControllerQm7requestMFZCQCbQBz4http7RequestQi(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 4]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D4hunt4http6server17HttpServerRequestQt__T3getTAyaZQjMFQiQkZQn(%hunt.http.server.HttpServerRequest.HttpServerRequest* nonnull %.this_arg, { i64, i8* } %key_arg, { i64, i8* } %v_arg) #0 {
  %this = alloca %hunt.http.server.HttpServerRequest.HttpServerRequest*, align 8 ; [#uses = 3, size/byte = 8]
  %key = alloca { i64, i8* }, align 8             ; [#uses = 2, size/byte = 16]
  %v = alloca { i64, i8* }, align 8               ; [#uses = 9, size/byte = 16]
  %.frame = alloca %nest.get, align 8             ; [#uses = 2, size/byte = 16]
  %tmp = alloca i8*, align 8                      ; [#uses = 3, size/byte = 8]
  %_v = alloca { i64, i8* }, align 8              ; [#uses = 4, size/byte = 16]
  store %hunt.http.server.HttpServerRequest.HttpServerRequest* %.this_arg, %hunt.http.server.HttpServerRequest.HttpServerRequest** %this, align 8
  store { i64, i8* } %key_arg, { i64, i8* }* %key, align 8
  store { i64, i8* } %v_arg, { i64, i8* }* %v, align 8
  %msg = getelementptr inbounds %nest.get, %nest.get* %.frame, i32 0, i32 0 ; [#uses = 0, type = { i64, i8* }*]
  %1 = load %hunt.http.server.HttpServerRequest.HttpServerRequest*, %hunt.http.server.HttpServerRequest.HttpServerRequest** %this, align 8 ; [#uses = 1]
  %2 = getelementptr inbounds %hunt.http.server.HttpServerRequest.HttpServerRequest, %hunt.http.server.HttpServerRequest.HttpServerRequest* %1, i32 0, i32 0 ; [#uses = 1, type = [68 x i8*]**]
  %3 = load [68 x i8*]*, [68 x i8*]** %2, align 8 ; [#uses = 1]
  %"queries@vtbl" = getelementptr inbounds [68 x i8*], [68 x i8*]* %3, i32 0, i32 62 ; [#uses = 1, type = i8**]
  %4 = load i8*, i8** %"queries@vtbl", align 8    ; [#uses = 1]
  %queries = bitcast i8* %4 to i8** (%hunt.http.server.HttpServerRequest.HttpServerRequest*)* ; [#uses = 1]
  %5 = load %hunt.http.server.HttpServerRequest.HttpServerRequest*, %hunt.http.server.HttpServerRequest.HttpServerRequest** %this, align 8 ; [#uses = 1]
  %6 = call i8** %queries(%hunt.http.server.HttpServerRequest.HttpServerRequest* nonnull %5) ; [#uses = 1]
  %7 = load i8*, i8** %6, align 8                 ; [#uses = 1]
  store i8* %7, i8** %tmp, align 8
  %8 = load i8*, i8** %tmp, align 8               ; [#uses = 1]
  %9 = icmp eq i8* %8, null                       ; [#uses = 1]
  br i1 %9, label %if, label %endif

if:                                               ; preds = %0
  %10 = load { i64, i8* }, { i64, i8* }* %v, align 8 ; [#uses = 0]
  %11 = load { i64, i8* }, { i64, i8* }* %v, align 8 ; [#uses = 1]
  ret { i64, i8* } %11

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %0
  %12 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %v, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %12, align 8             ; [#uses = 1]
  %13 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %v, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %13, align 8             ; [#uses = 1]
  %14 = icmp eq i64 %.len, 0                      ; [#uses = 1]
  %15 = icmp eq i8* %.ptr, null                   ; [#uses = 1]
  %16 = and i1 %14, %15                           ; [#uses = 1]
  br i1 %16, label %if1, label %endif2

if1:                                              ; preds = %endif
  %17 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %v, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %v, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i8** %18, align 8
  br label %endif2

endif2:                                           ; preds = %if1, %endif
  %19 = load i8*, i8** %tmp, align 8              ; [#uses = 1]
  %20 = load { i64, i8* }, { i64, i8* }* %key, align 8 ; [#uses = 1]
  %21 = bitcast %nest.get* %.frame to i8*         ; [#uses = 1]
  %22 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %21, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %22, { i64, i8* } (i8*)* @_D4hunt4http6server17HttpServerRequestQt__T3getTAyaZQjMFQiQkZ12__dgliteral4MFNaNbNiNfZQBm, 1 ; [#uses = 1]
  %23 = call { i64, i8* } @_D6object__T3getTAyaTQeZQmFNaNfNgHQrAyaQwLNgQiZNgQn(i8* %19, { i64, i8* } %20, { i8*, { i64, i8* } (i8*)* } %.func) #1 ; [#uses = 2]
  %24 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_v, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len3 = extractvalue { i64, i8* } %23, 0       ; [#uses = 1]
  store i64 %.len3, i64* %24, align 8
  %25 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_v, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr4 = extractvalue { i64, i8* } %23, 1       ; [#uses = 1]
  store i8* %.ptr4, i8** %25, align 8
  %26 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %_v, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len5 = load i64, i64* %26, align 8            ; [#uses = 1]
  %27 = icmp ne i64 %.len5, 0                     ; [#uses = 1]
  br i1 %27, label %if6, label %endif7

if6:                                              ; preds = %endif2
  %28 = load { i64, i8* }, { i64, i8* }* %_v, align 8 ; [#uses = 1]
  %29 = call { i64, i8* } @_D3std4conv__T2toTAyaZ__TQlTQkZQrFNaNbNiNfQyZQBb({ i64, i8* } %28) #1 ; [#uses = 1]
  ret { i64, i8* } %29

dummy.afterreturn8:                               ; No predecessors!
  br label %endif7

endif7:                                           ; preds = %dummy.afterreturn8, %endif2
  %30 = load { i64, i8* }, { i64, i8* }* %v, align 8 ; [#uses = 0]
  %31 = load { i64, i8* }, { i64, i8* }* %v, align 8 ; [#uses = 1]
  ret { i64, i8* } %31
}

; [#uses = 1]
; Function Attrs: uwtable
define internal void @_D3app10controller13ApiControllerQp8__mixin48__mixin116callActionMethodMFAyaC4hunt4http7routing14RoutingContextQqZ9__lambda9MFNaNbNiNfCQCg10validation26ConstraintValidatorContextQBcZv(i8* nonnull %.nest_arg, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext* %context_arg) #0 {
  %context = alloca %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*, align 8 ; [#uses = 1, size/byte = 8]
  store %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext* %context_arg, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext** %context, align 8
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define %hunt.framework.http.JsonResponse.JsonResponse* @_D3app10controller13ApiControllerQp4echoMFAyaZC4hunt9framework4http12JsonResponseQo(%app.controller.ApiController.ApiController* nonnull %.this_arg, { i64, i8* } %msg_arg) #0 {
  %this = alloca %app.controller.ApiController.ApiController*, align 8 ; [#uses = 1, size/byte = 8]
  %msg = alloca { i64, i8* }, align 8             ; [#uses = 2, size/byte = 16]
  %js = alloca %std.json.JSONValue, align 8       ; [#uses = 3, size/byte = 24]
  %resp = alloca %hunt.framework.http.JsonResponse.JsonResponse*, align 8 ; [#uses = 3, size/byte = 8]
  store %app.controller.ApiController.ApiController* %.this_arg, %app.controller.ApiController.ApiController** %this, align 8
  store { i64, i8* } %msg_arg, { i64, i8* }* %msg, align 8
  %1 = bitcast %std.json.JSONValue* %js to i8*    ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 bitcast (%std.json.JSONValue* @_D3std4json9JSONValue6__initZ to i8*), i64 24, i1 false)
  call void @_D3std4json9JSONValue__T13opIndexAssignTAyaZQuMFNaNfKQnQpZv(%std.json.JSONValue* nonnull %js, { i64, i8* }* dereferenceable(16) %msg, { i64, i8* } { i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0) }) #1
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D4hunt9framework4http12JsonResponseQo7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %hunt.framework.http.JsonResponse.JsonResponse* ; [#uses = 5]
  %vtbl = getelementptr inbounds %hunt.framework.http.JsonResponse.JsonResponse, %hunt.framework.http.JsonResponse.JsonResponse* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [19 x i8*]**]
  store [19 x i8*]* @_D4hunt9framework4http12JsonResponseQo6__vtblZ, [19 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %hunt.framework.http.JsonResponse.JsonResponse, %hunt.framework.http.JsonResponse.JsonResponse* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %2 = getelementptr inbounds %hunt.framework.http.JsonResponse.JsonResponse, %hunt.framework.http.JsonResponse.JsonResponse* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %3 = getelementptr inbounds %hunt.framework.http.JsonResponse.JsonResponse, %hunt.framework.http.JsonResponse.JsonResponse* @_D4hunt9framework4http12JsonResponseQo6__initZ, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %4 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %2 to i8* ; [#uses = 1]
  %5 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %3 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 9, i1 false)
  %6 = call %hunt.framework.http.JsonResponse.JsonResponse* @_D4hunt9framework4http12JsonResponseQo__T6__ctorTS3std4json9JSONValueZQBdMFQBaZCQDaQCyQCrQCpQCs(%hunt.framework.http.JsonResponse.JsonResponse* nonnull returned %.newclass_gc, %std.json.JSONValue* byval(%std.json.JSONValue) align 8 %js) #1 ; [#uses = 0]
  store %hunt.framework.http.JsonResponse.JsonResponse* %.newclass_gc, %hunt.framework.http.JsonResponse.JsonResponse** %resp, align 8
  %7 = load %hunt.framework.http.JsonResponse.JsonResponse*, %hunt.framework.http.JsonResponse.JsonResponse** %resp, align 8 ; [#uses = 0]
  %8 = load %hunt.framework.http.JsonResponse.JsonResponse*, %hunt.framework.http.JsonResponse.JsonResponse** %resp, align 8 ; [#uses = 1]
  ret %hunt.framework.http.JsonResponse.JsonResponse* %8
}

; [#uses = 1]
; Function Attrs: uwtable
define internal void @_D3app10controller13ApiControllerQp8__mixin48__mixin116callActionMethodMFAyaC4hunt4http7routing14RoutingContextQqZ10__lambda11MFNaNbNiNfCQCi10validation26ConstraintValidatorContextQBcZv(i8* nonnull %.nest_arg, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext* %context_arg) #0 {
  %context = alloca %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*, align 8 ; [#uses = 1, size/byte = 8]
  store %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext* %context_arg, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext** %context, align 8
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define %hunt.framework.http.JsonResponse.JsonResponse* @_D3app10controller13ApiControllerQp4factMFAyaZC4hunt9framework4http12JsonResponseQo(%app.controller.ApiController.ApiController* nonnull %.this_arg, { i64, i8* } %n_arg) #0 {
  %this = alloca %app.controller.ApiController.ApiController*, align 8 ; [#uses = 3, size/byte = 8]
  %n = alloca { i64, i8* }, align 8               ; [#uses = 2, size/byte = 16]
  %js = alloca %std.json.JSONValue, align 8       ; [#uses = 3, size/byte = 24]
  %res = alloca i32, align 4                      ; [#uses = 2, size/byte = 4]
  %resp = alloca %hunt.framework.http.JsonResponse.JsonResponse*, align 8 ; [#uses = 3, size/byte = 8]
  store %app.controller.ApiController.ApiController* %.this_arg, %app.controller.ApiController.ApiController** %this, align 8
  store { i64, i8* } %n_arg, { i64, i8* }* %n, align 8
  %1 = bitcast %std.json.JSONValue* %js to i8*    ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 bitcast (%std.json.JSONValue* @_D3std4json9JSONValue6__initZ to i8*), i64 24, i1 false)
  %2 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %2, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  %4 = load [38 x i8*]*, [38 x i8*]** %3, align 8 ; [#uses = 1]
  %"fact@vtbl" = getelementptr inbounds [38 x i8*], [38 x i8*]* %4, i32 0, i32 36 ; [#uses = 1, type = i8**]
  %5 = load i8*, i8** %"fact@vtbl", align 8       ; [#uses = 1]
  %fact = bitcast i8* %5 to i32 (%app.controller.ApiController.ApiController*, i32)* ; [#uses = 1]
  %6 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %7 = load { i64, i8* }, { i64, i8* }* %n, align 8 ; [#uses = 1]
  %8 = call i32 @_D3std4conv__T2toTiZ__TQjTAyaZQqFNaNfQlZi({ i64, i8* } %7) #1 ; [#uses = 1]
  %9 = call i32 %fact(%app.controller.ApiController.ApiController* nonnull %6, i32 %8) ; [#uses = 1]
  store i32 %9, i32* %res, align 4
  %10 = load i32, i32* %res, align 4              ; [#uses = 1]
  %11 = call { i64, i8* } @_D3std4conv__T2toTAyaZ__TQlTiZQqFNaNbNfiZQx(i32 %10) #1 ; [#uses = 1]
  call void @_D3std4json9JSONValue__T13opIndexAssignTAyaZQuMFNaNfQmQoZv(%std.json.JSONValue* nonnull %js, { i64, i8* } %11, { i64, i8* } { i64 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0) }) #1
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D4hunt9framework4http12JsonResponseQo7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %hunt.framework.http.JsonResponse.JsonResponse* ; [#uses = 5]
  %vtbl = getelementptr inbounds %hunt.framework.http.JsonResponse.JsonResponse, %hunt.framework.http.JsonResponse.JsonResponse* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [19 x i8*]**]
  store [19 x i8*]* @_D4hunt9framework4http12JsonResponseQo6__vtblZ, [19 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %hunt.framework.http.JsonResponse.JsonResponse, %hunt.framework.http.JsonResponse.JsonResponse* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %12 = getelementptr inbounds %hunt.framework.http.JsonResponse.JsonResponse, %hunt.framework.http.JsonResponse.JsonResponse* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %13 = getelementptr inbounds %hunt.framework.http.JsonResponse.JsonResponse, %hunt.framework.http.JsonResponse.JsonResponse* @_D4hunt9framework4http12JsonResponseQo6__initZ, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %14 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %12 to i8* ; [#uses = 1]
  %15 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %13 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 9, i1 false)
  %16 = call %hunt.framework.http.JsonResponse.JsonResponse* @_D4hunt9framework4http12JsonResponseQo__T6__ctorTS3std4json9JSONValueZQBdMFQBaZCQDaQCyQCrQCpQCs(%hunt.framework.http.JsonResponse.JsonResponse* nonnull returned %.newclass_gc, %std.json.JSONValue* byval(%std.json.JSONValue) align 8 %js) #1 ; [#uses = 0]
  store %hunt.framework.http.JsonResponse.JsonResponse* %.newclass_gc, %hunt.framework.http.JsonResponse.JsonResponse** %resp, align 8
  %17 = load %hunt.framework.http.JsonResponse.JsonResponse*, %hunt.framework.http.JsonResponse.JsonResponse** %resp, align 8 ; [#uses = 0]
  %18 = load %hunt.framework.http.JsonResponse.JsonResponse*, %hunt.framework.http.JsonResponse.JsonResponse** %resp, align 8 ; [#uses = 1]
  ret %hunt.framework.http.JsonResponse.JsonResponse* %18
}

; [#uses = 1]
; Function Attrs: uwtable
define internal void @_D3app10controller13ApiControllerQp8__mixin48__mixin116callActionMethodMFAyaC4hunt4http7routing14RoutingContextQqZ10__lambda14MFNaNbNiNfCQCi10validation26ConstraintValidatorContextQBcZv(i8* nonnull %.nest_arg, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext* %context_arg) #0 {
  %context = alloca %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*, align 8 ; [#uses = 1, size/byte = 8]
  store %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext* %context_arg, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext** %context, align 8
  ret void
}

; [#uses = 1]
declare zeroext i1 @_D4hunt9framework10controller10ControllerQm37isSkippedMiddlewareInControllerActionMFAyaQdZb(%hunt.framework.controller.Controller.Controller* nonnull, { i64, i8* }, { i64, i8* }) #1

; [#uses = 1]
declare %hunt.framework.http.Response.Response* @_D4hunt9framework10controller10ControllerQm8responseMFNdZCQCeQCc4http8ResponseQj(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr %hunt.framework.http.Response.Response* @_D4hunt9framework4http8ResponseQj__T10setContentTbZQpMFbAyaZCQChQCfQByQBwQBz(%hunt.framework.http.Response.Response* nonnull %.this_arg, i1 zeroext %content_arg, { i64, i8* } %contentType_arg) #0 {
  %this = alloca %hunt.framework.http.Response.Response*, align 8 ; [#uses = 6, size/byte = 8]
  %content = alloca i8, align 1                   ; [#uses = 2, size/byte = 1]
  %contentType = alloca { i64, i8* }, align 8     ; [#uses = 2, size/byte = 16]
  %c = alloca { i64, i8* }, align 8               ; [#uses = 3, size/byte = 16]
  %hb = alloca %hunt.http.HttpBody.HttpBody*, align 8 ; [#uses = 2, size/byte = 8]
  store %hunt.framework.http.Response.Response* %.this_arg, %hunt.framework.http.Response.Response** %this, align 8
  %1 = zext i1 %content_arg to i8                 ; [#uses = 1]
  store i8 %1, i8* %content, align 1
  store { i64, i8* } %contentType_arg, { i64, i8* }* %contentType, align 8
  %2 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %this, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %2, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %4 = load i8, i8* %3, align 1                   ; [#uses = 1]
  %5 = trunc i8 %4 to i1                          ; [#uses = 1]
  br i1 %5, label %if, label %endif

if:                                               ; preds = %0
  br label %endif

endif:                                            ; preds = %if, %0
  %6 = load i8, i8* %content, align 1             ; [#uses = 1]
  %7 = trunc i8 %6 to i1                          ; [#uses = 1]
  %8 = call { i64, i8* } @_D3std4conv__T2toTAyaZ__TQlTbZQqFNaNbNiNfbZQz(i1 zeroext %7) #1 ; [#uses = 2]
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %c, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = extractvalue { i64, i8* } %8, 0         ; [#uses = 1]
  store i64 %.len, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %c, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = extractvalue { i64, i8* } %8, 1         ; [#uses = 1]
  store i8* %.ptr, i8** %10, align 8
  %11 = load { i64, i8* }, { i64, i8* }* %contentType, align 8 ; [#uses = 1]
  %12 = load { i64, i8* }, { i64, i8* }* %c, align 8 ; [#uses = 1]
  %13 = call %hunt.http.HttpBody.HttpBody* @_D4hunt4http8HttpBodyQj6createFAyaQdZCQBkQBiQBgQBj({ i64, i8* } %11, { i64, i8* } %12) #1 ; [#uses = 1]
  store %hunt.http.HttpBody.HttpBody* %13, %hunt.http.HttpBody.HttpBody** %hb, align 8
  %14 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %this, align 8 ; [#uses = 1]
  %15 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %14, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %16 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %15 to %hunt.http.HttpMetaData.HttpMetaData** ; [#uses = 2]
  %17 = load %hunt.http.HttpMetaData.HttpMetaData*, %hunt.http.HttpMetaData.HttpMetaData** %16, align 8 ; [#uses = 1]
  %18 = getelementptr inbounds %hunt.http.HttpMetaData.HttpMetaData, %hunt.http.HttpMetaData.HttpMetaData* %17, i32 0, i32 0 ; [#uses = 1, type = [25 x i8*]**]
  %19 = load [25 x i8*]*, [25 x i8*]** %18, align 8 ; [#uses = 1]
  %"setBody@vtbl" = getelementptr inbounds [25 x i8*], [25 x i8*]* %19, i32 0, i32 15 ; [#uses = 1, type = i8**]
  %20 = load i8*, i8** %"setBody@vtbl", align 8   ; [#uses = 1]
  %setBody = bitcast i8* %20 to %hunt.http.HttpMetaData.HttpMetaData* (%hunt.http.HttpMetaData.HttpMetaData*, %hunt.http.HttpBody.HttpBody*)* ; [#uses = 1]
  %21 = load %hunt.http.HttpMetaData.HttpMetaData*, %hunt.http.HttpMetaData.HttpMetaData** %16, align 8 ; [#uses = 1]
  %22 = load %hunt.http.HttpBody.HttpBody*, %hunt.http.HttpBody.HttpBody** %hb, align 8 ; [#uses = 1]
  %23 = call %hunt.http.HttpMetaData.HttpMetaData* %setBody(%hunt.http.HttpMetaData.HttpMetaData* nonnull %21, %hunt.http.HttpBody.HttpBody* %22) ; [#uses = 0]
  %24 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %this, align 8 ; [#uses = 1]
  %25 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %24, i32 0, i32 3 ; [#uses = 1, type = i8*]
  store i8 1, i8* %25, align 1
  %26 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %this, align 8 ; [#uses = 0]
  %27 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %this, align 8 ; [#uses = 1]
  ret %hunt.framework.http.Response.Response* %27
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D4core8internal7switch___T8__switchTyaVxAyaa4_6563686fVxQqa4_66616374VxQBfa7_74657374417069VxQCba37_6973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6eZQFtFNaNbNiNfMxQFtZi({ i64, i8* } %condition_arg) #0 {
  %condition = alloca { i64, i8* }, align 8       ; [#uses = 6, size/byte = 16]
  %r = alloca i32, align 4                        ; [#uses = 4, size/byte = 4]
  store { i64, i8* } %condition_arg, { i64, i8* }* %condition, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %condition, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = icmp eq i64 %.len, 7                       ; [#uses = 1]
  br i1 %2, label %if, label %else

if:                                               ; preds = %0
  %3 = load { i64, i8* }, { i64, i8* }* %condition, align 8 ; [#uses = 1]
  %4 = call i32 @_D4core8internal5array10comparison__T5__cmpTaZQjFNaNbNiNeMxAaMxQeZi({ i64, i8* } %3, { i64, i8* } { i64 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0) }) #0 ; [#uses = 1]
  store i32 %4, i32* %r, align 4
  %5 = load i32, i32* %r, align 4                 ; [#uses = 1]
  %6 = icmp eq i32 %5, 0                          ; [#uses = 1]
  br i1 %6, label %if1, label %endif2

if1:                                              ; preds = %if
  ret i32 2

dummy.afterreturn:                                ; No predecessors!
  br label %endif2

endif2:                                           ; preds = %dummy.afterreturn, %if
  br label %endif

else:                                             ; preds = %0
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %condition, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len3 = load i64, i64* %7, align 8             ; [#uses = 1]
  %8 = icmp ugt i64 %.len3, 7                     ; [#uses = 1]
  %9 = zext i1 %8 to i32                          ; [#uses = 1]
  %10 = shl i32 %9, 1                             ; [#uses = 1]
  %11 = sub i32 %10, 1                            ; [#uses = 1]
  store i32 %11, i32* %r, align 4
  br label %endif

endif:                                            ; preds = %else, %endif2
  %12 = load i32, i32* %r, align 4                ; [#uses = 1]
  %13 = icmp slt i32 %12, 0                       ; [#uses = 1]
  br i1 %13, label %if4, label %else6

if4:                                              ; preds = %endif
  %14 = load { i64, i8* }, { i64, i8* }* %condition, align 8 ; [#uses = 1]
  %15 = call i32 @_D4core8internal7switch___T8__switchTyaVxAyaa4_6563686fVxQqa4_66616374ZQBsFNaNbNiNfMxQBsZi({ i64, i8* } %14) #1 ; [#uses = 1]
  ret i32 %15

dummy.afterreturn7:                               ; No predecessors!
  br label %endif5

else6:                                            ; preds = %endif
  %16 = load { i64, i8* }, { i64, i8* }* %condition, align 8 ; [#uses = 1]
  %17 = call i32 @_D4core8internal7switch___T8__switchTyaVxAyaa37_6973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6eZQDsFNaNbNiNfMxQDsZi({ i64, i8* } %16) #1 ; [#uses = 1]
  %18 = add i32 %17, 2                            ; [#uses = 1]
  %19 = add i32 %18, 1                            ; [#uses = 1]
  ret i32 %19

dummy.afterreturn8:                               ; No predecessors!
  br label %endif5

endif5:                                           ; preds = %dummy.afterreturn8, %dummy.afterreturn7
  ret i32 undef
}

; [#uses = 1]
; Function Attrs: uwtable
define void @_D3app10controller13ApiControllerQp8__mixin48__mixin127_sharedStaticCtor_L568_C5_1FZv() #0 {
  call void @_D4hunt9framework10controller10Controller20registerRouteHandlerFAyaDFCQCq4http7routing14RoutingContextQqZvZv({ i64, i8* } { i64 40, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14, i32 0, i32 0) }, { i8*, void (i8*, %hunt.http.routing.RoutingContext.RoutingContext*)* } { i8* null, void (i8*, %hunt.http.routing.RoutingContext.RoutingContext*)* @_D3app10controller13ApiControllerQp8__mixin48__mixin127_sharedStaticCtor_L568_C5_1FZ__T9__lambda2TC4hunt4http7routing14RoutingContextQqZQBxMFQBrZv }) #1
  call void @_D4hunt9framework10controller10Controller20registerRouteHandlerFAyaDFCQCq4http7routing14RoutingContextQqZvZv({ i64, i8* } { i64 37, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i32 0, i32 0) }, { i8*, void (i8*, %hunt.http.routing.RoutingContext.RoutingContext*)* } { i8* null, void (i8*, %hunt.http.routing.RoutingContext.RoutingContext*)* @_D3app10controller13ApiControllerQp8__mixin48__mixin127_sharedStaticCtor_L568_C5_1FZ__T9__lambda3TC4hunt4http7routing14RoutingContextQqZQBxMFQBrZv }) #1
  call void @_D4hunt9framework10controller10Controller20registerRouteHandlerFAyaDFCQCq4http7routing14RoutingContextQqZvZv({ i64, i8* } { i64 37, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i32 0, i32 0) }, { i8*, void (i8*, %hunt.http.routing.RoutingContext.RoutingContext*)* } { i8* null, void (i8*, %hunt.http.routing.RoutingContext.RoutingContext*)* @_D3app10controller13ApiControllerQp8__mixin48__mixin127_sharedStaticCtor_L568_C5_1FZ__T9__lambda4TC4hunt4http7routing14RoutingContextQqZQBxMFQBrZv }) #1
  call void @_D4hunt9framework10controller10Controller20registerRouteHandlerFAyaDFCQCq4http7routing14RoutingContextQqZvZv({ i64, i8* } { i64 64, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.18, i32 0, i32 0) }, { i8*, void (i8*, %hunt.http.routing.RoutingContext.RoutingContext*)* } { i8* null, void (i8*, %hunt.http.routing.RoutingContext.RoutingContext*)* @_D3app10controller13ApiControllerQp8__mixin48__mixin127_sharedStaticCtor_L568_C5_1FZ__T9__lambda5TC4hunt4http7routing14RoutingContextQqZQBxMFQBrZv }) #1
  ret void
}

; [#uses = 4]
declare void @_D4hunt9framework10controller10Controller20registerRouteHandlerFAyaDFCQCq4http7routing14RoutingContextQqZvZv({ i64, i8* }, { i8*, void (i8*, %hunt.http.routing.RoutingContext.RoutingContext*)* }) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal void @_D3app10controller13ApiControllerQp8__mixin48__mixin127_sharedStaticCtor_L568_C5_1FZ__T9__lambda2TC4hunt4http7routing14RoutingContextQqZQBxMFQBrZv(i8* nonnull %.nest_arg, %hunt.http.routing.RoutingContext.RoutingContext* %context_arg) #0 {
  %context = alloca %hunt.http.routing.RoutingContext.RoutingContext*, align 8 ; [#uses = 4, size/byte = 8]
  store %hunt.http.routing.RoutingContext.RoutingContext* %context_arg, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8
  %1 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  %2 = getelementptr inbounds %hunt.http.routing.RoutingContext.RoutingContext, %hunt.http.routing.RoutingContext.RoutingContext* %1, i32 0, i32 0 ; [#uses = 1, type = [67 x i8*]**]
  %3 = load [67 x i8*]*, [67 x i8*]** %2, align 8 ; [#uses = 1]
  %"groupName@vtbl" = getelementptr inbounds [67 x i8*], [67 x i8*]* %3, i32 0, i32 66 ; [#uses = 1, type = i8**]
  %4 = load i8*, i8** %"groupName@vtbl", align 8  ; [#uses = 1]
  %groupName = bitcast i8* %4 to void (%hunt.http.routing.RoutingContext.RoutingContext*, { i64, i8* })* ; [#uses = 1]
  %5 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  call void %groupName(%hunt.http.routing.RoutingContext.RoutingContext* nonnull %5, { i64, i8* } { i64 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0) })
  %6 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  call void @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa7_74657374417069ZQCjFCQEe4http7routing14RoutingContextQqZv(%hunt.http.routing.RoutingContext.RoutingContext* %6) #1
  ret void
}

; [#uses = 0]
declare void @_D4hunt4http7routing14RoutingContextQq9groupNameMFAyaZv(%hunt.http.routing.RoutingContext.RoutingContext* nonnull, { i64, i8* }) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa7_74657374417069ZQCjFCQEe4http7routing14RoutingContextQqZv(%hunt.http.routing.RoutingContext.RoutingContext* %context_arg) #0 personality i32 (i32, i32, i64, i8*, i8*)* @_d_eh_personality {
  %context = alloca %hunt.http.routing.RoutingContext.RoutingContext*, align 8 ; [#uses = 4, size/byte = 8]
  %.frame = alloca %nest.callHandler, align 8     ; [#uses = 3, size/byte = 8]
  %controller = alloca %app.controller.ApiController.ApiController*, align 8 ; [#uses = 8, size/byte = 8]
  %appConfig = alloca %hunt.framework.config.ApplicationConfig.ApplicationConfig*, align 8 ; [#uses = 2, size/byte = 8]
  %eh.ptr = alloca i8*, align 8                   ; [#uses = 4, size/byte = 8]
  %eh.selector = alloca i32, align 4              ; [#uses = 3, size/byte = 4]
  %errorRes = alloca %hunt.framework.http.Response.Response*, align 8 ; [#uses = 4, size/byte = 8]
  %branchsel.finally = alloca i32, align 4        ; [#uses = 4, size/byte = 4]
  store %hunt.http.routing.RoutingContext.RoutingContext* %context_arg, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8
  %t = getelementptr inbounds %nest.callHandler, %nest.callHandler* %.frame, i32 0, i32 0 ; [#uses = 3, type = %object.Throwable**]
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3app10controller13ApiControllerQp7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %app.controller.ApiController.ApiController* ; [#uses = 5]
  %vtbl = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  store [38 x i8*]* @_D3app10controller13ApiControllerQp6__vtblZ, [38 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %1 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = %hunt.framework.http.Request.Request**]
  %2 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* @_D3app10controller13ApiControllerQp6__initZ, i32 0, i32 2 ; [#uses = 1, type = %hunt.framework.http.Request.Request**]
  %3 = bitcast %hunt.framework.http.Request.Request** %1 to i8* ; [#uses = 1]
  %4 = bitcast %hunt.framework.http.Request.Request** %2 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 104, i1 false)
  %5 = call %app.controller.ApiController.ApiController* @_D3app10controller13ApiControllerQp6__ctorMFZCQBsQBrQBiQBl(%app.controller.ApiController.ApiController* nonnull returned %.newclass_gc) #0 ; [#uses = 0]
  store %app.controller.ApiController.ApiController* %.newclass_gc, %app.controller.ApiController.ApiController** %controller, align 8
  %6 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  %7 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %6, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  %8 = load [38 x i8*]*, [38 x i8*]** %7, align 8 ; [#uses = 1]
  %"initializeMiddlewares@vtbl" = getelementptr inbounds [38 x i8*], [38 x i8*]* %8, i32 0, i32 35 ; [#uses = 1, type = i8**]
  %9 = load i8*, i8** %"initializeMiddlewares@vtbl", align 8 ; [#uses = 1]
  %initializeMiddlewares = bitcast i8* %9 to void (%app.controller.ApiController.ApiController*)* ; [#uses = 1]
  %10 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  invoke void %initializeMiddlewares(%app.controller.ApiController.ApiController* nonnull %10)
          to label %postinvoke12 unwind label %landingPad11

postinvoke12:                                     ; preds = %0
  %11 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  %12 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %11, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  %13 = load [38 x i8*]*, [38 x i8*]** %12, align 8 ; [#uses = 1]
  %"callActionMethod@vtbl" = getelementptr inbounds [38 x i8*], [38 x i8*]* %13, i32 0, i32 37 ; [#uses = 1, type = i8**]
  %14 = load i8*, i8** %"callActionMethod@vtbl", align 8 ; [#uses = 1]
  %callActionMethod = bitcast i8* %14 to void (%app.controller.ApiController.ApiController*, { i64, i8* }, %hunt.http.routing.RoutingContext.RoutingContext*)* ; [#uses = 1]
  %15 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  %16 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  invoke void %callActionMethod(%app.controller.ApiController.ApiController* nonnull %15, { i64, i8* } { i64 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0) }, %hunt.http.routing.RoutingContext.RoutingContext* %16)
          to label %postinvoke13 unwind label %landingPad11

postinvoke13:                                     ; preds = %postinvoke12
  %17 = bitcast %app.controller.ApiController.ApiController** %controller to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %18 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %17, align 8 ; [#uses = 1]
  %19 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %18, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %20 = load [32 x i8*]*, [32 x i8*]** %19, align 8 ; [#uses = 1]
  %"done@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %20, i32 0, i32 28 ; [#uses = 1, type = i8**]
  %21 = load i8*, i8** %"done@vtbl", align 8      ; [#uses = 1]
  %done = bitcast i8* %21 to void (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %22 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %17, align 8 ; [#uses = 1]
  invoke void %done(%hunt.framework.controller.Controller.Controller* nonnull %22)
          to label %postinvoke14 unwind label %landingPad11

postinvoke14:                                     ; preds = %postinvoke13
  br label %try.success.or.caught

catch.object.Throwable:                           ; preds = %landingPad11
  %23 = load i8*, i8** %eh.ptr, align 8           ; [#uses = 1]
  %24 = call %object.Throwable* @_d_eh_enter_catch(i8* %23) ; [#uses = 1]
  store %object.Throwable* null, %object.Throwable** %t, align 8
  store %object.Throwable* %24, %object.Throwable** %t, align 8
  %25 = bitcast %nest.callHandler* %.frame to i8* ; [#uses = 1]
  %26 = insertvalue { i8*, %object.Throwable* (i8*)* } undef, i8* %25, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, %object.Throwable* (i8*)* } %26, %object.Throwable* (i8*)* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa7_74657374417069ZQCjFCQEe4http7routing14RoutingContextQqZ12__dgliteral4MFNaNbNiNfZC6object9Throwable, 1 ; [#uses = 1]
  call void @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka87_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20227465737441706922292e63616c6c48616e646c6572TC6object9ThrowableZQQnFNbLQBaZv({ i8*, %object.Throwable* (i8*)* } %.func) #1
  %27 = invoke %hunt.framework.application.Application.Application* @_D4hunt9framework11application11Application3appFZCQBwQBuQBnQBdQBg() #1
          to label %postinvoke unwind label %landingPad ; [#uses = 1]

postinvoke:                                       ; preds = %catch.object.Throwable
  %28 = invoke %hunt.logging.Logger.Logger* @_D4hunt9framework11application11ApplicationQn6loggerMFZCQCc7logging6LoggerQh(%hunt.framework.application.Application.Application* nonnull %27) #1
          to label %postinvoke1 unwind label %landingPad ; [#uses = 1]

postinvoke1:                                      ; preds = %postinvoke
  %29 = bitcast %nest.callHandler* %.frame to i8* ; [#uses = 1]
  %30 = insertvalue { i8*, %object.Throwable* (i8*)* } undef, i8* %29, 0 ; [#uses = 1]
  %.func2 = insertvalue { i8*, %object.Throwable* (i8*)* } %30, %object.Throwable* (i8*)* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa7_74657374417069ZQCjFCQEe4http7routing14RoutingContextQqZ12__dgliteral5MFNaNbNiNfZC6object9Throwable, 1 ; [#uses = 1]
  call void @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka87_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20227465737441706922292e63616c6c48616e646c6572TC6object9ThrowableZQQkMFNbLQBbZv(%hunt.logging.Logger.Logger* nonnull %28, { i8*, %object.Throwable* (i8*)* } %.func2) #1
  %.newclass_gc_alloc4 = invoke %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D4hunt9framework4http8ResponseQj7__ClassZ) #2
          to label %postinvoke3 unwind label %landingPad ; [#uses = 1]

postinvoke3:                                      ; preds = %postinvoke1
  %.newclass_gc5 = bitcast %object.Object* %.newclass_gc_alloc4 to %hunt.framework.http.Response.Response* ; [#uses = 5]
  %vtbl6 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %.newclass_gc5, i32 0, i32 0 ; [#uses = 1, type = [18 x i8*]**]
  store [18 x i8*]* @_D4hunt9framework4http8ResponseQj6__vtblZ, [18 x i8*]** %vtbl6, align 8
  %monitor7 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %.newclass_gc5, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor7, align 8
  %31 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %.newclass_gc5, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %32 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* @_D4hunt9framework4http8ResponseQj6__initZ, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %33 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %31 to i8* ; [#uses = 1]
  %34 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %32 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %34, i64 9, i1 false)
  %35 = invoke %hunt.framework.http.Response.Response* @_D4hunt9framework4http8ResponseQj6__ctorMFZCQBqQBoQBhQBfQBi(%hunt.framework.http.Response.Response* nonnull returned %.newclass_gc5) #1
          to label %postinvoke8 unwind label %landingPad ; [#uses = 0]

postinvoke8:                                      ; preds = %postinvoke3
  store %hunt.framework.http.Response.Response* %.newclass_gc5, %hunt.framework.http.Response.Response** %errorRes, align 8
  %36 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %errorRes, align 8 ; [#uses = 1]
  %37 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %36, i32 0, i32 0 ; [#uses = 1, type = [18 x i8*]**]
  %38 = load [18 x i8*]*, [18 x i8*]** %37, align 8 ; [#uses = 1]
  %"doError@vtbl" = getelementptr inbounds [18 x i8*], [18 x i8*]* %38, i32 0, i32 16 ; [#uses = 1, type = i8**]
  %39 = load i8*, i8** %"doError@vtbl", align 8   ; [#uses = 1]
  %doError = bitcast i8* %39 to void (%hunt.framework.http.Response.Response*, i16, %object.Throwable*, { i64, i8* })* ; [#uses = 1]
  %40 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %errorRes, align 8 ; [#uses = 1]
  %41 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 1]
  invoke void %doError(%hunt.framework.http.Response.Response* nonnull %40, i16 zeroext 500, %object.Throwable* %41, { i64, i8* } { i64 23, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.54, i32 0, i32 0) })
          to label %postinvoke9 unwind label %landingPad

postinvoke9:                                      ; preds = %postinvoke8
  %42 = bitcast %app.controller.ApiController.ApiController** %controller to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %43 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %42, align 8 ; [#uses = 1]
  %44 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %43, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %45 = load [32 x i8*]*, [32 x i8*]** %44, align 8 ; [#uses = 1]
  %"raiseError@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %45, i32 0, i32 26 ; [#uses = 1, type = i8**]
  %46 = load i8*, i8** %"raiseError@vtbl", align 8 ; [#uses = 1]
  %raiseError = bitcast i8* %46 to void (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* ; [#uses = 1]
  %47 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %42, align 8 ; [#uses = 1]
  %48 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %errorRes, align 8 ; [#uses = 1]
  invoke void %raiseError(%hunt.framework.controller.Controller.Controller* nonnull %47, %hunt.framework.http.Response.Response* %48)
          to label %postinvoke10 unwind label %landingPad

postinvoke10:                                     ; preds = %postinvoke9
  br label %try.success.or.caught

try.success.or.caught:                            ; preds = %postinvoke14, %postinvoke10
  %49 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  %50 = getelementptr inbounds %hunt.http.routing.RoutingContext.RoutingContext, %hunt.http.routing.RoutingContext.RoutingContext* %49, i32 0, i32 0 ; [#uses = 1, type = [67 x i8*]**]
  %51 = load [67 x i8*]*, [67 x i8*]** %50, align 8 ; [#uses = 1]
  %"end@vtbl" = getelementptr inbounds [67 x i8*], [67 x i8*]* %51, i32 0, i32 48 ; [#uses = 1, type = i8**]
  %52 = load i8*, i8** %"end@vtbl", align 8       ; [#uses = 1]
  %end = bitcast i8* %52 to %hunt.http.routing.RoutingContext.RoutingContext* (%hunt.http.routing.RoutingContext.RoutingContext*)* ; [#uses = 1]
  %53 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  %54 = invoke %hunt.http.routing.RoutingContext.RoutingContext* %end(%hunt.http.routing.RoutingContext.RoutingContext* nonnull %53)
          to label %postinvoke15 unwind label %landingPad ; [#uses = 0]

postinvoke15:                                     ; preds = %try.success.or.caught
  store i32 1, i32* %branchsel.finally, align 4
  br label %finally

finally:                                          ; preds = %postinvoke15, %landingPad11.mismatch, %landingPad
  %55 = call %hunt.framework.application.Application.Application* @_D4hunt9framework11application11Application3appFZCQBwQBuQBnQBdQBg() #1 ; [#uses = 1]
  %56 = call %hunt.framework.config.ApplicationConfig.ApplicationConfig* @_D4hunt9framework11application11ApplicationQn6configMFZCQCcQCaQr17ApplicationConfigQt(%hunt.framework.application.Application.Application* nonnull %55) #1 ; [#uses = 1]
  store %hunt.framework.config.ApplicationConfig.ApplicationConfig* %56, %hunt.framework.config.ApplicationConfig.ApplicationConfig** %appConfig, align 8
  %57 = load %hunt.framework.config.ApplicationConfig.ApplicationConfig*, %hunt.framework.config.ApplicationConfig.ApplicationConfig** %appConfig, align 8 ; [#uses = 1]
  %58 = getelementptr inbounds %hunt.framework.config.ApplicationConfig.ApplicationConfig, %hunt.framework.config.ApplicationConfig.ApplicationConfig* %57, i32 0, i32 9 ; [#uses = 1, type = %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf*]
  %59 = getelementptr inbounds %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf* %58, i32 0, i32 4 ; [#uses = 1, type = i32*]
  %60 = load i32, i32* %59, align 4               ; [#uses = 1]
  %61 = icmp eq i32 %60, 0                        ; [#uses = 1]
  br i1 %61, label %if, label %endif

if:                                               ; preds = %finally
  call void @_D4hunt4util14ResoureManager14collectResoureFNbZv() #1
  br label %endif

endif:                                            ; preds = %if, %finally
  %62 = bitcast %app.controller.ApiController.ApiController** %controller to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %63 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %62, align 8 ; [#uses = 1]
  %64 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %63, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %65 = load [32 x i8*]*, [32 x i8*]** %64, align 8 ; [#uses = 1]
  %"dispose@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %65, i32 0, i32 31 ; [#uses = 1, type = i8**]
  %66 = load i8*, i8** %"dispose@vtbl", align 8   ; [#uses = 1]
  %dispose = bitcast i8* %66 to void (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %67 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %62, align 8 ; [#uses = 1]
  call void %dispose(%hunt.framework.controller.Controller.Controller* nonnull %67)
  %68 = load i32, i32* %branchsel.finally, align 4 ; [#uses = 1]
  switch i32 %68, label %eh.resume [
    i32 1, label %try.success
  ]

try.success:                                      ; preds = %endif
  ret void

landingPad:                                       ; preds = %try.success.or.caught, %postinvoke9, %postinvoke8, %postinvoke3, %postinvoke1, %postinvoke, %catch.object.Throwable
  %69 = landingpad { i8*, i32 }
          cleanup                                 ; [#uses = 2]
  %70 = extractvalue { i8*, i32 } %69, 0          ; [#uses = 1]
  store i8* %70, i8** %eh.ptr, align 8
  %71 = extractvalue { i8*, i32 } %69, 1          ; [#uses = 1]
  store i32 %71, i32* %eh.selector, align 4
  store i32 0, i32* %branchsel.finally, align 4
  br label %finally

eh.resume:                                        ; preds = %endif
  %72 = load i8*, i8** %eh.ptr, align 8           ; [#uses = 1]
  call void @_Unwind_Resume(i8* %72)
  unreachable

landingPad11:                                     ; preds = %postinvoke13, %postinvoke12, %0
  %73 = landingpad { i8*, i32 }
          cleanup
          catch %object.TypeInfo_Class* @_D6object9Throwable7__ClassZ ; [#uses = 2]
  %74 = extractvalue { i8*, i32 } %73, 0          ; [#uses = 1]
  store i8* %74, i8** %eh.ptr, align 8
  %75 = extractvalue { i8*, i32 } %73, 1          ; [#uses = 1]
  store i32 %75, i32* %eh.selector, align 4
  %76 = call i32 @llvm.eh.typeid.for(i8* bitcast (%object.TypeInfo_Class* @_D6object9Throwable7__ClassZ to i8*)) ; [#uses = 1]
  %77 = load i32, i32* %eh.selector, align 4      ; [#uses = 1]
  %78 = icmp eq i32 %77, %76                      ; [#uses = 1]
  br i1 %78, label %catch.object.Throwable, label %landingPad11.mismatch

landingPad11.mismatch:                            ; preds = %landingPad11
  store i32 0, i32* %branchsel.finally, align 4
  br label %finally
}

; [#uses = 1]
; Function Attrs: uwtable
define internal void @_D3app10controller13ApiControllerQp8__mixin48__mixin127_sharedStaticCtor_L568_C5_1FZ__T9__lambda3TC4hunt4http7routing14RoutingContextQqZQBxMFQBrZv(i8* nonnull %.nest_arg, %hunt.http.routing.RoutingContext.RoutingContext* %context_arg) #0 {
  %context = alloca %hunt.http.routing.RoutingContext.RoutingContext*, align 8 ; [#uses = 4, size/byte = 8]
  store %hunt.http.routing.RoutingContext.RoutingContext* %context_arg, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8
  %1 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  %2 = getelementptr inbounds %hunt.http.routing.RoutingContext.RoutingContext, %hunt.http.routing.RoutingContext.RoutingContext* %1, i32 0, i32 0 ; [#uses = 1, type = [67 x i8*]**]
  %3 = load [67 x i8*]*, [67 x i8*]** %2, align 8 ; [#uses = 1]
  %"groupName@vtbl" = getelementptr inbounds [67 x i8*], [67 x i8*]* %3, i32 0, i32 66 ; [#uses = 1, type = i8**]
  %4 = load i8*, i8** %"groupName@vtbl", align 8  ; [#uses = 1]
  %groupName = bitcast i8* %4 to void (%hunt.http.routing.RoutingContext.RoutingContext*, { i64, i8* })* ; [#uses = 1]
  %5 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  call void %groupName(%hunt.http.routing.RoutingContext.RoutingContext* nonnull %5, { i64, i8* } { i64 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0) })
  %6 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  call void @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa4_6563686fZQCdFCQDy4http7routing14RoutingContextQqZv(%hunt.http.routing.RoutingContext.RoutingContext* %6) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa4_6563686fZQCdFCQDy4http7routing14RoutingContextQqZv(%hunt.http.routing.RoutingContext.RoutingContext* %context_arg) #0 personality i32 (i32, i32, i64, i8*, i8*)* @_d_eh_personality {
  %context = alloca %hunt.http.routing.RoutingContext.RoutingContext*, align 8 ; [#uses = 4, size/byte = 8]
  %.frame = alloca %nest.callHandler.2, align 8   ; [#uses = 3, size/byte = 8]
  %controller = alloca %app.controller.ApiController.ApiController*, align 8 ; [#uses = 8, size/byte = 8]
  %appConfig = alloca %hunt.framework.config.ApplicationConfig.ApplicationConfig*, align 8 ; [#uses = 2, size/byte = 8]
  %eh.ptr = alloca i8*, align 8                   ; [#uses = 4, size/byte = 8]
  %eh.selector = alloca i32, align 4              ; [#uses = 3, size/byte = 4]
  %errorRes = alloca %hunt.framework.http.Response.Response*, align 8 ; [#uses = 4, size/byte = 8]
  %branchsel.finally = alloca i32, align 4        ; [#uses = 4, size/byte = 4]
  store %hunt.http.routing.RoutingContext.RoutingContext* %context_arg, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8
  %t = getelementptr inbounds %nest.callHandler.2, %nest.callHandler.2* %.frame, i32 0, i32 0 ; [#uses = 3, type = %object.Throwable**]
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3app10controller13ApiControllerQp7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %app.controller.ApiController.ApiController* ; [#uses = 5]
  %vtbl = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  store [38 x i8*]* @_D3app10controller13ApiControllerQp6__vtblZ, [38 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %1 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = %hunt.framework.http.Request.Request**]
  %2 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* @_D3app10controller13ApiControllerQp6__initZ, i32 0, i32 2 ; [#uses = 1, type = %hunt.framework.http.Request.Request**]
  %3 = bitcast %hunt.framework.http.Request.Request** %1 to i8* ; [#uses = 1]
  %4 = bitcast %hunt.framework.http.Request.Request** %2 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 104, i1 false)
  %5 = call %app.controller.ApiController.ApiController* @_D3app10controller13ApiControllerQp6__ctorMFZCQBsQBrQBiQBl(%app.controller.ApiController.ApiController* nonnull returned %.newclass_gc) #0 ; [#uses = 0]
  store %app.controller.ApiController.ApiController* %.newclass_gc, %app.controller.ApiController.ApiController** %controller, align 8
  %6 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  %7 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %6, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  %8 = load [38 x i8*]*, [38 x i8*]** %7, align 8 ; [#uses = 1]
  %"initializeMiddlewares@vtbl" = getelementptr inbounds [38 x i8*], [38 x i8*]* %8, i32 0, i32 35 ; [#uses = 1, type = i8**]
  %9 = load i8*, i8** %"initializeMiddlewares@vtbl", align 8 ; [#uses = 1]
  %initializeMiddlewares = bitcast i8* %9 to void (%app.controller.ApiController.ApiController*)* ; [#uses = 1]
  %10 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  invoke void %initializeMiddlewares(%app.controller.ApiController.ApiController* nonnull %10)
          to label %postinvoke12 unwind label %landingPad11

postinvoke12:                                     ; preds = %0
  %11 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  %12 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %11, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  %13 = load [38 x i8*]*, [38 x i8*]** %12, align 8 ; [#uses = 1]
  %"callActionMethod@vtbl" = getelementptr inbounds [38 x i8*], [38 x i8*]* %13, i32 0, i32 37 ; [#uses = 1, type = i8**]
  %14 = load i8*, i8** %"callActionMethod@vtbl", align 8 ; [#uses = 1]
  %callActionMethod = bitcast i8* %14 to void (%app.controller.ApiController.ApiController*, { i64, i8* }, %hunt.http.routing.RoutingContext.RoutingContext*)* ; [#uses = 1]
  %15 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  %16 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  invoke void %callActionMethod(%app.controller.ApiController.ApiController* nonnull %15, { i64, i8* } { i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0) }, %hunt.http.routing.RoutingContext.RoutingContext* %16)
          to label %postinvoke13 unwind label %landingPad11

postinvoke13:                                     ; preds = %postinvoke12
  %17 = bitcast %app.controller.ApiController.ApiController** %controller to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %18 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %17, align 8 ; [#uses = 1]
  %19 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %18, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %20 = load [32 x i8*]*, [32 x i8*]** %19, align 8 ; [#uses = 1]
  %"done@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %20, i32 0, i32 28 ; [#uses = 1, type = i8**]
  %21 = load i8*, i8** %"done@vtbl", align 8      ; [#uses = 1]
  %done = bitcast i8* %21 to void (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %22 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %17, align 8 ; [#uses = 1]
  invoke void %done(%hunt.framework.controller.Controller.Controller* nonnull %22)
          to label %postinvoke14 unwind label %landingPad11

postinvoke14:                                     ; preds = %postinvoke13
  br label %try.success.or.caught

catch.object.Throwable:                           ; preds = %landingPad11
  %23 = load i8*, i8** %eh.ptr, align 8           ; [#uses = 1]
  %24 = call %object.Throwable* @_d_eh_enter_catch(i8* %23) ; [#uses = 1]
  store %object.Throwable* null, %object.Throwable** %t, align 8
  store %object.Throwable* %24, %object.Throwable** %t, align 8
  %25 = bitcast %nest.callHandler.2* %.frame to i8* ; [#uses = 1]
  %26 = insertvalue { i8*, %object.Throwable* (i8*)* } undef, i8* %25, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, %object.Throwable* (i8*)* } %26, %object.Throwable* (i8*)* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa4_6563686fZQCdFCQDy4http7routing14RoutingContextQqZ12__dgliteral4MFNaNbNiNfZC6object9Throwable, 1 ; [#uses = 1]
  call void @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226563686f22292e63616c6c48616e646c6572TC6object9ThrowableZQQhFNbLQBaZv({ i8*, %object.Throwable* (i8*)* } %.func) #1
  %27 = invoke %hunt.framework.application.Application.Application* @_D4hunt9framework11application11Application3appFZCQBwQBuQBnQBdQBg() #1
          to label %postinvoke unwind label %landingPad ; [#uses = 1]

postinvoke:                                       ; preds = %catch.object.Throwable
  %28 = invoke %hunt.logging.Logger.Logger* @_D4hunt9framework11application11ApplicationQn6loggerMFZCQCc7logging6LoggerQh(%hunt.framework.application.Application.Application* nonnull %27) #1
          to label %postinvoke1 unwind label %landingPad ; [#uses = 1]

postinvoke1:                                      ; preds = %postinvoke
  %29 = bitcast %nest.callHandler.2* %.frame to i8* ; [#uses = 1]
  %30 = insertvalue { i8*, %object.Throwable* (i8*)* } undef, i8* %29, 0 ; [#uses = 1]
  %.func2 = insertvalue { i8*, %object.Throwable* (i8*)* } %30, %object.Throwable* (i8*)* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa4_6563686fZQCdFCQDy4http7routing14RoutingContextQqZ12__dgliteral5MFNaNbNiNfZC6object9Throwable, 1 ; [#uses = 1]
  call void @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226563686f22292e63616c6c48616e646c6572TC6object9ThrowableZQQeMFNbLQBbZv(%hunt.logging.Logger.Logger* nonnull %28, { i8*, %object.Throwable* (i8*)* } %.func2) #1
  %.newclass_gc_alloc4 = invoke %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D4hunt9framework4http8ResponseQj7__ClassZ) #2
          to label %postinvoke3 unwind label %landingPad ; [#uses = 1]

postinvoke3:                                      ; preds = %postinvoke1
  %.newclass_gc5 = bitcast %object.Object* %.newclass_gc_alloc4 to %hunt.framework.http.Response.Response* ; [#uses = 5]
  %vtbl6 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %.newclass_gc5, i32 0, i32 0 ; [#uses = 1, type = [18 x i8*]**]
  store [18 x i8*]* @_D4hunt9framework4http8ResponseQj6__vtblZ, [18 x i8*]** %vtbl6, align 8
  %monitor7 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %.newclass_gc5, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor7, align 8
  %31 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %.newclass_gc5, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %32 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* @_D4hunt9framework4http8ResponseQj6__initZ, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %33 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %31 to i8* ; [#uses = 1]
  %34 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %32 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %34, i64 9, i1 false)
  %35 = invoke %hunt.framework.http.Response.Response* @_D4hunt9framework4http8ResponseQj6__ctorMFZCQBqQBoQBhQBfQBi(%hunt.framework.http.Response.Response* nonnull returned %.newclass_gc5) #1
          to label %postinvoke8 unwind label %landingPad ; [#uses = 0]

postinvoke8:                                      ; preds = %postinvoke3
  store %hunt.framework.http.Response.Response* %.newclass_gc5, %hunt.framework.http.Response.Response** %errorRes, align 8
  %36 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %errorRes, align 8 ; [#uses = 1]
  %37 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %36, i32 0, i32 0 ; [#uses = 1, type = [18 x i8*]**]
  %38 = load [18 x i8*]*, [18 x i8*]** %37, align 8 ; [#uses = 1]
  %"doError@vtbl" = getelementptr inbounds [18 x i8*], [18 x i8*]* %38, i32 0, i32 16 ; [#uses = 1, type = i8**]
  %39 = load i8*, i8** %"doError@vtbl", align 8   ; [#uses = 1]
  %doError = bitcast i8* %39 to void (%hunt.framework.http.Response.Response*, i16, %object.Throwable*, { i64, i8* })* ; [#uses = 1]
  %40 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %errorRes, align 8 ; [#uses = 1]
  %41 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 1]
  invoke void %doError(%hunt.framework.http.Response.Response* nonnull %40, i16 zeroext 500, %object.Throwable* %41, { i64, i8* } { i64 23, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.54, i32 0, i32 0) })
          to label %postinvoke9 unwind label %landingPad

postinvoke9:                                      ; preds = %postinvoke8
  %42 = bitcast %app.controller.ApiController.ApiController** %controller to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %43 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %42, align 8 ; [#uses = 1]
  %44 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %43, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %45 = load [32 x i8*]*, [32 x i8*]** %44, align 8 ; [#uses = 1]
  %"raiseError@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %45, i32 0, i32 26 ; [#uses = 1, type = i8**]
  %46 = load i8*, i8** %"raiseError@vtbl", align 8 ; [#uses = 1]
  %raiseError = bitcast i8* %46 to void (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* ; [#uses = 1]
  %47 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %42, align 8 ; [#uses = 1]
  %48 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %errorRes, align 8 ; [#uses = 1]
  invoke void %raiseError(%hunt.framework.controller.Controller.Controller* nonnull %47, %hunt.framework.http.Response.Response* %48)
          to label %postinvoke10 unwind label %landingPad

postinvoke10:                                     ; preds = %postinvoke9
  br label %try.success.or.caught

try.success.or.caught:                            ; preds = %postinvoke14, %postinvoke10
  %49 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  %50 = getelementptr inbounds %hunt.http.routing.RoutingContext.RoutingContext, %hunt.http.routing.RoutingContext.RoutingContext* %49, i32 0, i32 0 ; [#uses = 1, type = [67 x i8*]**]
  %51 = load [67 x i8*]*, [67 x i8*]** %50, align 8 ; [#uses = 1]
  %"end@vtbl" = getelementptr inbounds [67 x i8*], [67 x i8*]* %51, i32 0, i32 48 ; [#uses = 1, type = i8**]
  %52 = load i8*, i8** %"end@vtbl", align 8       ; [#uses = 1]
  %end = bitcast i8* %52 to %hunt.http.routing.RoutingContext.RoutingContext* (%hunt.http.routing.RoutingContext.RoutingContext*)* ; [#uses = 1]
  %53 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  %54 = invoke %hunt.http.routing.RoutingContext.RoutingContext* %end(%hunt.http.routing.RoutingContext.RoutingContext* nonnull %53)
          to label %postinvoke15 unwind label %landingPad ; [#uses = 0]

postinvoke15:                                     ; preds = %try.success.or.caught
  store i32 1, i32* %branchsel.finally, align 4
  br label %finally

finally:                                          ; preds = %postinvoke15, %landingPad11.mismatch, %landingPad
  %55 = call %hunt.framework.application.Application.Application* @_D4hunt9framework11application11Application3appFZCQBwQBuQBnQBdQBg() #1 ; [#uses = 1]
  %56 = call %hunt.framework.config.ApplicationConfig.ApplicationConfig* @_D4hunt9framework11application11ApplicationQn6configMFZCQCcQCaQr17ApplicationConfigQt(%hunt.framework.application.Application.Application* nonnull %55) #1 ; [#uses = 1]
  store %hunt.framework.config.ApplicationConfig.ApplicationConfig* %56, %hunt.framework.config.ApplicationConfig.ApplicationConfig** %appConfig, align 8
  %57 = load %hunt.framework.config.ApplicationConfig.ApplicationConfig*, %hunt.framework.config.ApplicationConfig.ApplicationConfig** %appConfig, align 8 ; [#uses = 1]
  %58 = getelementptr inbounds %hunt.framework.config.ApplicationConfig.ApplicationConfig, %hunt.framework.config.ApplicationConfig.ApplicationConfig* %57, i32 0, i32 9 ; [#uses = 1, type = %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf*]
  %59 = getelementptr inbounds %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf* %58, i32 0, i32 4 ; [#uses = 1, type = i32*]
  %60 = load i32, i32* %59, align 4               ; [#uses = 1]
  %61 = icmp eq i32 %60, 0                        ; [#uses = 1]
  br i1 %61, label %if, label %endif

if:                                               ; preds = %finally
  call void @_D4hunt4util14ResoureManager14collectResoureFNbZv() #1
  br label %endif

endif:                                            ; preds = %if, %finally
  %62 = bitcast %app.controller.ApiController.ApiController** %controller to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %63 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %62, align 8 ; [#uses = 1]
  %64 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %63, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %65 = load [32 x i8*]*, [32 x i8*]** %64, align 8 ; [#uses = 1]
  %"dispose@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %65, i32 0, i32 31 ; [#uses = 1, type = i8**]
  %66 = load i8*, i8** %"dispose@vtbl", align 8   ; [#uses = 1]
  %dispose = bitcast i8* %66 to void (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %67 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %62, align 8 ; [#uses = 1]
  call void %dispose(%hunt.framework.controller.Controller.Controller* nonnull %67)
  %68 = load i32, i32* %branchsel.finally, align 4 ; [#uses = 1]
  switch i32 %68, label %eh.resume [
    i32 1, label %try.success
  ]

try.success:                                      ; preds = %endif
  ret void

landingPad:                                       ; preds = %try.success.or.caught, %postinvoke9, %postinvoke8, %postinvoke3, %postinvoke1, %postinvoke, %catch.object.Throwable
  %69 = landingpad { i8*, i32 }
          cleanup                                 ; [#uses = 2]
  %70 = extractvalue { i8*, i32 } %69, 0          ; [#uses = 1]
  store i8* %70, i8** %eh.ptr, align 8
  %71 = extractvalue { i8*, i32 } %69, 1          ; [#uses = 1]
  store i32 %71, i32* %eh.selector, align 4
  store i32 0, i32* %branchsel.finally, align 4
  br label %finally

eh.resume:                                        ; preds = %endif
  %72 = load i8*, i8** %eh.ptr, align 8           ; [#uses = 1]
  call void @_Unwind_Resume(i8* %72)
  unreachable

landingPad11:                                     ; preds = %postinvoke13, %postinvoke12, %0
  %73 = landingpad { i8*, i32 }
          cleanup
          catch %object.TypeInfo_Class* @_D6object9Throwable7__ClassZ ; [#uses = 2]
  %74 = extractvalue { i8*, i32 } %73, 0          ; [#uses = 1]
  store i8* %74, i8** %eh.ptr, align 8
  %75 = extractvalue { i8*, i32 } %73, 1          ; [#uses = 1]
  store i32 %75, i32* %eh.selector, align 4
  %76 = call i32 @llvm.eh.typeid.for(i8* bitcast (%object.TypeInfo_Class* @_D6object9Throwable7__ClassZ to i8*)) ; [#uses = 1]
  %77 = load i32, i32* %eh.selector, align 4      ; [#uses = 1]
  %78 = icmp eq i32 %77, %76                      ; [#uses = 1]
  br i1 %78, label %catch.object.Throwable, label %landingPad11.mismatch

landingPad11.mismatch:                            ; preds = %landingPad11
  store i32 0, i32* %branchsel.finally, align 4
  br label %finally
}

; [#uses = 1]
; Function Attrs: uwtable
define internal void @_D3app10controller13ApiControllerQp8__mixin48__mixin127_sharedStaticCtor_L568_C5_1FZ__T9__lambda4TC4hunt4http7routing14RoutingContextQqZQBxMFQBrZv(i8* nonnull %.nest_arg, %hunt.http.routing.RoutingContext.RoutingContext* %context_arg) #0 {
  %context = alloca %hunt.http.routing.RoutingContext.RoutingContext*, align 8 ; [#uses = 4, size/byte = 8]
  store %hunt.http.routing.RoutingContext.RoutingContext* %context_arg, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8
  %1 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  %2 = getelementptr inbounds %hunt.http.routing.RoutingContext.RoutingContext, %hunt.http.routing.RoutingContext.RoutingContext* %1, i32 0, i32 0 ; [#uses = 1, type = [67 x i8*]**]
  %3 = load [67 x i8*]*, [67 x i8*]** %2, align 8 ; [#uses = 1]
  %"groupName@vtbl" = getelementptr inbounds [67 x i8*], [67 x i8*]* %3, i32 0, i32 66 ; [#uses = 1, type = i8**]
  %4 = load i8*, i8** %"groupName@vtbl", align 8  ; [#uses = 1]
  %groupName = bitcast i8* %4 to void (%hunt.http.routing.RoutingContext.RoutingContext*, { i64, i8* })* ; [#uses = 1]
  %5 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  call void %groupName(%hunt.http.routing.RoutingContext.RoutingContext* nonnull %5, { i64, i8* } { i64 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0) })
  %6 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  call void @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa4_66616374ZQCdFCQDy4http7routing14RoutingContextQqZv(%hunt.http.routing.RoutingContext.RoutingContext* %6) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa4_66616374ZQCdFCQDy4http7routing14RoutingContextQqZv(%hunt.http.routing.RoutingContext.RoutingContext* %context_arg) #0 personality i32 (i32, i32, i64, i8*, i8*)* @_d_eh_personality {
  %context = alloca %hunt.http.routing.RoutingContext.RoutingContext*, align 8 ; [#uses = 4, size/byte = 8]
  %.frame = alloca %nest.callHandler.5, align 8   ; [#uses = 3, size/byte = 8]
  %controller = alloca %app.controller.ApiController.ApiController*, align 8 ; [#uses = 8, size/byte = 8]
  %appConfig = alloca %hunt.framework.config.ApplicationConfig.ApplicationConfig*, align 8 ; [#uses = 2, size/byte = 8]
  %eh.ptr = alloca i8*, align 8                   ; [#uses = 4, size/byte = 8]
  %eh.selector = alloca i32, align 4              ; [#uses = 3, size/byte = 4]
  %errorRes = alloca %hunt.framework.http.Response.Response*, align 8 ; [#uses = 4, size/byte = 8]
  %branchsel.finally = alloca i32, align 4        ; [#uses = 4, size/byte = 4]
  store %hunt.http.routing.RoutingContext.RoutingContext* %context_arg, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8
  %t = getelementptr inbounds %nest.callHandler.5, %nest.callHandler.5* %.frame, i32 0, i32 0 ; [#uses = 3, type = %object.Throwable**]
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3app10controller13ApiControllerQp7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %app.controller.ApiController.ApiController* ; [#uses = 5]
  %vtbl = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  store [38 x i8*]* @_D3app10controller13ApiControllerQp6__vtblZ, [38 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %1 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = %hunt.framework.http.Request.Request**]
  %2 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* @_D3app10controller13ApiControllerQp6__initZ, i32 0, i32 2 ; [#uses = 1, type = %hunt.framework.http.Request.Request**]
  %3 = bitcast %hunt.framework.http.Request.Request** %1 to i8* ; [#uses = 1]
  %4 = bitcast %hunt.framework.http.Request.Request** %2 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 104, i1 false)
  %5 = call %app.controller.ApiController.ApiController* @_D3app10controller13ApiControllerQp6__ctorMFZCQBsQBrQBiQBl(%app.controller.ApiController.ApiController* nonnull returned %.newclass_gc) #0 ; [#uses = 0]
  store %app.controller.ApiController.ApiController* %.newclass_gc, %app.controller.ApiController.ApiController** %controller, align 8
  %6 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  %7 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %6, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  %8 = load [38 x i8*]*, [38 x i8*]** %7, align 8 ; [#uses = 1]
  %"initializeMiddlewares@vtbl" = getelementptr inbounds [38 x i8*], [38 x i8*]* %8, i32 0, i32 35 ; [#uses = 1, type = i8**]
  %9 = load i8*, i8** %"initializeMiddlewares@vtbl", align 8 ; [#uses = 1]
  %initializeMiddlewares = bitcast i8* %9 to void (%app.controller.ApiController.ApiController*)* ; [#uses = 1]
  %10 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  invoke void %initializeMiddlewares(%app.controller.ApiController.ApiController* nonnull %10)
          to label %postinvoke12 unwind label %landingPad11

postinvoke12:                                     ; preds = %0
  %11 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  %12 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %11, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  %13 = load [38 x i8*]*, [38 x i8*]** %12, align 8 ; [#uses = 1]
  %"callActionMethod@vtbl" = getelementptr inbounds [38 x i8*], [38 x i8*]* %13, i32 0, i32 37 ; [#uses = 1, type = i8**]
  %14 = load i8*, i8** %"callActionMethod@vtbl", align 8 ; [#uses = 1]
  %callActionMethod = bitcast i8* %14 to void (%app.controller.ApiController.ApiController*, { i64, i8* }, %hunt.http.routing.RoutingContext.RoutingContext*)* ; [#uses = 1]
  %15 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  %16 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  invoke void %callActionMethod(%app.controller.ApiController.ApiController* nonnull %15, { i64, i8* } { i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0) }, %hunt.http.routing.RoutingContext.RoutingContext* %16)
          to label %postinvoke13 unwind label %landingPad11

postinvoke13:                                     ; preds = %postinvoke12
  %17 = bitcast %app.controller.ApiController.ApiController** %controller to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %18 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %17, align 8 ; [#uses = 1]
  %19 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %18, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %20 = load [32 x i8*]*, [32 x i8*]** %19, align 8 ; [#uses = 1]
  %"done@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %20, i32 0, i32 28 ; [#uses = 1, type = i8**]
  %21 = load i8*, i8** %"done@vtbl", align 8      ; [#uses = 1]
  %done = bitcast i8* %21 to void (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %22 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %17, align 8 ; [#uses = 1]
  invoke void %done(%hunt.framework.controller.Controller.Controller* nonnull %22)
          to label %postinvoke14 unwind label %landingPad11

postinvoke14:                                     ; preds = %postinvoke13
  br label %try.success.or.caught

catch.object.Throwable:                           ; preds = %landingPad11
  %23 = load i8*, i8** %eh.ptr, align 8           ; [#uses = 1]
  %24 = call %object.Throwable* @_d_eh_enter_catch(i8* %23) ; [#uses = 1]
  store %object.Throwable* null, %object.Throwable** %t, align 8
  store %object.Throwable* %24, %object.Throwable** %t, align 8
  %25 = bitcast %nest.callHandler.5* %.frame to i8* ; [#uses = 1]
  %26 = insertvalue { i8*, %object.Throwable* (i8*)* } undef, i8* %25, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, %object.Throwable* (i8*)* } %26, %object.Throwable* (i8*)* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa4_66616374ZQCdFCQDy4http7routing14RoutingContextQqZ12__dgliteral4MFNaNbNiNfZC6object9Throwable, 1 ; [#uses = 1]
  call void @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226661637422292e63616c6c48616e646c6572TC6object9ThrowableZQQhFNbLQBaZv({ i8*, %object.Throwable* (i8*)* } %.func) #1
  %27 = invoke %hunt.framework.application.Application.Application* @_D4hunt9framework11application11Application3appFZCQBwQBuQBnQBdQBg() #1
          to label %postinvoke unwind label %landingPad ; [#uses = 1]

postinvoke:                                       ; preds = %catch.object.Throwable
  %28 = invoke %hunt.logging.Logger.Logger* @_D4hunt9framework11application11ApplicationQn6loggerMFZCQCc7logging6LoggerQh(%hunt.framework.application.Application.Application* nonnull %27) #1
          to label %postinvoke1 unwind label %landingPad ; [#uses = 1]

postinvoke1:                                      ; preds = %postinvoke
  %29 = bitcast %nest.callHandler.5* %.frame to i8* ; [#uses = 1]
  %30 = insertvalue { i8*, %object.Throwable* (i8*)* } undef, i8* %29, 0 ; [#uses = 1]
  %.func2 = insertvalue { i8*, %object.Throwable* (i8*)* } %30, %object.Throwable* (i8*)* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa4_66616374ZQCdFCQDy4http7routing14RoutingContextQqZ12__dgliteral5MFNaNbNiNfZC6object9Throwable, 1 ; [#uses = 1]
  call void @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226661637422292e63616c6c48616e646c6572TC6object9ThrowableZQQeMFNbLQBbZv(%hunt.logging.Logger.Logger* nonnull %28, { i8*, %object.Throwable* (i8*)* } %.func2) #1
  %.newclass_gc_alloc4 = invoke %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D4hunt9framework4http8ResponseQj7__ClassZ) #2
          to label %postinvoke3 unwind label %landingPad ; [#uses = 1]

postinvoke3:                                      ; preds = %postinvoke1
  %.newclass_gc5 = bitcast %object.Object* %.newclass_gc_alloc4 to %hunt.framework.http.Response.Response* ; [#uses = 5]
  %vtbl6 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %.newclass_gc5, i32 0, i32 0 ; [#uses = 1, type = [18 x i8*]**]
  store [18 x i8*]* @_D4hunt9framework4http8ResponseQj6__vtblZ, [18 x i8*]** %vtbl6, align 8
  %monitor7 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %.newclass_gc5, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor7, align 8
  %31 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %.newclass_gc5, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %32 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* @_D4hunt9framework4http8ResponseQj6__initZ, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %33 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %31 to i8* ; [#uses = 1]
  %34 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %32 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %34, i64 9, i1 false)
  %35 = invoke %hunt.framework.http.Response.Response* @_D4hunt9framework4http8ResponseQj6__ctorMFZCQBqQBoQBhQBfQBi(%hunt.framework.http.Response.Response* nonnull returned %.newclass_gc5) #1
          to label %postinvoke8 unwind label %landingPad ; [#uses = 0]

postinvoke8:                                      ; preds = %postinvoke3
  store %hunt.framework.http.Response.Response* %.newclass_gc5, %hunt.framework.http.Response.Response** %errorRes, align 8
  %36 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %errorRes, align 8 ; [#uses = 1]
  %37 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %36, i32 0, i32 0 ; [#uses = 1, type = [18 x i8*]**]
  %38 = load [18 x i8*]*, [18 x i8*]** %37, align 8 ; [#uses = 1]
  %"doError@vtbl" = getelementptr inbounds [18 x i8*], [18 x i8*]* %38, i32 0, i32 16 ; [#uses = 1, type = i8**]
  %39 = load i8*, i8** %"doError@vtbl", align 8   ; [#uses = 1]
  %doError = bitcast i8* %39 to void (%hunt.framework.http.Response.Response*, i16, %object.Throwable*, { i64, i8* })* ; [#uses = 1]
  %40 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %errorRes, align 8 ; [#uses = 1]
  %41 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 1]
  invoke void %doError(%hunt.framework.http.Response.Response* nonnull %40, i16 zeroext 500, %object.Throwable* %41, { i64, i8* } { i64 23, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.54, i32 0, i32 0) })
          to label %postinvoke9 unwind label %landingPad

postinvoke9:                                      ; preds = %postinvoke8
  %42 = bitcast %app.controller.ApiController.ApiController** %controller to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %43 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %42, align 8 ; [#uses = 1]
  %44 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %43, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %45 = load [32 x i8*]*, [32 x i8*]** %44, align 8 ; [#uses = 1]
  %"raiseError@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %45, i32 0, i32 26 ; [#uses = 1, type = i8**]
  %46 = load i8*, i8** %"raiseError@vtbl", align 8 ; [#uses = 1]
  %raiseError = bitcast i8* %46 to void (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* ; [#uses = 1]
  %47 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %42, align 8 ; [#uses = 1]
  %48 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %errorRes, align 8 ; [#uses = 1]
  invoke void %raiseError(%hunt.framework.controller.Controller.Controller* nonnull %47, %hunt.framework.http.Response.Response* %48)
          to label %postinvoke10 unwind label %landingPad

postinvoke10:                                     ; preds = %postinvoke9
  br label %try.success.or.caught

try.success.or.caught:                            ; preds = %postinvoke14, %postinvoke10
  %49 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  %50 = getelementptr inbounds %hunt.http.routing.RoutingContext.RoutingContext, %hunt.http.routing.RoutingContext.RoutingContext* %49, i32 0, i32 0 ; [#uses = 1, type = [67 x i8*]**]
  %51 = load [67 x i8*]*, [67 x i8*]** %50, align 8 ; [#uses = 1]
  %"end@vtbl" = getelementptr inbounds [67 x i8*], [67 x i8*]* %51, i32 0, i32 48 ; [#uses = 1, type = i8**]
  %52 = load i8*, i8** %"end@vtbl", align 8       ; [#uses = 1]
  %end = bitcast i8* %52 to %hunt.http.routing.RoutingContext.RoutingContext* (%hunt.http.routing.RoutingContext.RoutingContext*)* ; [#uses = 1]
  %53 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  %54 = invoke %hunt.http.routing.RoutingContext.RoutingContext* %end(%hunt.http.routing.RoutingContext.RoutingContext* nonnull %53)
          to label %postinvoke15 unwind label %landingPad ; [#uses = 0]

postinvoke15:                                     ; preds = %try.success.or.caught
  store i32 1, i32* %branchsel.finally, align 4
  br label %finally

finally:                                          ; preds = %postinvoke15, %landingPad11.mismatch, %landingPad
  %55 = call %hunt.framework.application.Application.Application* @_D4hunt9framework11application11Application3appFZCQBwQBuQBnQBdQBg() #1 ; [#uses = 1]
  %56 = call %hunt.framework.config.ApplicationConfig.ApplicationConfig* @_D4hunt9framework11application11ApplicationQn6configMFZCQCcQCaQr17ApplicationConfigQt(%hunt.framework.application.Application.Application* nonnull %55) #1 ; [#uses = 1]
  store %hunt.framework.config.ApplicationConfig.ApplicationConfig* %56, %hunt.framework.config.ApplicationConfig.ApplicationConfig** %appConfig, align 8
  %57 = load %hunt.framework.config.ApplicationConfig.ApplicationConfig*, %hunt.framework.config.ApplicationConfig.ApplicationConfig** %appConfig, align 8 ; [#uses = 1]
  %58 = getelementptr inbounds %hunt.framework.config.ApplicationConfig.ApplicationConfig, %hunt.framework.config.ApplicationConfig.ApplicationConfig* %57, i32 0, i32 9 ; [#uses = 1, type = %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf*]
  %59 = getelementptr inbounds %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf* %58, i32 0, i32 4 ; [#uses = 1, type = i32*]
  %60 = load i32, i32* %59, align 4               ; [#uses = 1]
  %61 = icmp eq i32 %60, 0                        ; [#uses = 1]
  br i1 %61, label %if, label %endif

if:                                               ; preds = %finally
  call void @_D4hunt4util14ResoureManager14collectResoureFNbZv() #1
  br label %endif

endif:                                            ; preds = %if, %finally
  %62 = bitcast %app.controller.ApiController.ApiController** %controller to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %63 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %62, align 8 ; [#uses = 1]
  %64 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %63, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %65 = load [32 x i8*]*, [32 x i8*]** %64, align 8 ; [#uses = 1]
  %"dispose@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %65, i32 0, i32 31 ; [#uses = 1, type = i8**]
  %66 = load i8*, i8** %"dispose@vtbl", align 8   ; [#uses = 1]
  %dispose = bitcast i8* %66 to void (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %67 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %62, align 8 ; [#uses = 1]
  call void %dispose(%hunt.framework.controller.Controller.Controller* nonnull %67)
  %68 = load i32, i32* %branchsel.finally, align 4 ; [#uses = 1]
  switch i32 %68, label %eh.resume [
    i32 1, label %try.success
  ]

try.success:                                      ; preds = %endif
  ret void

landingPad:                                       ; preds = %try.success.or.caught, %postinvoke9, %postinvoke8, %postinvoke3, %postinvoke1, %postinvoke, %catch.object.Throwable
  %69 = landingpad { i8*, i32 }
          cleanup                                 ; [#uses = 2]
  %70 = extractvalue { i8*, i32 } %69, 0          ; [#uses = 1]
  store i8* %70, i8** %eh.ptr, align 8
  %71 = extractvalue { i8*, i32 } %69, 1          ; [#uses = 1]
  store i32 %71, i32* %eh.selector, align 4
  store i32 0, i32* %branchsel.finally, align 4
  br label %finally

eh.resume:                                        ; preds = %endif
  %72 = load i8*, i8** %eh.ptr, align 8           ; [#uses = 1]
  call void @_Unwind_Resume(i8* %72)
  unreachable

landingPad11:                                     ; preds = %postinvoke13, %postinvoke12, %0
  %73 = landingpad { i8*, i32 }
          cleanup
          catch %object.TypeInfo_Class* @_D6object9Throwable7__ClassZ ; [#uses = 2]
  %74 = extractvalue { i8*, i32 } %73, 0          ; [#uses = 1]
  store i8* %74, i8** %eh.ptr, align 8
  %75 = extractvalue { i8*, i32 } %73, 1          ; [#uses = 1]
  store i32 %75, i32* %eh.selector, align 4
  %76 = call i32 @llvm.eh.typeid.for(i8* bitcast (%object.TypeInfo_Class* @_D6object9Throwable7__ClassZ to i8*)) ; [#uses = 1]
  %77 = load i32, i32* %eh.selector, align 4      ; [#uses = 1]
  %78 = icmp eq i32 %77, %76                      ; [#uses = 1]
  br i1 %78, label %catch.object.Throwable, label %landingPad11.mismatch

landingPad11.mismatch:                            ; preds = %landingPad11
  store i32 0, i32* %branchsel.finally, align 4
  br label %finally
}

; [#uses = 1]
; Function Attrs: uwtable
define internal void @_D3app10controller13ApiControllerQp8__mixin48__mixin127_sharedStaticCtor_L568_C5_1FZ__T9__lambda5TC4hunt4http7routing14RoutingContextQqZQBxMFQBrZv(i8* nonnull %.nest_arg, %hunt.http.routing.RoutingContext.RoutingContext* %context_arg) #0 {
  %context = alloca %hunt.http.routing.RoutingContext.RoutingContext*, align 8 ; [#uses = 4, size/byte = 8]
  store %hunt.http.routing.RoutingContext.RoutingContext* %context_arg, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8
  %1 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  %2 = getelementptr inbounds %hunt.http.routing.RoutingContext.RoutingContext, %hunt.http.routing.RoutingContext.RoutingContext* %1, i32 0, i32 0 ; [#uses = 1, type = [67 x i8*]**]
  %3 = load [67 x i8*]*, [67 x i8*]** %2, align 8 ; [#uses = 1]
  %"groupName@vtbl" = getelementptr inbounds [67 x i8*], [67 x i8*]* %3, i32 0, i32 66 ; [#uses = 1, type = i8**]
  %4 = load i8*, i8** %"groupName@vtbl", align 8  ; [#uses = 1]
  %groupName = bitcast i8* %4 to void (%hunt.http.routing.RoutingContext.RoutingContext*, { i64, i8* })* ; [#uses = 1]
  %5 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  call void %groupName(%hunt.http.routing.RoutingContext.RoutingContext* nonnull %5, { i64, i8* } { i64 7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0) })
  %6 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  call void @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa37_6973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6eZQEsFCQGn4http7routing14RoutingContextQqZv(%hunt.http.routing.RoutingContext.RoutingContext* %6) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa37_6973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6eZQEsFCQGn4http7routing14RoutingContextQqZv(%hunt.http.routing.RoutingContext.RoutingContext* %context_arg) #0 personality i32 (i32, i32, i64, i8*, i8*)* @_d_eh_personality {
  %context = alloca %hunt.http.routing.RoutingContext.RoutingContext*, align 8 ; [#uses = 4, size/byte = 8]
  %.frame = alloca %nest.callHandler.8, align 8   ; [#uses = 3, size/byte = 8]
  %controller = alloca %app.controller.ApiController.ApiController*, align 8 ; [#uses = 8, size/byte = 8]
  %appConfig = alloca %hunt.framework.config.ApplicationConfig.ApplicationConfig*, align 8 ; [#uses = 2, size/byte = 8]
  %eh.ptr = alloca i8*, align 8                   ; [#uses = 4, size/byte = 8]
  %eh.selector = alloca i32, align 4              ; [#uses = 3, size/byte = 4]
  %errorRes = alloca %hunt.framework.http.Response.Response*, align 8 ; [#uses = 4, size/byte = 8]
  %branchsel.finally = alloca i32, align 4        ; [#uses = 4, size/byte = 4]
  store %hunt.http.routing.RoutingContext.RoutingContext* %context_arg, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8
  %t = getelementptr inbounds %nest.callHandler.8, %nest.callHandler.8* %.frame, i32 0, i32 0 ; [#uses = 3, type = %object.Throwable**]
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3app10controller13ApiControllerQp7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %app.controller.ApiController.ApiController* ; [#uses = 5]
  %vtbl = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  store [38 x i8*]* @_D3app10controller13ApiControllerQp6__vtblZ, [38 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %1 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = %hunt.framework.http.Request.Request**]
  %2 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* @_D3app10controller13ApiControllerQp6__initZ, i32 0, i32 2 ; [#uses = 1, type = %hunt.framework.http.Request.Request**]
  %3 = bitcast %hunt.framework.http.Request.Request** %1 to i8* ; [#uses = 1]
  %4 = bitcast %hunt.framework.http.Request.Request** %2 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 104, i1 false)
  %5 = call %app.controller.ApiController.ApiController* @_D3app10controller13ApiControllerQp6__ctorMFZCQBsQBrQBiQBl(%app.controller.ApiController.ApiController* nonnull returned %.newclass_gc) #0 ; [#uses = 0]
  store %app.controller.ApiController.ApiController* %.newclass_gc, %app.controller.ApiController.ApiController** %controller, align 8
  %6 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  %7 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %6, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  %8 = load [38 x i8*]*, [38 x i8*]** %7, align 8 ; [#uses = 1]
  %"initializeMiddlewares@vtbl" = getelementptr inbounds [38 x i8*], [38 x i8*]* %8, i32 0, i32 35 ; [#uses = 1, type = i8**]
  %9 = load i8*, i8** %"initializeMiddlewares@vtbl", align 8 ; [#uses = 1]
  %initializeMiddlewares = bitcast i8* %9 to void (%app.controller.ApiController.ApiController*)* ; [#uses = 1]
  %10 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  invoke void %initializeMiddlewares(%app.controller.ApiController.ApiController* nonnull %10)
          to label %postinvoke12 unwind label %landingPad11

postinvoke12:                                     ; preds = %0
  %11 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  %12 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %11, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  %13 = load [38 x i8*]*, [38 x i8*]** %12, align 8 ; [#uses = 1]
  %"callActionMethod@vtbl" = getelementptr inbounds [38 x i8*], [38 x i8*]* %13, i32 0, i32 37 ; [#uses = 1, type = i8**]
  %14 = load i8*, i8** %"callActionMethod@vtbl", align 8 ; [#uses = 1]
  %callActionMethod = bitcast i8* %14 to void (%app.controller.ApiController.ApiController*, { i64, i8* }, %hunt.http.routing.RoutingContext.RoutingContext*)* ; [#uses = 1]
  %15 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %controller, align 8 ; [#uses = 1]
  %16 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  invoke void %callActionMethod(%app.controller.ApiController.ApiController* nonnull %15, { i64, i8* } { i64 37, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i32 0, i32 0) }, %hunt.http.routing.RoutingContext.RoutingContext* %16)
          to label %postinvoke13 unwind label %landingPad11

postinvoke13:                                     ; preds = %postinvoke12
  %17 = bitcast %app.controller.ApiController.ApiController** %controller to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %18 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %17, align 8 ; [#uses = 1]
  %19 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %18, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %20 = load [32 x i8*]*, [32 x i8*]** %19, align 8 ; [#uses = 1]
  %"done@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %20, i32 0, i32 28 ; [#uses = 1, type = i8**]
  %21 = load i8*, i8** %"done@vtbl", align 8      ; [#uses = 1]
  %done = bitcast i8* %21 to void (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %22 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %17, align 8 ; [#uses = 1]
  invoke void %done(%hunt.framework.controller.Controller.Controller* nonnull %22)
          to label %postinvoke14 unwind label %landingPad11

postinvoke14:                                     ; preds = %postinvoke13
  br label %try.success.or.caught

catch.object.Throwable:                           ; preds = %landingPad11
  %23 = load i8*, i8** %eh.ptr, align 8           ; [#uses = 1]
  %24 = call %object.Throwable* @_d_eh_enter_catch(i8* %23) ; [#uses = 1]
  store %object.Throwable* null, %object.Throwable** %t, align 8
  store %object.Throwable* %24, %object.Throwable** %t, align 8
  %25 = bitcast %nest.callHandler.8* %.frame to i8* ; [#uses = 1]
  %26 = insertvalue { i8*, %object.Throwable* (i8*)* } undef, i8* %25, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, %object.Throwable* (i8*)* } %26, %object.Throwable* (i8*)* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa37_6973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6eZQEsFCQGn4http7routing14RoutingContextQqZ12__dgliteral4MFNaNbNiNfZC6object9Throwable, 1 ; [#uses = 1]
  call void @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka117_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6e22292e63616c6c48616e646c6572TC6object9ThrowableZQSwFNbLQBaZv({ i8*, %object.Throwable* (i8*)* } %.func) #1
  %27 = invoke %hunt.framework.application.Application.Application* @_D4hunt9framework11application11Application3appFZCQBwQBuQBnQBdQBg() #1
          to label %postinvoke unwind label %landingPad ; [#uses = 1]

postinvoke:                                       ; preds = %catch.object.Throwable
  %28 = invoke %hunt.logging.Logger.Logger* @_D4hunt9framework11application11ApplicationQn6loggerMFZCQCc7logging6LoggerQh(%hunt.framework.application.Application.Application* nonnull %27) #1
          to label %postinvoke1 unwind label %landingPad ; [#uses = 1]

postinvoke1:                                      ; preds = %postinvoke
  %29 = bitcast %nest.callHandler.8* %.frame to i8* ; [#uses = 1]
  %30 = insertvalue { i8*, %object.Throwable* (i8*)* } undef, i8* %29, 0 ; [#uses = 1]
  %.func2 = insertvalue { i8*, %object.Throwable* (i8*)* } %30, %object.Throwable* (i8*)* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa37_6973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6eZQEsFCQGn4http7routing14RoutingContextQqZ12__dgliteral5MFNaNbNiNfZC6object9Throwable, 1 ; [#uses = 1]
  call void @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka117_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6e22292e63616c6c48616e646c6572TC6object9ThrowableZQStMFNbLQBbZv(%hunt.logging.Logger.Logger* nonnull %28, { i8*, %object.Throwable* (i8*)* } %.func2) #1
  %.newclass_gc_alloc4 = invoke %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D4hunt9framework4http8ResponseQj7__ClassZ) #2
          to label %postinvoke3 unwind label %landingPad ; [#uses = 1]

postinvoke3:                                      ; preds = %postinvoke1
  %.newclass_gc5 = bitcast %object.Object* %.newclass_gc_alloc4 to %hunt.framework.http.Response.Response* ; [#uses = 5]
  %vtbl6 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %.newclass_gc5, i32 0, i32 0 ; [#uses = 1, type = [18 x i8*]**]
  store [18 x i8*]* @_D4hunt9framework4http8ResponseQj6__vtblZ, [18 x i8*]** %vtbl6, align 8
  %monitor7 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %.newclass_gc5, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor7, align 8
  %31 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %.newclass_gc5, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %32 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* @_D4hunt9framework4http8ResponseQj6__initZ, i32 0, i32 2 ; [#uses = 1, type = %hunt.http.server.HttpServerResponse.HttpServerResponse**]
  %33 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %31 to i8* ; [#uses = 1]
  %34 = bitcast %hunt.http.server.HttpServerResponse.HttpServerResponse** %32 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %34, i64 9, i1 false)
  %35 = invoke %hunt.framework.http.Response.Response* @_D4hunt9framework4http8ResponseQj6__ctorMFZCQBqQBoQBhQBfQBi(%hunt.framework.http.Response.Response* nonnull returned %.newclass_gc5) #1
          to label %postinvoke8 unwind label %landingPad ; [#uses = 0]

postinvoke8:                                      ; preds = %postinvoke3
  store %hunt.framework.http.Response.Response* %.newclass_gc5, %hunt.framework.http.Response.Response** %errorRes, align 8
  %36 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %errorRes, align 8 ; [#uses = 1]
  %37 = getelementptr inbounds %hunt.framework.http.Response.Response, %hunt.framework.http.Response.Response* %36, i32 0, i32 0 ; [#uses = 1, type = [18 x i8*]**]
  %38 = load [18 x i8*]*, [18 x i8*]** %37, align 8 ; [#uses = 1]
  %"doError@vtbl" = getelementptr inbounds [18 x i8*], [18 x i8*]* %38, i32 0, i32 16 ; [#uses = 1, type = i8**]
  %39 = load i8*, i8** %"doError@vtbl", align 8   ; [#uses = 1]
  %doError = bitcast i8* %39 to void (%hunt.framework.http.Response.Response*, i16, %object.Throwable*, { i64, i8* })* ; [#uses = 1]
  %40 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %errorRes, align 8 ; [#uses = 1]
  %41 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 1]
  invoke void %doError(%hunt.framework.http.Response.Response* nonnull %40, i16 zeroext 500, %object.Throwable* %41, { i64, i8* } { i64 23, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.54, i32 0, i32 0) })
          to label %postinvoke9 unwind label %landingPad

postinvoke9:                                      ; preds = %postinvoke8
  %42 = bitcast %app.controller.ApiController.ApiController** %controller to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %43 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %42, align 8 ; [#uses = 1]
  %44 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %43, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %45 = load [32 x i8*]*, [32 x i8*]** %44, align 8 ; [#uses = 1]
  %"raiseError@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %45, i32 0, i32 26 ; [#uses = 1, type = i8**]
  %46 = load i8*, i8** %"raiseError@vtbl", align 8 ; [#uses = 1]
  %raiseError = bitcast i8* %46 to void (%hunt.framework.controller.Controller.Controller*, %hunt.framework.http.Response.Response*)* ; [#uses = 1]
  %47 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %42, align 8 ; [#uses = 1]
  %48 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %errorRes, align 8 ; [#uses = 1]
  invoke void %raiseError(%hunt.framework.controller.Controller.Controller* nonnull %47, %hunt.framework.http.Response.Response* %48)
          to label %postinvoke10 unwind label %landingPad

postinvoke10:                                     ; preds = %postinvoke9
  br label %try.success.or.caught

try.success.or.caught:                            ; preds = %postinvoke14, %postinvoke10
  %49 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  %50 = getelementptr inbounds %hunt.http.routing.RoutingContext.RoutingContext, %hunt.http.routing.RoutingContext.RoutingContext* %49, i32 0, i32 0 ; [#uses = 1, type = [67 x i8*]**]
  %51 = load [67 x i8*]*, [67 x i8*]** %50, align 8 ; [#uses = 1]
  %"end@vtbl" = getelementptr inbounds [67 x i8*], [67 x i8*]* %51, i32 0, i32 48 ; [#uses = 1, type = i8**]
  %52 = load i8*, i8** %"end@vtbl", align 8       ; [#uses = 1]
  %end = bitcast i8* %52 to %hunt.http.routing.RoutingContext.RoutingContext* (%hunt.http.routing.RoutingContext.RoutingContext*)* ; [#uses = 1]
  %53 = load %hunt.http.routing.RoutingContext.RoutingContext*, %hunt.http.routing.RoutingContext.RoutingContext** %context, align 8 ; [#uses = 1]
  %54 = invoke %hunt.http.routing.RoutingContext.RoutingContext* %end(%hunt.http.routing.RoutingContext.RoutingContext* nonnull %53)
          to label %postinvoke15 unwind label %landingPad ; [#uses = 0]

postinvoke15:                                     ; preds = %try.success.or.caught
  store i32 1, i32* %branchsel.finally, align 4
  br label %finally

finally:                                          ; preds = %postinvoke15, %landingPad11.mismatch, %landingPad
  %55 = call %hunt.framework.application.Application.Application* @_D4hunt9framework11application11Application3appFZCQBwQBuQBnQBdQBg() #1 ; [#uses = 1]
  %56 = call %hunt.framework.config.ApplicationConfig.ApplicationConfig* @_D4hunt9framework11application11ApplicationQn6configMFZCQCcQCaQr17ApplicationConfigQt(%hunt.framework.application.Application.Application* nonnull %55) #1 ; [#uses = 1]
  store %hunt.framework.config.ApplicationConfig.ApplicationConfig* %56, %hunt.framework.config.ApplicationConfig.ApplicationConfig** %appConfig, align 8
  %57 = load %hunt.framework.config.ApplicationConfig.ApplicationConfig*, %hunt.framework.config.ApplicationConfig.ApplicationConfig** %appConfig, align 8 ; [#uses = 1]
  %58 = getelementptr inbounds %hunt.framework.config.ApplicationConfig.ApplicationConfig, %hunt.framework.config.ApplicationConfig.ApplicationConfig* %57, i32 0, i32 9 ; [#uses = 1, type = %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf*]
  %59 = getelementptr inbounds %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf, %hunt.framework.config.ApplicationConfig.ApplicationConfig.HttpConf* %58, i32 0, i32 4 ; [#uses = 1, type = i32*]
  %60 = load i32, i32* %59, align 4               ; [#uses = 1]
  %61 = icmp eq i32 %60, 0                        ; [#uses = 1]
  br i1 %61, label %if, label %endif

if:                                               ; preds = %finally
  call void @_D4hunt4util14ResoureManager14collectResoureFNbZv() #1
  br label %endif

endif:                                            ; preds = %if, %finally
  %62 = bitcast %app.controller.ApiController.ApiController** %controller to %hunt.framework.controller.Controller.Controller** ; [#uses = 2]
  %63 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %62, align 8 ; [#uses = 1]
  %64 = getelementptr inbounds %hunt.framework.controller.Controller.Controller, %hunt.framework.controller.Controller.Controller* %63, i32 0, i32 0 ; [#uses = 1, type = [32 x i8*]**]
  %65 = load [32 x i8*]*, [32 x i8*]** %64, align 8 ; [#uses = 1]
  %"dispose@vtbl" = getelementptr inbounds [32 x i8*], [32 x i8*]* %65, i32 0, i32 31 ; [#uses = 1, type = i8**]
  %66 = load i8*, i8** %"dispose@vtbl", align 8   ; [#uses = 1]
  %dispose = bitcast i8* %66 to void (%hunt.framework.controller.Controller.Controller*)* ; [#uses = 1]
  %67 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %62, align 8 ; [#uses = 1]
  call void %dispose(%hunt.framework.controller.Controller.Controller* nonnull %67)
  %68 = load i32, i32* %branchsel.finally, align 4 ; [#uses = 1]
  switch i32 %68, label %eh.resume [
    i32 1, label %try.success
  ]

try.success:                                      ; preds = %endif
  ret void

landingPad:                                       ; preds = %try.success.or.caught, %postinvoke9, %postinvoke8, %postinvoke3, %postinvoke1, %postinvoke, %catch.object.Throwable
  %69 = landingpad { i8*, i32 }
          cleanup                                 ; [#uses = 2]
  %70 = extractvalue { i8*, i32 } %69, 0          ; [#uses = 1]
  store i8* %70, i8** %eh.ptr, align 8
  %71 = extractvalue { i8*, i32 } %69, 1          ; [#uses = 1]
  store i32 %71, i32* %eh.selector, align 4
  store i32 0, i32* %branchsel.finally, align 4
  br label %finally

eh.resume:                                        ; preds = %endif
  %72 = load i8*, i8** %eh.ptr, align 8           ; [#uses = 1]
  call void @_Unwind_Resume(i8* %72)
  unreachable

landingPad11:                                     ; preds = %postinvoke13, %postinvoke12, %0
  %73 = landingpad { i8*, i32 }
          cleanup
          catch %object.TypeInfo_Class* @_D6object9Throwable7__ClassZ ; [#uses = 2]
  %74 = extractvalue { i8*, i32 } %73, 0          ; [#uses = 1]
  store i8* %74, i8** %eh.ptr, align 8
  %75 = extractvalue { i8*, i32 } %73, 1          ; [#uses = 1]
  store i32 %75, i32* %eh.selector, align 4
  %76 = call i32 @llvm.eh.typeid.for(i8* bitcast (%object.TypeInfo_Class* @_D6object9Throwable7__ClassZ to i8*)) ; [#uses = 1]
  %77 = load i32, i32* %eh.selector, align 4      ; [#uses = 1]
  %78 = icmp eq i32 %77, %76                      ; [#uses = 1]
  br i1 %78, label %catch.object.Throwable, label %landingPad11.mismatch

landingPad11.mismatch:                            ; preds = %landingPad11
  store i32 0, i32* %branchsel.finally, align 4
  br label %finally
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr %std.datetime.systime.SysTime @_D3std8datetime7systime5Clock__T8currTimeVE4core4time9ClockTypei0ZQBiFNbNfyCQCwQCv8timezone8TimeZoneZSQDwQDvQDp7SysTime(%std.datetime.timezone.TimeZone* %tz_arg) #0 {
  %tz = alloca %std.datetime.timezone.TimeZone*, align 8 ; [#uses = 2, size/byte = 8]
  %.structliteral = alloca %std.datetime.systime.SysTime, align 8 ; [#uses = 4, size/byte = 16]
  store %std.datetime.timezone.TimeZone* %tz_arg, %std.datetime.timezone.TimeZone** %tz, align 8
  %1 = getelementptr inbounds %std.datetime.systime.SysTime, %std.datetime.systime.SysTime* %.structliteral, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds %std.datetime.systime.SysTime, %std.datetime.systime.SysTime* %.structliteral, i32 0, i32 1 ; [#uses = 1, type = %"std.typecons.Rebindable!(immutable(TimeZone)).Rebindable"*]
  %3 = getelementptr inbounds %"std.typecons.Rebindable!(immutable(TimeZone)).Rebindable", %"std.typecons.Rebindable!(immutable(TimeZone)).Rebindable"* %2, i32 0, i32 0 ; [#uses = 1, type = %std.datetime.timezone.TimeZone**]
  store %std.datetime.timezone.TimeZone* null, %std.datetime.timezone.TimeZone** %3, align 8
  %4 = call i64 @_D3std8datetime7systime5Clock__T11currStdTimeVE4core4time9ClockTypei0ZQBmFNbNdNiNeZl() #1 ; [#uses = 1]
  %5 = load %std.datetime.timezone.TimeZone*, %std.datetime.timezone.TimeZone** %tz, align 8 ; [#uses = 1]
  %6 = call %std.datetime.systime.SysTime* @_D3std8datetime7systime7SysTime6__ctorMFNaNbNcNjNlNflNkMyCQCeQCd8timezone8TimeZoneZSQDeQDdQCxQCs(%std.datetime.systime.SysTime* nonnull returned %.structliteral, i64 %4, %std.datetime.timezone.TimeZone* %5) #1 ; [#uses = 0]
  %7 = load %std.datetime.systime.SysTime, %std.datetime.systime.SysTime* %.structliteral, align 8 ; [#uses = 1]
  ret %std.datetime.systime.SysTime %7
}

; [#uses = 1]
declare %std.datetime.timezone.LocalTime* @_D3std8datetime8timezone9LocalTime6opCallFNaNbNeZyCQBxQBwQBqQBk() #1

; [#uses = 76]
; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; [#uses = 1]
declare { i64, i8* } @_D3std8datetime7systime7SysTime14toISOExtStringMxFNbNlNfiZAya(%std.datetime.systime.SysTime* nonnull, i32) #1

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr void @_D3std4json9JSONValue__T13opIndexAssignTAyaZQuMFNaNfKQnQpZv(%std.json.JSONValue* nonnull %.this_arg, { i64, i8* }* dereferenceable(16) %value, { i64, i8* } %key_arg) #0 {
  %key = alloca { i64, i8* }, align 8             ; [#uses = 5, size/byte = 16]
  %aa = alloca i8*, align 8                       ; [#uses = 7, size/byte = 8]
  store { i64, i8* } %key_arg, { i64, i8* }* %key, align 8
  %1 = call signext i8 @_D3std4json9JSONValue4typeMxFNaNbNdNiNfZEQBnQBm8JSONType(%std.json.JSONValue* nonnull %.this_arg) #1 ; [#uses = 1]
  %2 = sext i8 %1 to i32                          ; [#uses = 1]
  %3 = icmp eq i32 %2, 6                          ; [#uses = 1]
  br i1 %3, label %ororend, label %oror

oror:                                             ; preds = %0
  %4 = call signext i8 @_D3std4json9JSONValue4typeMxFNaNbNdNiNfZEQBnQBm8JSONType(%std.json.JSONValue* nonnull %.this_arg) #1 ; [#uses = 1]
  %5 = sext i8 %4 to i32                          ; [#uses = 1]
  %6 = icmp eq i32 %5, 0                          ; [#uses = 1]
  br label %ororend

ororend:                                          ; preds = %oror, %0
  %ororval = phi i1 [ true, %0 ], [ %6, %oror ]   ; [#uses = 1, type = i1]
  %7 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc4json13JSONExceptionZ__TQBmTbZQBsFNaNfbLAxaAyamZb(i1 zeroext %ororval, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std4json9JSONValue__T13opIndexAssignTAyaZQuMFKQjQlZ12__dgliteral3MFNaNbNiNfZAxa }, { i64, i8* } { i64 50, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.89, i32 0, i32 0) }, i64 708) #1 ; [#uses = 0]
  store i8* null, i8** %aa, align 8
  %8 = call signext i8 @_D3std4json9JSONValue4typeMxFNaNbNdNiNfZEQBnQBm8JSONType(%std.json.JSONValue* nonnull %.this_arg) #1 ; [#uses = 1]
  %9 = sext i8 %8 to i32                          ; [#uses = 1]
  %10 = icmp eq i32 %9, 6                         ; [#uses = 1]
  br i1 %10, label %if, label %endif

if:                                               ; preds = %ororend
  %11 = call i8* @_D3std4json9JSONValue11objectNoRefMNgFNaNdNeZNgHAyaSQByQBxQBv(%std.json.JSONValue* nonnull %.this_arg) #1 ; [#uses = 1]
  store i8* %11, i8** %aa, align 8
  br label %endif

endif:                                            ; preds = %if, %ororend
  %12 = load i8*, i8** %aa, align 8               ; [#uses = 1]
  %13 = bitcast i8* %12 to i8**                   ; [#uses = 1]
  %14 = bitcast { i64, i8* }* %key to i8*         ; [#uses = 1]
  %aa.in = call i8* @_aaInX(i8** nocapture dereferenceable(8) %13, %object.TypeInfo* bitcast (%object.TypeInfo_Array* @_D12TypeInfo_Aya6__initZ to %object.TypeInfo*), i8* nocapture %14) #7 ; [#uses = 1]
  %15 = bitcast i8* %aa.in to %std.json.JSONValue* ; [#uses = 1]
  %16 = icmp ne %std.json.JSONValue* %15, null    ; [#uses = 1]
  br i1 %16, label %condtrue, label %condfalse

condtrue:                                         ; preds = %endif
  %17 = load i8*, i8** %aa, align 8               ; [#uses = 1]
  %18 = bitcast i8* %17 to i8**                   ; [#uses = 1]
  %19 = bitcast { i64, i8* }* %key to i8*         ; [#uses = 1]
  %aa.index = call i8* @_aaInX(i8** nocapture dereferenceable(8) %18, %object.TypeInfo* bitcast (%object.TypeInfo_Array* @_D12TypeInfo_Aya6__initZ to %object.TypeInfo*), i8* nocapture %19) #7 ; [#uses = 1]
  %20 = bitcast i8* %aa.index to %std.json.JSONValue* ; [#uses = 2]
  %aaboundscheck = icmp ne %std.json.JSONValue* null, %20 ; [#uses = 1]
  br i1 %aaboundscheck, label %aaboundsok, label %aaboundscheckfail

aaboundsok:                                       ; preds = %condtrue
  %21 = load { i64, i8* }, { i64, i8* }* %value, align 8 ; [#uses = 1]
  call void @_D3std4json9JSONValue__T8opAssignTAyaZQoMFNaNbNiNfQqZv(%std.json.JSONValue* nonnull %20, { i64, i8* } %21) #1
  br label %condend

aaboundscheckfail:                                ; preds = %condtrue
  call void @_d_arraybounds({ i64, i8* } { i64 50, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.89, i32 0, i32 0) }, i32 716) #5
  unreachable

condfalse:                                        ; preds = %endif
  %22 = bitcast { i64, i8* }* %key to i8*         ; [#uses = 1]
  %aa.index1 = call i8* @_aaGetY(i8** nocapture %aa, %object.TypeInfo_AssociativeArray* @_D33TypeInfo_HAyaS3std4json9JSONValue6__initZ, i64 24, i8* nocapture %22) #2 ; [#uses = 1]
  %23 = bitcast i8* %aa.index1 to %std.json.JSONValue* ; [#uses = 1]
  %24 = bitcast %std.json.JSONValue* %23 to i8*   ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 bitcast (%std.json.JSONValue* @_D3std4json9JSONValue6__initZ to i8*), i64 24, i1 false)
  %25 = bitcast { i64, i8* }* %key to i8*         ; [#uses = 1]
  %aa.index2 = call i8* @_aaGetY(i8** nocapture %aa, %object.TypeInfo_AssociativeArray* @_D33TypeInfo_HAyaS3std4json9JSONValue6__initZ, i64 24, i8* nocapture %25) #2 ; [#uses = 1]
  %26 = bitcast i8* %aa.index2 to %std.json.JSONValue* ; [#uses = 1]
  %27 = load { i64, i8* }, { i64, i8* }* %value, align 8 ; [#uses = 1]
  %28 = call %std.json.JSONValue* @_D3std4json9JSONValue__T6__ctorTAyaZQmMFNaNbNcNiNfQsZSQCaQBzQBx(%std.json.JSONValue* nonnull returned %26, { i64, i8* } %27) #1 ; [#uses = 0]
  br label %condend

condend:                                          ; preds = %condfalse, %aaboundsok
  %29 = load i8*, i8** %aa, align 8               ; [#uses = 1]
  %30 = call i8* @_D3std4json9JSONValue6objectMFNaNbNdNiNeNkMHAyaSQBuQBtQBrZQp(%std.json.JSONValue* nonnull %.this_arg, i8* %29) #1 ; [#uses = 0]
  ret void
}

; [#uses = 29]
; Function Attrs: uwtable
declare %object.Object* @_d_allocclass(%object.TypeInfo_Class*) #2

; [#uses = 3]
; Function Attrs: uwtable
define weak_odr %hunt.framework.http.JsonResponse.JsonResponse* @_D4hunt9framework4http12JsonResponseQo__T6__ctorTS3std4json9JSONValueZQBdMFQBaZCQDaQCyQCrQCpQCs(%hunt.framework.http.JsonResponse.JsonResponse* nonnull returned %.this_arg, %std.json.JSONValue* byval(%std.json.JSONValue) align 8 %data) #0 {
  %this = alloca %hunt.framework.http.JsonResponse.JsonResponse*, align 8 ; [#uses = 6, size/byte = 8]
  %.sret_tmp = alloca %std.json.JSONValue, align 8 ; [#uses = 2, size/byte = 24]
  store %hunt.framework.http.JsonResponse.JsonResponse* %.this_arg, %hunt.framework.http.JsonResponse.JsonResponse** %this, align 8
  %1 = bitcast %hunt.framework.http.JsonResponse.JsonResponse** %this to %hunt.framework.http.Response.Response** ; [#uses = 1]
  %2 = load %hunt.framework.http.Response.Response*, %hunt.framework.http.Response.Response** %1, align 8 ; [#uses = 1]
  %3 = call %hunt.framework.http.Response.Response* @_D4hunt9framework4http8ResponseQj6__ctorMFZCQBqQBoQBhQBfQBi(%hunt.framework.http.Response.Response* nonnull returned %2) #1 ; [#uses = 1]
  %4 = bitcast %hunt.framework.http.Response.Response* %3 to %hunt.framework.http.JsonResponse.JsonResponse* ; [#uses = 0]
  %5 = load %hunt.framework.http.JsonResponse.JsonResponse*, %hunt.framework.http.JsonResponse.JsonResponse** %this, align 8 ; [#uses = 1]
  %6 = getelementptr inbounds %hunt.framework.http.JsonResponse.JsonResponse, %hunt.framework.http.JsonResponse.JsonResponse* %5, i32 0, i32 0 ; [#uses = 1, type = [19 x i8*]**]
  %7 = load [19 x i8*]*, [19 x i8*]** %6, align 8 ; [#uses = 1]
  %"setJson@vtbl" = getelementptr inbounds [19 x i8*], [19 x i8*]* %7, i32 0, i32 18 ; [#uses = 1, type = i8**]
  %8 = load i8*, i8** %"setJson@vtbl", align 8    ; [#uses = 1]
  %setJson = bitcast i8* %8 to %hunt.framework.http.JsonResponse.JsonResponse* (%hunt.framework.http.JsonResponse.JsonResponse*, %std.json.JSONValue*)* ; [#uses = 1]
  %9 = load %hunt.framework.http.JsonResponse.JsonResponse*, %hunt.framework.http.JsonResponse.JsonResponse** %this, align 8 ; [#uses = 1]
  call void @_D4hunt13serialization14JsonSerializerQq__T6toJsonVSQByQBw6Common20SerializationOptionsS7i0i1i0i0i1i1N1TS3std4json9JSONValueZQDeFNaNbNiNfQBhZQBl(%std.json.JSONValue* noalias sret(%std.json.JSONValue) align 8 %.sret_tmp, %std.json.JSONValue* byval(%std.json.JSONValue) align 8 %data) #1
  %10 = call %hunt.framework.http.JsonResponse.JsonResponse* %setJson(%hunt.framework.http.JsonResponse.JsonResponse* nonnull %9, %std.json.JSONValue* byval(%std.json.JSONValue) align 8 %.sret_tmp) ; [#uses = 0]
  %11 = load %hunt.framework.http.JsonResponse.JsonResponse*, %hunt.framework.http.JsonResponse.JsonResponse** %this, align 8 ; [#uses = 0]
  %12 = load %hunt.framework.http.JsonResponse.JsonResponse*, %hunt.framework.http.JsonResponse.JsonResponse** %this, align 8 ; [#uses = 1]
  ret %hunt.framework.http.JsonResponse.JsonResponse* %12
}

; [#uses = 1]
; Function Attrs: uwtable
define i32 @_D3app10controller13ApiControllerQp4factMFiZi(%app.controller.ApiController.ApiController* nonnull %.this_arg, i32 %n_arg) #0 {
  %this = alloca %app.controller.ApiController.ApiController*, align 8 ; [#uses = 3, size/byte = 8]
  %n = alloca i32, align 4                        ; [#uses = 5, size/byte = 4]
  store %app.controller.ApiController.ApiController* %.this_arg, %app.controller.ApiController.ApiController** %this, align 8
  store i32 %n_arg, i32* %n, align 4
  %1 = load i32, i32* %n, align 4                 ; [#uses = 1]
  %2 = icmp eq i32 %1, 0                          ; [#uses = 1]
  br i1 %2, label %if, label %endif

if:                                               ; preds = %0
  ret i32 1

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %0
  %3 = load i32, i32* %n, align 4                 ; [#uses = 1]
  %4 = icmp eq i32 %3, 1                          ; [#uses = 1]
  br i1 %4, label %if1, label %endif2

if1:                                              ; preds = %endif
  ret i32 1

dummy.afterreturn3:                               ; No predecessors!
  br label %endif2

endif2:                                           ; preds = %dummy.afterreturn3, %endif
  %5 = load i32, i32* %n, align 4                 ; [#uses = 1]
  %6 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %7 = getelementptr inbounds %app.controller.ApiController.ApiController, %app.controller.ApiController.ApiController* %6, i32 0, i32 0 ; [#uses = 1, type = [38 x i8*]**]
  %8 = load [38 x i8*]*, [38 x i8*]** %7, align 8 ; [#uses = 1]
  %"fact@vtbl" = getelementptr inbounds [38 x i8*], [38 x i8*]* %8, i32 0, i32 36 ; [#uses = 1, type = i8**]
  %9 = load i8*, i8** %"fact@vtbl", align 8       ; [#uses = 1]
  %fact = bitcast i8* %9 to i32 (%app.controller.ApiController.ApiController*, i32)* ; [#uses = 1]
  %10 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  %11 = load i32, i32* %n, align 4                ; [#uses = 1]
  %12 = sub i32 %11, 1                            ; [#uses = 1]
  %13 = call i32 %fact(%app.controller.ApiController.ApiController* nonnull %10, i32 %12) ; [#uses = 1]
  %14 = mul i32 %5, %13                           ; [#uses = 1]
  ret i32 %14
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D3std4conv__T2toTiZ__TQjTAyaZQqFNaNfQlZi({ i64, i8* } %__param_0_arg) #0 {
  %__param_0 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %__param_0_arg, { i64, i8* }* %__param_0, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %__param_0, align 8 ; [#uses = 1]
  %2 = call i32 @_D3std4conv__T6toImplTiTAyaZQoFNaNfQlZi({ i64, i8* } %1) #1 ; [#uses = 1]
  ret i32 %2
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std4json9JSONValue__T13opIndexAssignTAyaZQuMFNaNfQmQoZv(%std.json.JSONValue* nonnull %.this_arg, { i64, i8* } %value_arg, { i64, i8* } %key_arg) #0 {
  %value = alloca { i64, i8* }, align 8           ; [#uses = 3, size/byte = 16]
  %key = alloca { i64, i8* }, align 8             ; [#uses = 5, size/byte = 16]
  %aa = alloca i8*, align 8                       ; [#uses = 7, size/byte = 8]
  store { i64, i8* } %value_arg, { i64, i8* }* %value, align 8
  store { i64, i8* } %key_arg, { i64, i8* }* %key, align 8
  %1 = call signext i8 @_D3std4json9JSONValue4typeMxFNaNbNdNiNfZEQBnQBm8JSONType(%std.json.JSONValue* nonnull %.this_arg) #1 ; [#uses = 1]
  %2 = sext i8 %1 to i32                          ; [#uses = 1]
  %3 = icmp eq i32 %2, 6                          ; [#uses = 1]
  br i1 %3, label %ororend, label %oror

oror:                                             ; preds = %0
  %4 = call signext i8 @_D3std4json9JSONValue4typeMxFNaNbNdNiNfZEQBnQBm8JSONType(%std.json.JSONValue* nonnull %.this_arg) #1 ; [#uses = 1]
  %5 = sext i8 %4 to i32                          ; [#uses = 1]
  %6 = icmp eq i32 %5, 0                          ; [#uses = 1]
  br label %ororend

ororend:                                          ; preds = %oror, %0
  %ororval = phi i1 [ true, %0 ], [ %6, %oror ]   ; [#uses = 1, type = i1]
  %7 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc4json13JSONExceptionZ__TQBmTbZQBsFNaNfbLAxaAyamZb(i1 zeroext %ororval, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std4json9JSONValue__T13opIndexAssignTAyaZQuMFQiQkZ12__dgliteral3MFNaNbNiNfZAxa }, { i64, i8* } { i64 50, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.89, i32 0, i32 0) }, i64 708) #0 ; [#uses = 0]
  store i8* null, i8** %aa, align 8
  %8 = call signext i8 @_D3std4json9JSONValue4typeMxFNaNbNdNiNfZEQBnQBm8JSONType(%std.json.JSONValue* nonnull %.this_arg) #1 ; [#uses = 1]
  %9 = sext i8 %8 to i32                          ; [#uses = 1]
  %10 = icmp eq i32 %9, 6                         ; [#uses = 1]
  br i1 %10, label %if, label %endif

if:                                               ; preds = %ororend
  %11 = call i8* @_D3std4json9JSONValue11objectNoRefMNgFNaNdNeZNgHAyaSQByQBxQBv(%std.json.JSONValue* nonnull %.this_arg) #1 ; [#uses = 1]
  store i8* %11, i8** %aa, align 8
  br label %endif

endif:                                            ; preds = %if, %ororend
  %12 = load i8*, i8** %aa, align 8               ; [#uses = 1]
  %13 = bitcast i8* %12 to i8**                   ; [#uses = 1]
  %14 = bitcast { i64, i8* }* %key to i8*         ; [#uses = 1]
  %aa.in = call i8* @_aaInX(i8** nocapture dereferenceable(8) %13, %object.TypeInfo* bitcast (%object.TypeInfo_Array* @_D12TypeInfo_Aya6__initZ to %object.TypeInfo*), i8* nocapture %14) #7 ; [#uses = 1]
  %15 = bitcast i8* %aa.in to %std.json.JSONValue* ; [#uses = 1]
  %16 = icmp ne %std.json.JSONValue* %15, null    ; [#uses = 1]
  br i1 %16, label %condtrue, label %condfalse

condtrue:                                         ; preds = %endif
  %17 = load i8*, i8** %aa, align 8               ; [#uses = 1]
  %18 = bitcast i8* %17 to i8**                   ; [#uses = 1]
  %19 = bitcast { i64, i8* }* %key to i8*         ; [#uses = 1]
  %aa.index = call i8* @_aaInX(i8** nocapture dereferenceable(8) %18, %object.TypeInfo* bitcast (%object.TypeInfo_Array* @_D12TypeInfo_Aya6__initZ to %object.TypeInfo*), i8* nocapture %19) #7 ; [#uses = 1]
  %20 = bitcast i8* %aa.index to %std.json.JSONValue* ; [#uses = 2]
  %aaboundscheck = icmp ne %std.json.JSONValue* null, %20 ; [#uses = 1]
  br i1 %aaboundscheck, label %aaboundsok, label %aaboundscheckfail

aaboundsok:                                       ; preds = %condtrue
  %21 = load { i64, i8* }, { i64, i8* }* %value, align 8 ; [#uses = 1]
  call void @_D3std4json9JSONValue__T8opAssignTAyaZQoMFNaNbNiNfQqZv(%std.json.JSONValue* nonnull %20, { i64, i8* } %21) #0
  br label %condend

aaboundscheckfail:                                ; preds = %condtrue
  call void @_d_arraybounds({ i64, i8* } { i64 50, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.89, i32 0, i32 0) }, i32 716) #5
  unreachable

condfalse:                                        ; preds = %endif
  %22 = bitcast { i64, i8* }* %key to i8*         ; [#uses = 1]
  %aa.index1 = call i8* @_aaGetY(i8** nocapture %aa, %object.TypeInfo_AssociativeArray* @_D33TypeInfo_HAyaS3std4json9JSONValue6__initZ, i64 24, i8* nocapture %22) #2 ; [#uses = 1]
  %23 = bitcast i8* %aa.index1 to %std.json.JSONValue* ; [#uses = 1]
  %24 = bitcast %std.json.JSONValue* %23 to i8*   ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 bitcast (%std.json.JSONValue* @_D3std4json9JSONValue6__initZ to i8*), i64 24, i1 false)
  %25 = bitcast { i64, i8* }* %key to i8*         ; [#uses = 1]
  %aa.index2 = call i8* @_aaGetY(i8** nocapture %aa, %object.TypeInfo_AssociativeArray* @_D33TypeInfo_HAyaS3std4json9JSONValue6__initZ, i64 24, i8* nocapture %25) #2 ; [#uses = 1]
  %26 = bitcast i8* %aa.index2 to %std.json.JSONValue* ; [#uses = 1]
  %27 = load { i64, i8* }, { i64, i8* }* %value, align 8 ; [#uses = 1]
  %28 = call %std.json.JSONValue* @_D3std4json9JSONValue__T6__ctorTAyaZQmMFNaNbNcNiNfQsZSQCaQBzQBx(%std.json.JSONValue* nonnull returned %26, { i64, i8* } %27) #0 ; [#uses = 0]
  br label %condend

condend:                                          ; preds = %condfalse, %aaboundsok
  %29 = load i8*, i8** %aa, align 8               ; [#uses = 1]
  %30 = call i8* @_D3std4json9JSONValue6objectMFNaNbNdNiNeNkMHAyaSQBuQBtQBrZQp(%std.json.JSONValue* nonnull %.this_arg, i8* %29) #1 ; [#uses = 0]
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std4conv__T2toTAyaZ__TQlTiZQqFNaNbNfiZQx(i32 %__param_0_arg) #0 {
  %__param_0 = alloca i32, align 4                ; [#uses = 2, size/byte = 4]
  store i32 %__param_0_arg, i32* %__param_0, align 4
  %1 = load i32, i32* %__param_0, align 4         ; [#uses = 1]
  %2 = call { i64, i8* } @_D3std4conv__T6toImplTAyaTiZQoFNaNbNfiZQr(i32 %1) #1 ; [#uses = 1]
  ret { i64, i8* } %2
}

; [#uses = 5]
; Function Attrs: uwtable
define %app.controller.ApiController.ApiController* @_D3app10controller13ApiControllerQp6__ctorMFZCQBsQBrQBiQBl(%app.controller.ApiController.ApiController* nonnull returned %.this_arg) #0 {
  %this = alloca %app.controller.ApiController.ApiController*, align 8 ; [#uses = 4, size/byte = 8]
  store %app.controller.ApiController.ApiController* %.this_arg, %app.controller.ApiController.ApiController** %this, align 8
  %1 = bitcast %app.controller.ApiController.ApiController** %this to %hunt.framework.controller.Controller.Controller** ; [#uses = 1]
  %2 = load %hunt.framework.controller.Controller.Controller*, %hunt.framework.controller.Controller.Controller** %1, align 8 ; [#uses = 1]
  %3 = call %hunt.framework.controller.Controller.Controller* @_D4hunt9framework10controller10ControllerQm6__ctorMFZCQCaQByQBrQBiQBl(%hunt.framework.controller.Controller.Controller* nonnull returned %2) #1 ; [#uses = 1]
  %4 = bitcast %hunt.framework.controller.Controller.Controller* %3 to %app.controller.ApiController.ApiController* ; [#uses = 0]
  %5 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 0]
  %6 = load %app.controller.ApiController.ApiController*, %app.controller.ApiController.ApiController** %this, align 8 ; [#uses = 1]
  ret %app.controller.ApiController.ApiController* %6
}

; [#uses = 1]
declare %hunt.framework.controller.Controller.Controller* @_D4hunt9framework10controller10ControllerQm6__ctorMFZCQCaQByQBrQBiQBl(%hunt.framework.controller.Controller.Controller* nonnull returned) #1

; [#uses = 1]
declare { i64, i8* } @_D6object6Object8toStringMFZAya(%object.Object* nonnull) #1

; [#uses = 1]
declare i64 @_D6object6Object6toHashMFNbNeZm(%object.Object* nonnull) #1

; [#uses = 1]
declare i32 @_D6object6Object5opCmpMFCQqZi(%object.Object* nonnull, %object.Object*) #1

; [#uses = 1]
declare zeroext i1 @_D6object6Object8opEqualsMFCQtZb(%object.Object* nonnull, %object.Object*) #1

; [#uses = 1]
declare %hunt.http.routing.RoutingContext.RoutingContext* @_D4hunt9framework10controller10ControllerQm14routingContextMFZCQCj4http7routing14RoutingContextQq(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 1]
declare %hunt.framework.http.Request.Request* @_D4hunt9framework10controller10ControllerQm13createRequestMFbZCQCjQCh4http7RequestQi(%hunt.framework.controller.Controller.Controller* nonnull, i1 zeroext) #1

; [#uses = 1]
declare %hunt.framework.auth.Auth.Auth* @_D4hunt9framework10controller10ControllerQm4authMFZCQByQBwQp4AuthQf(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 1]
declare %hunt.framework.auth.Identity.Identity* @_D4hunt9framework10controller10ControllerQm4userMFZCQByQBw4auth8IdentityQj(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 1]
declare %hunt.framework.view.View.View* @_D4hunt9framework10controller10ControllerQm4viewMFNdZCQCaQByQr4ViewQf(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 1]
declare zeroext i1 @_D4hunt9framework10controller10ControllerQm13addMiddlewareMFCQChQCf10middleware19MiddlewareInterfaceQvZb(%hunt.framework.controller.Controller.Controller* nonnull, %hunt.framework.middleware.MiddlewareInterface.MiddlewareInterface*) #1

; [#uses = 1]
declare void @_D4hunt9framework10controller10ControllerQm21addAcceptedMiddlewareMFAyaQdQfQhZv(%hunt.framework.controller.Controller.Controller* nonnull, { i64, i8* }, { i64, i8* }, { i64, i8* }* byval({ i64, i8* }) align 8, { i64, i8* }* byval({ i64, i8* }) align 8) #1

; [#uses = 1]
declare void @_D4hunt9framework10controller10ControllerQm20addSkippedMiddlewareMFAyaQdQfQhZv(%hunt.framework.controller.Controller.Controller* nonnull, { i64, i8* }, { i64, i8* }, { i64, i8* }* byval({ i64, i8* }) align 8, { i64, i8* }* byval({ i64, i8* }) align 8) #1

; [#uses = 1]
declare { i64, %hunt.framework.middleware.MiddlewareInterface.MiddlewareInterface** } @_D4hunt9framework10controller10ControllerQm34getAcceptedMiddlewaresInRouteGroupMFAyaZACQDhQDf10middleware19MiddlewareInterfaceQv(%hunt.framework.controller.Controller.Controller* nonnull, { i64, i8* }) #1

; [#uses = 1]
declare { i64, %hunt.framework.middleware.MiddlewareInterface.MiddlewareInterface** } @_D4hunt9framework10controller10ControllerQm33getAcceptedMiddlewaresInRouteItemMFAyaQdZACQDiQDg10middleware19MiddlewareInterfaceQv(%hunt.framework.controller.Controller.Controller* nonnull, { i64, i8* }, { i64, i8* }) #1

; [#uses = 1]
declare { i64, %hunt.framework.middleware.MiddlewareInterface.MiddlewareInterface** } @_D4hunt9framework10controller10ControllerQm34getAcceptedMiddlewaresInControllerMFAyaZACQDhQDf10middleware19MiddlewareInterfaceQv(%hunt.framework.controller.Controller.Controller* nonnull, { i64, i8* }) #1

; [#uses = 1]
declare zeroext i1 @_D4hunt9framework10controller10ControllerQm31isSkippedMiddlewareInRouteGroupMFAyaQdZb(%hunt.framework.controller.Controller.Controller* nonnull, { i64, i8* }, { i64, i8* }) #1

; [#uses = 1]
declare zeroext i1 @_D4hunt9framework10controller10ControllerQm30isSkippedMiddlewareInRouteItemMFAyaQdQfZb(%hunt.framework.controller.Controller.Controller* nonnull, { i64, i8* }, { i64, i8* }, { i64, i8* }* byval({ i64, i8* }) align 8) #1

; [#uses = 1]
declare i8* @_D4hunt9framework10controller10ControllerQm14getMiddlewaresMFZHAyaCQCnQCl10middleware19MiddlewareInterfaceQv(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 1]
declare %hunt.framework.http.Response.Response* @_D4hunt9framework10controller10ControllerQm15processResponseMFCQCjQCh4http8ResponseQjZQy(%hunt.framework.controller.Controller.Controller* nonnull, %hunt.framework.http.Response.Response*) #1

; [#uses = 1]
declare %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext* @_D4hunt9framework10controller10ControllerQm8validateMFZCQCc10validation26ConstraintValidatorContextQBc(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 1]
declare void @_D4hunt9framework10controller10ControllerQm10raiseErrorMFCQCeQCc4http8ResponseQjZv(%hunt.framework.controller.Controller.Controller* nonnull, %hunt.framework.http.Response.Response*) #1

; [#uses = 1]
declare %hunt.framework.http.Response.Response* @_D4hunt9framework10controller10ControllerQm7onErrorMFCQCaQBy4http8ResponseQjZQy(%hunt.framework.controller.Controller.Controller* nonnull, %hunt.framework.http.Response.Response*) #1

; [#uses = 1]
declare void @_D4hunt9framework10controller10ControllerQm4doneMFZv(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 1]
declare void @_D4hunt9framework10controller10ControllerQm10handleCorsMFZv(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 1]
declare void @_D4hunt9framework10controller10ControllerQm18handleAuthResponseMFZv(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 1]
declare void @_D4hunt9framework10controller10ControllerQm7disposeMFZv(%hunt.framework.controller.Controller.Controller* nonnull) #1

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std9exception__T7enforceZ__TQmTbZQrFNaNfbLAxaAyamZb(i1 zeroext %value_arg, { i8*, { i64, i8* } (i8*)* } %msg_arg, { i64, i8* } %file_arg, i64 %line_arg) #0 {
  %value = alloca i8, align 1                     ; [#uses = 4, size/byte = 1]
  %msg = alloca { i8*, { i64, i8* } (i8*)* }, align 8 ; [#uses = 3, size/byte = 16]
  %file = alloca { i64, i8* }, align 8            ; [#uses = 2, size/byte = 16]
  %line = alloca i64, align 8                     ; [#uses = 2, size/byte = 8]
  %1 = zext i1 %value_arg to i8                   ; [#uses = 1]
  store i8 %1, i8* %value, align 1
  store { i8*, { i64, i8* } (i8*)* } %msg_arg, { i8*, { i64, i8* } (i8*)* }* %msg, align 8
  store { i64, i8* } %file_arg, { i64, i8* }* %file, align 8
  store i64 %line_arg, i64* %line, align 8
  %2 = load i8, i8* %value, align 1               ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  %4 = icmp eq i1 %3, false                       ; [#uses = 1]
  br i1 %4, label %if, label %endif

if:                                               ; preds = %0
  %5 = load { i64, i8* }, { i64, i8* }* %file, align 8 ; [#uses = 1]
  %6 = load i64, i64* %line, align 8              ; [#uses = 1]
  %7 = getelementptr inbounds { i8*, { i64, i8* } (i8*)* }, { i8*, { i64, i8* } (i8*)* }* %msg, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* } (i8*)**]
  %.funcptr = load { i64, i8* } (i8*)*, { i64, i8* } (i8*)** %7, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds { i8*, { i64, i8* } (i8*)* }, { i8*, { i64, i8* } (i8*)* }* %msg, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %8, align 8              ; [#uses = 1]
  %9 = call { i64, i8* } %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  call void @_D3std9exception__T7bailOutHTC9ExceptionZQwFNaNfAyamMAxaZNn({ i64, i8* } %5, i64 %6, { i64, i8* } %9) #12
  br label %endif

endif:                                            ; preds = %if, %0
  %10 = load i8, i8* %value, align 1              ; [#uses = 1]
  %11 = trunc i8 %10 to i1                        ; [#uses = 0]
  %12 = load i8, i8* %value, align 1              ; [#uses = 1]
  %13 = trunc i8 %12 to i1                        ; [#uses = 1]
  ret i1 %13
}

; [#uses = 1]
; Function Attrs: noreturn uwtable
define weak_odr void @_D3std9exception__T7bailOutHTC9ExceptionZQwFNaNfAyamMAxaZNn({ i64, i8* } %file_arg, i64 %line_arg, { i64, i8* } %msg_arg) #4 {
  %file = alloca { i64, i8* }, align 8            ; [#uses = 2, size/byte = 16]
  %line = alloca i64, align 8                     ; [#uses = 2, size/byte = 8]
  %msg = alloca { i64, i8* }, align 8             ; [#uses = 3, size/byte = 16]
  %condtmp = alloca { i64, i8* }*, align 8        ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp = alloca { i64, i8* }, align 8  ; [#uses = 3, size/byte = 16]
  %.makelvaluetmp2 = alloca { i64, i8* }, align 8 ; [#uses = 3, size/byte = 16]
  store { i64, i8* } %file_arg, { i64, i8* }* %file, align 8
  store i64 %line_arg, i64* %line, align 8
  store { i64, i8* } %msg_arg, { i64, i8* }* %msg, align 8
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D9Exception7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %object.Exception* ; [#uses = 5]
  %vtbl = getelementptr inbounds %object.Exception, %object.Exception* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D9Exception6__vtblZ, [10 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %object.Exception, %object.Exception* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %1 = getelementptr inbounds %object.Exception, %object.Exception* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %2 = getelementptr inbounds %object.Exception, %object.Exception* @_D9Exception6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %3 = bitcast { i64, i8* }* %1 to i8*            ; [#uses = 1]
  %4 = bitcast { i64, i8* }* %2 to i8*            ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 68, i1 false)
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %msg, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %5, align 8              ; [#uses = 1]
  %6 = icmp ne i8* %.ptr, null                    ; [#uses = 1]
  br i1 %6, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  %7 = load { i64, i8* }, { i64, i8* }* %msg, align 8 ; [#uses = 1]
  %8 = call { i64, i8* } @_D6object__T4idupTxaZQjFNaNbNdNfAxaZAya({ i64, i8* } %7) #1 ; [#uses = 2]
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = extractvalue { i64, i8* } %8, 0         ; [#uses = 1]
  store i64 %.len, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr1 = extractvalue { i64, i8* } %8, 1        ; [#uses = 1]
  store i8* %.ptr1, i8** %10, align 8
  store { i64, i8* }* %.makelvaluetmp, { i64, i8* }** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp2, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 18, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp2, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0), i8** %12, align 8
  store { i64, i8* }* %.makelvaluetmp2, { i64, i8* }** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %13 = load { i64, i8* }*, { i64, i8* }** %condtmp, align 8 ; [#uses = 1]
  %14 = load { i64, i8* }, { i64, i8* }* %13, align 8 ; [#uses = 1]
  %15 = load { i64, i8* }, { i64, i8* }* %file, align 8 ; [#uses = 1]
  %16 = load i64, i64* %line, align 8             ; [#uses = 1]
  %17 = call %object.Exception* @_D6object9Exception6__ctorMFNaNbNiNfAyaQdmCQBp9ThrowableZCQBx(%object.Exception* nonnull returned %.newclass_gc, { i64, i8* } %14, { i64, i8* } %15, i64 %16, %object.Throwable* null) #1 ; [#uses = 0]
  %18 = bitcast %object.Exception* %.newclass_gc to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %18) #5
  unreachable
}

; [#uses = 1]
declare %object.Exception* @_D6object9Exception6__ctorMFNaNbNiNfAyaQdmCQBp9ThrowableZCQBx(%object.Exception* nonnull returned, { i64, i8* }, { i64, i8* }, i64, %object.Throwable*) #1

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D6object__T4idupTxaZQjFNaNbNdNfAxaZAya({ i64, i8* } %a_arg) #0 {
  %a = alloca { i64, i8* }, align 8               ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %a_arg, { i64, i8* }* %a, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %a, align 8 ; [#uses = 1]
  %2 = call { i64, i8* } @_D4core8internal5array11duplication__T4_dupTxaTyaZQmFNaNbNeMAxaZAya({ i64, i8* } %1) #1 ; [#uses = 1]
  ret { i64, i8* } %2
}

; [#uses = 32]
; Function Attrs: cold noreturn uwtable
declare void @_d_throw_exception(%object.Throwable*) #5

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D4core8internal5array11duplication__T4_dupTxaTyaZQmFNaNbNeMAxaZAya({ i64, i8* } %a_arg) #0 {
  %a = alloca { i64, i8* }, align 8               ; [#uses = 4, size/byte = 16]
  %arr = alloca { i64, i8* }, align 8             ; [#uses = 5, size/byte = 16]
  store { i64, i8* } %a_arg, { i64, i8* }* %a, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = call { i64, i8* } @_d_newarrayU(%object.TypeInfo* bitcast (%object.TypeInfo_Array* @_D12TypeInfo_Axa6__initZ to %object.TypeInfo*), i64 %.len) #1 ; [#uses = 2]
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %arr, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = extractvalue { i64, i8* } %2, 0        ; [#uses = 1]
  store i64 %.len1, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %arr, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = extractvalue { i64, i8* } %2, 1         ; [#uses = 1]
  store i8* %.ptr, i8** %4, align 8
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %arr, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr2 = load i8*, i8** %5, align 8             ; [#uses = 1]
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr3 = load i8*, i8** %6, align 8             ; [#uses = 1]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len4 = load i64, i64* %7, align 8             ; [#uses = 1]
  %8 = mul i64 1, %.len4                          ; [#uses = 1]
  %9 = call i8* @memcpy(i8* %.ptr2, i8* %.ptr3, i64 %8) #1 ; [#uses = 0]
  %10 = load { i64, i8* }, { i64, i8* }* %arr, align 8 ; [#uses = 0]
  %11 = load { i64, i8* }, { i64, i8* }* %arr, align 8 ; [#uses = 1]
  ret { i64, i8* } %11
}

; [#uses = 1]
declare { i64, i8* } @_d_newarrayU(%object.TypeInfo*, i64) #1

; [#uses = 3]
declare i8* @memcpy(i8*, i8*, i64) #1

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D4core8internal5array11duplication__T8_dupCtfeTxaTyaZQqFNaNbNfMAxaZAya({ i64, i8* } %a_arg) #0 {
  %a = alloca { i64, i8* }, align 8               ; [#uses = 3, size/byte = 16]
  %res = alloca { i64, i8* }, align 8             ; [#uses = 7, size/byte = 16]
  %__r459 = alloca { i64, i8* }, align 8          ; [#uses = 4, size/byte = 16]
  %__key460 = alloca i64, align 8                 ; [#uses = 5, size/byte = 8]
  %e = alloca i8*, align 8                        ; [#uses = 2, size/byte = 8]
  %__appendtmp461 = alloca i8*, align 8           ; [#uses = 2, size/byte = 8]
  store { i64, i8* } %a_arg, { i64, i8* }* %a, align 8
  store { i64, i8* } zeroinitializer, { i64, i8* }* %res, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %1, align 8              ; [#uses = 2]
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %2, align 8              ; [#uses = 2]
  %3 = insertvalue { i64, i8* } undef, i64 %.len, 0 ; [#uses = 1]
  %4 = insertvalue { i64, i8* } %3, i8* %.ptr, 1  ; [#uses = 0]
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r459, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %.len, i64* %5, align 8
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r459, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %.ptr, i8** %6, align 8
  store i64 0, i64* %__key460, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %0
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r459, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %7, align 8             ; [#uses = 1]
  %8 = load i64, i64* %__key460, align 8          ; [#uses = 1]
  %9 = icmp ult i64 %8, %.len1                    ; [#uses = 1]
  br i1 %9, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %10 = load i64, i64* %__key460, align 8         ; [#uses = 1]
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r459, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr2 = load i8*, i8** %11, align 8            ; [#uses = 1]
  %12 = getelementptr inbounds i8, i8* %.ptr2, i64 %10 ; [#uses = 1, type = i8*]
  store i8* %12, i8** %e, align 8
  %13 = load i8*, i8** %e, align 8                ; [#uses = 1]
  store i8* %13, i8** %__appendtmp461, align 8
  %14 = call { i64, i8* }* @_D4core8internal5array9appending__T21_d_arrayappendcTXImplHTAyaTyaZ17_d_arrayappendcTXFNaNbNcNeMNkKQBnmZQBs({ i64, i8* }* dereferenceable(16) %res, i64 1) #1 ; [#uses = 0]
  %15 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %res, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len3 = load i64, i64* %15, align 8            ; [#uses = 1]
  %16 = sub i64 %.len3, 1                         ; [#uses = 3]
  %17 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %res, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len4 = load i64, i64* %17, align 8            ; [#uses = 2]
  %bounds.cmp = icmp ult i64 %16, %.len4          ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %forbody
  %18 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %res, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr5 = load i8*, i8** %18, align 8            ; [#uses = 1]
  %19 = getelementptr inbounds i8, i8* %.ptr5, i64 %16 ; [#uses = 1, type = i8*]
  %20 = load i8*, i8** %__appendtmp461, align 8   ; [#uses = 1]
  %21 = load i8, i8* %20, align 1                 ; [#uses = 1]
  store i8 %21, i8* %19, align 1
  br label %forinc

bounds.fail:                                      ; preds = %forbody
  call void @_d_arraybounds_index({ i64, i8* } { i64 73, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.23, i32 0, i32 0) }, i32 39, i64 %16, i64 %.len4) #5
  unreachable

forinc:                                           ; preds = %bounds.ok
  %22 = load i64, i64* %__key460, align 8         ; [#uses = 1]
  %23 = add i64 %22, 1                            ; [#uses = 1]
  store i64 %23, i64* %__key460, align 8
  br label %forcond

endfor:                                           ; preds = %forcond
  %24 = load { i64, i8* }, { i64, i8* }* %res, align 8 ; [#uses = 0]
  %25 = load { i64, i8* }, { i64, i8* }* %res, align 8 ; [#uses = 1]
  ret { i64, i8* } %25
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr { i64, i8* }* @_D4core8internal5array9appending__T21_d_arrayappendcTXImplHTAyaTyaZ17_d_arrayappendcTXFNaNbNcNeMNkKQBnmZQBs({ i64, i8* }* dereferenceable(16) %px, i64 %n_arg) #0 {
  %n = alloca i64, align 8                        ; [#uses = 2, size/byte = 8]
  %ti = alloca %object.TypeInfo_Array*, align 8   ; [#uses = 2, size/byte = 8]
  %pxx = alloca { i64, i8* }, align 8             ; [#uses = 5, size/byte = 16]
  store i64 %n_arg, i64* %n, align 8
  store %object.TypeInfo_Array* @_D12TypeInfo_Aya6__initZ, %object.TypeInfo_Array** %ti, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %px, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %1, align 8              ; [#uses = 1]
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %px, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %2, align 8              ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr, i64 0 ; [#uses = 2, type = i8*]
  %3 = sub i64 %.len, 0                           ; [#uses = 2]
  %4 = insertvalue { i64, i8* } undef, i64 %3, 0  ; [#uses = 1]
  %5 = insertvalue { i64, i8* } %4, i8* %lowerbound, 1 ; [#uses = 0]
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %pxx, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %3, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %pxx, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound, i8** %7, align 8
  %8 = bitcast %object.TypeInfo_Array** %ti to %object.TypeInfo** ; [#uses = 1]
  %9 = load %object.TypeInfo*, %object.TypeInfo** %8, align 8 ; [#uses = 1]
  %10 = load i64, i64* %n, align 8                ; [#uses = 1]
  %11 = call { i64, i8* } @_d_arrayappendcTX(%object.TypeInfo* %9, { i64, i8* }* dereferenceable(16) %pxx, i64 %10) #1 ; [#uses = 0]
  %12 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %pxx, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr1 = load i8*, i8** %12, align 8            ; [#uses = 1]
  %13 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %pxx, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len2 = load i64, i64* %13, align 8            ; [#uses = 1]
  %lowerbound3 = getelementptr inbounds i8, i8* %.ptr1, i64 0 ; [#uses = 2, type = i8*]
  %14 = sub i64 %.len2, 0                         ; [#uses = 2]
  %15 = insertvalue { i64, i8* } undef, i64 %14, 0 ; [#uses = 1]
  %16 = insertvalue { i64, i8* } %15, i8* %lowerbound3, 1 ; [#uses = 0]
  %17 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %px, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %14, i64* %17, align 8
  %18 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %px, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound3, i8** %18, align 8
  ret { i64, i8* }* %px
}

; [#uses = 57]
; Function Attrs: cold noreturn uwtable
declare void @_d_arraybounds_index({ i64, i8* }, i32, i64, i64) #5

; [#uses = 1]
declare { i64, i8* } @_d_arrayappendcTX(%object.TypeInfo*, { i64, i8* }* dereferenceable(16), i64) #1

; [#uses = 5]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std5range10primitives__T5emptyTAyaZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %a) #0 {
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = icmp ne i64 %.len, 0                       ; [#uses = 1]
  %3 = icmp eq i1 %2, false                       ; [#uses = 1]
  ret i1 %3
}

; [#uses = 4]
; Function Attrs: uwtable
define weak_odr i32 @_D3std5range10primitives__T5frontTaZQjFNaNdNfMAxaZw({ i64, i8* } %a_arg) #0 {
  %a = alloca { i64, i8* }, align 8               ; [#uses = 3, size/byte = 16]
  %i = alloca i64, align 8                        ; [#uses = 2, size/byte = 8]
  store { i64, i8* } %a_arg, { i64, i8* }* %a, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = icmp ne i64 %.len, 0                       ; [#uses = 1]
  br i1 %2, label %assertPassed, label %assertFailed

assertPassed:                                     ; preds = %0
  store i64 0, i64* %i, align 8
  %3 = call i32 @_D3std3utf__T6decodeVEQu8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDhFNaNeMKQoKmZw({ i64, i8* }* dereferenceable(16) %a, i64* dereferenceable(8) %i) #1 ; [#uses = 1]
  ret i32 %3

assertFailed:                                     ; preds = %0
  call void @_d_assert_msg({ i64, i8* } { i64 55, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.24, i32 0, i32 0) }, { i64, i8* } { i64 62, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.25, i32 0, i32 0) }, i32 2519) #5
  unreachable
}

; [#uses = 9]
; Function Attrs: cold noreturn uwtable
declare void @_d_assert_msg({ i64, i8* }, { i64, i8* }, i32) #5

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr i32 @_D3std3utf__T6decodeVEQu8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDhFNaNeMKQoKmZw({ i64, i8* }* dereferenceable(16) %str, i64* dereferenceable(8) %index) #0 {
  %__result = alloca i32, align 4                 ; [#uses = 5, size/byte = 4]
  %result = alloca i32*, align 8                  ; [#uses = 2, size/byte = 8]
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = load i64, i64* %index, align 8             ; [#uses = 1]
  %3 = icmp ult i64 %2, %.len                     ; [#uses = 1]
  br i1 %3, label %assertPassed, label %assertFailed

assertPassed:                                     ; preds = %0
  %4 = load i64, i64* %index, align 8             ; [#uses = 2]
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %5, align 8             ; [#uses = 2]
  %bounds.cmp = icmp ult i64 %4, %.len1           ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %assertPassed
  %6 = load i64, i64* %index, align 8             ; [#uses = 1]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %7, align 8              ; [#uses = 1]
  %8 = getelementptr inbounds i8, i8* %.ptr, i64 %6 ; [#uses = 1, type = i8*]
  %9 = load i8, i8* %8, align 1                   ; [#uses = 1]
  %10 = zext i8 %9 to i32                         ; [#uses = 1]
  %11 = icmp slt i32 %10, 128                     ; [#uses = 1]
  br i1 %11, label %if, label %else

if:                                               ; preds = %bounds.ok
  %12 = load i64, i64* %index, align 8            ; [#uses = 4]
  %13 = add i64 %12, 1                            ; [#uses = 1]
  store i64 %13, i64* %index, align 8
  %14 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len2 = load i64, i64* %14, align 8            ; [#uses = 2]
  %bounds.cmp3 = icmp ult i64 %12, %.len2         ; [#uses = 1]
  br i1 %bounds.cmp3, label %bounds.ok4, label %bounds.fail5

bounds.ok4:                                       ; preds = %if
  %15 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr6 = load i8*, i8** %15, align 8            ; [#uses = 1]
  %16 = getelementptr inbounds i8, i8* %.ptr6, i64 %12 ; [#uses = 1, type = i8*]
  %17 = load i8, i8* %16, align 1                 ; [#uses = 1]
  %18 = zext i8 %17 to i32                        ; [#uses = 1]
  store i32 %18, i32* %__result, align 4
  br label %label.__returnLabel

aftergoto:                                        ; No predecessors!
  br label %endif

bounds.fail5:                                     ; preds = %if
  call void @_d_arraybounds_index({ i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i32 1184, i64 %12, i64 %.len2) #5
  unreachable

else:                                             ; preds = %bounds.ok
  %19 = call i32 @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFNaKQlKmZw({ i64, i8* }* dereferenceable(16) %str, i64* dereferenceable(8) %index) #1 ; [#uses = 1]
  store i32 %19, i32* %__result, align 4
  br label %label.__returnLabel

aftergoto8:                                       ; No predecessors!
  br label %endif

endif:                                            ; preds = %aftergoto8, %aftergoto
  br label %label.__returnLabel

label.__returnLabel:                              ; preds = %endif, %else, %bounds.ok4
  store i32* %__result, i32** %result, align 8
  %20 = load i32*, i32** %result, align 8         ; [#uses = 1]
  %21 = load i32, i32* %20, align 4               ; [#uses = 1]
  %22 = call zeroext i1 @_D3std3utf12isValidDcharFNaNbNiNfwZb(i32 %21) #1 ; [#uses = 1]
  br i1 %22, label %assertPassed9, label %assertFailed10

assertPassed9:                                    ; preds = %label.__returnLabel
  %23 = load i32, i32* %__result, align 4         ; [#uses = 0]
  %24 = load i32, i32* %__result, align 4         ; [#uses = 1]
  ret i32 %24

assertFailed10:                                   ; preds = %label.__returnLabel
  call void @_d_assert({ i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i32 1179) #5
  unreachable

bounds.fail:                                      ; preds = %assertPassed
  call void @_d_arraybounds_index({ i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i32 1183, i64 %4, i64 %.len1) #5
  unreachable

assertFailed:                                     ; preds = %0
  call void @_d_assert_msg({ i64, i8* } { i64 44, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.26, i32 0, i32 0) }, { i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i32 1175) #5
  unreachable
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFNaKQlKmZw({ i64, i8* }* dereferenceable(16) %str, i64* dereferenceable(8) %index) #0 {
  %.frame = alloca %nest.decodeImpl, align 8      ; [#uses = 15, size/byte = 16]
  %fst = alloca i8, align 1                       ; [#uses = 14, size/byte = 1]
  %tmp = alloca i8, align 1                       ; [#uses = 9, size/byte = 1]
  %d = alloca i32, align 4                        ; [#uses = 24, size/byte = 4]
  %pstr = getelementptr inbounds %nest.decodeImpl, %nest.decodeImpl* %.frame, i32 0, i32 0 ; [#uses = 5, type = i8**]
  %length = getelementptr inbounds %nest.decodeImpl, %nest.decodeImpl* %.frame, i32 0, i32 1 ; [#uses = 4, type = i64*]
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %1, align 8              ; [#uses = 1]
  %2 = load i64, i64* %index, align 8             ; [#uses = 1]
  %3 = getelementptr inbounds i8, i8* %.ptr, i64 %2 ; [#uses = 1, type = i8*]
  store i8* %3, i8** %pstr, align 8
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %4, align 8              ; [#uses = 1]
  %5 = load i64, i64* %index, align 8             ; [#uses = 1]
  %6 = sub i64 %.len, %5                          ; [#uses = 1]
  store i64 %6, i64* %length, align 8
  %7 = load i8*, i8** %pstr, align 8              ; [#uses = 1]
  %8 = getelementptr inbounds i8, i8* %7, i64 0   ; [#uses = 1, type = i8*]
  %9 = load i8, i8* %8, align 1                   ; [#uses = 1]
  store i8 %9, i8* %fst, align 1
  %10 = load i8, i8* %fst, align 1                ; [#uses = 1]
  %11 = zext i8 %10 to i32                        ; [#uses = 1]
  %12 = and i32 %11, 192                          ; [#uses = 1]
  %13 = icmp ne i32 %12, 192                      ; [#uses = 1]
  br i1 %13, label %if, label %endif

if:                                               ; preds = %0
  %14 = bitcast %nest.decodeImpl* %.frame to i8*  ; [#uses = 1]
  %15 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ10invalidUTFMFNaNbZCQFgQFf12UTFException(i8* nonnull %14) #0 ; [#uses = 1]
  %16 = bitcast %std.utf.UTFException* %15 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %16) #5
  unreachable

afterthrow:                                       ; No predecessors!
  br label %endif

endif:                                            ; preds = %afterthrow, %0
  %17 = load i8, i8* %fst, align 1                ; [#uses = 1]
  %18 = zext i8 %17 to i32                        ; [#uses = 1]
  store i32 %18, i32* %d, align 4
  %19 = load i8, i8* %fst, align 1                ; [#uses = 1]
  %20 = trunc i32 1 to i8                         ; [#uses = 1]
  %21 = shl i8 %19, %20                           ; [#uses = 1]
  store i8 %21, i8* %fst, align 1
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %endif
  %22 = load i64, i64* %length, align 8           ; [#uses = 1]
  %23 = icmp eq i64 1, %22                        ; [#uses = 1]
  br i1 %23, label %if3, label %endif4

if3:                                              ; preds = %unrolledstmt
  %24 = bitcast %nest.decodeImpl* %.frame to i8*  ; [#uses = 1]
  %25 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ11outOfBoundsMFNaNbZCQFhQFg12UTFException(i8* nonnull %24) #0 ; [#uses = 1]
  %26 = bitcast %std.utf.UTFException* %25 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %26) #5
  unreachable

afterthrow5:                                      ; No predecessors!
  br label %endif4

endif4:                                           ; preds = %afterthrow5, %unrolledstmt
  %27 = load i8*, i8** %pstr, align 8             ; [#uses = 1]
  %28 = getelementptr inbounds i8, i8* %27, i64 1 ; [#uses = 1, type = i8*]
  %29 = load i8, i8* %28, align 1                 ; [#uses = 1]
  store i8 %29, i8* %tmp, align 1
  %30 = load i8, i8* %tmp, align 1                ; [#uses = 1]
  %31 = zext i8 %30 to i32                        ; [#uses = 1]
  %32 = and i32 %31, 192                          ; [#uses = 1]
  %33 = icmp ne i32 %32, 128                      ; [#uses = 1]
  br i1 %33, label %if6, label %endif7

if6:                                              ; preds = %endif4
  %34 = bitcast %nest.decodeImpl* %.frame to i8*  ; [#uses = 1]
  %35 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ10invalidUTFMFNaNbZCQFgQFf12UTFException(i8* nonnull %34) #0 ; [#uses = 1]
  %36 = bitcast %std.utf.UTFException* %35 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %36) #5
  unreachable

afterthrow8:                                      ; No predecessors!
  br label %endif7

endif7:                                           ; preds = %afterthrow8, %endif4
  %37 = load i32, i32* %d, align 4                ; [#uses = 1]
  %38 = shl i32 %37, 6                            ; [#uses = 1]
  %39 = load i8, i8* %tmp, align 1                ; [#uses = 1]
  %40 = zext i8 %39 to i32                        ; [#uses = 1]
  %41 = and i32 %40, 63                           ; [#uses = 1]
  %42 = or i32 %38, %41                           ; [#uses = 1]
  store i32 %42, i32* %d, align 4
  %43 = load i8, i8* %fst, align 1                ; [#uses = 1]
  %44 = trunc i32 1 to i8                         ; [#uses = 1]
  %45 = shl i8 %43, %44                           ; [#uses = 1]
  store i8 %45, i8* %fst, align 1
  %46 = load i8, i8* %fst, align 1                ; [#uses = 1]
  %47 = zext i8 %46 to i32                        ; [#uses = 1]
  %48 = and i32 %47, 128                          ; [#uses = 1]
  %49 = icmp ne i32 %48, 0                        ; [#uses = 1]
  %50 = icmp eq i1 %49, false                     ; [#uses = 1]
  br i1 %50, label %if9, label %endif10

if9:                                              ; preds = %endif7
  %51 = load i32, i32* %d, align 4                ; [#uses = 1]
  %52 = and i32 %51, 2047                         ; [#uses = 1]
  store i32 %52, i32* %d, align 4
  %53 = load i32, i32* %d, align 4                ; [#uses = 1]
  %54 = and i32 %53, -128                         ; [#uses = 1]
  %55 = icmp eq i32 %54, 0                        ; [#uses = 1]
  br i1 %55, label %if11, label %endif12

if11:                                             ; preds = %if9
  %56 = bitcast %nest.decodeImpl* %.frame to i8*  ; [#uses = 1]
  %57 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ10invalidUTFMFNaNbZCQFgQFf12UTFException(i8* nonnull %56) #0 ; [#uses = 1]
  %58 = bitcast %std.utf.UTFException* %57 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %58) #5
  unreachable

afterthrow13:                                     ; No predecessors!
  br label %endif12

endif12:                                          ; preds = %afterthrow13, %if9
  %59 = load i64, i64* %index, align 8            ; [#uses = 1]
  %60 = add i64 %59, 2                            ; [#uses = 1]
  store i64 %60, i64* %index, align 8
  %61 = load i32, i32* %d, align 4                ; [#uses = 0]
  %62 = load i32, i32* %d, align 4                ; [#uses = 1]
  ret i32 %62

dummy.afterreturn:                                ; No predecessors!
  br label %endif10

endif10:                                          ; preds = %dummy.afterreturn, %endif7
  br label %unrolledstmt1

unrolledstmt1:                                    ; preds = %endif10
  %63 = load i64, i64* %length, align 8           ; [#uses = 1]
  %64 = icmp eq i64 2, %63                        ; [#uses = 1]
  br i1 %64, label %if14, label %endif15

if14:                                             ; preds = %unrolledstmt1
  %65 = bitcast %nest.decodeImpl* %.frame to i8*  ; [#uses = 1]
  %66 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ11outOfBoundsMFNaNbZCQFhQFg12UTFException(i8* nonnull %65) #0 ; [#uses = 1]
  %67 = bitcast %std.utf.UTFException* %66 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %67) #5
  unreachable

afterthrow16:                                     ; No predecessors!
  br label %endif15

endif15:                                          ; preds = %afterthrow16, %unrolledstmt1
  %68 = load i8*, i8** %pstr, align 8             ; [#uses = 1]
  %69 = getelementptr inbounds i8, i8* %68, i64 2 ; [#uses = 1, type = i8*]
  %70 = load i8, i8* %69, align 1                 ; [#uses = 1]
  store i8 %70, i8* %tmp, align 1
  %71 = load i8, i8* %tmp, align 1                ; [#uses = 1]
  %72 = zext i8 %71 to i32                        ; [#uses = 1]
  %73 = and i32 %72, 192                          ; [#uses = 1]
  %74 = icmp ne i32 %73, 128                      ; [#uses = 1]
  br i1 %74, label %if17, label %endif18

if17:                                             ; preds = %endif15
  %75 = bitcast %nest.decodeImpl* %.frame to i8*  ; [#uses = 1]
  %76 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ10invalidUTFMFNaNbZCQFgQFf12UTFException(i8* nonnull %75) #0 ; [#uses = 1]
  %77 = bitcast %std.utf.UTFException* %76 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %77) #5
  unreachable

afterthrow19:                                     ; No predecessors!
  br label %endif18

endif18:                                          ; preds = %afterthrow19, %endif15
  %78 = load i32, i32* %d, align 4                ; [#uses = 1]
  %79 = shl i32 %78, 6                            ; [#uses = 1]
  %80 = load i8, i8* %tmp, align 1                ; [#uses = 1]
  %81 = zext i8 %80 to i32                        ; [#uses = 1]
  %82 = and i32 %81, 63                           ; [#uses = 1]
  %83 = or i32 %79, %82                           ; [#uses = 1]
  store i32 %83, i32* %d, align 4
  %84 = load i8, i8* %fst, align 1                ; [#uses = 1]
  %85 = trunc i32 1 to i8                         ; [#uses = 1]
  %86 = shl i8 %84, %85                           ; [#uses = 1]
  store i8 %86, i8* %fst, align 1
  %87 = load i8, i8* %fst, align 1                ; [#uses = 1]
  %88 = zext i8 %87 to i32                        ; [#uses = 1]
  %89 = and i32 %88, 128                          ; [#uses = 1]
  %90 = icmp ne i32 %89, 0                        ; [#uses = 1]
  %91 = icmp eq i1 %90, false                     ; [#uses = 1]
  br i1 %91, label %if20, label %endif21

if20:                                             ; preds = %endif18
  %92 = load i32, i32* %d, align 4                ; [#uses = 1]
  %93 = and i32 %92, 65535                        ; [#uses = 1]
  store i32 %93, i32* %d, align 4
  %94 = load i32, i32* %d, align 4                ; [#uses = 1]
  %95 = and i32 %94, -2048                        ; [#uses = 1]
  %96 = icmp eq i32 %95, 0                        ; [#uses = 1]
  br i1 %96, label %if22, label %endif23

if22:                                             ; preds = %if20
  %97 = bitcast %nest.decodeImpl* %.frame to i8*  ; [#uses = 1]
  %98 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ10invalidUTFMFNaNbZCQFgQFf12UTFException(i8* nonnull %97) #0 ; [#uses = 1]
  %99 = bitcast %std.utf.UTFException* %98 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %99) #5
  unreachable

afterthrow24:                                     ; No predecessors!
  br label %endif23

endif23:                                          ; preds = %afterthrow24, %if20
  %100 = load i32, i32* %d, align 4               ; [#uses = 1]
  %101 = call zeroext i1 @_D3std3utf12isValidDcharFNaNbNiNfwZb(i32 %100) #1 ; [#uses = 1]
  %102 = icmp eq i1 %101, false                   ; [#uses = 1]
  br i1 %102, label %if25, label %endif26

if25:                                             ; preds = %endif23
  %103 = bitcast %nest.decodeImpl* %.frame to i8* ; [#uses = 1]
  %104 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ10invalidUTFMFNaNbZCQFgQFf12UTFException(i8* nonnull %103) #0 ; [#uses = 1]
  %105 = bitcast %std.utf.UTFException* %104 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %105) #5
  unreachable

afterthrow27:                                     ; No predecessors!
  br label %endif26

endif26:                                          ; preds = %afterthrow27, %endif23
  %106 = load i64, i64* %index, align 8           ; [#uses = 1]
  %107 = add i64 %106, 3                          ; [#uses = 1]
  store i64 %107, i64* %index, align 8
  %108 = load i32, i32* %d, align 4               ; [#uses = 0]
  %109 = load i32, i32* %d, align 4               ; [#uses = 1]
  ret i32 %109

dummy.afterreturn28:                              ; No predecessors!
  br label %endif21

endif21:                                          ; preds = %dummy.afterreturn28, %endif18
  br label %unrolledstmt2

unrolledstmt2:                                    ; preds = %endif21
  %110 = load i64, i64* %length, align 8          ; [#uses = 1]
  %111 = icmp eq i64 3, %110                      ; [#uses = 1]
  br i1 %111, label %if29, label %endif30

if29:                                             ; preds = %unrolledstmt2
  %112 = bitcast %nest.decodeImpl* %.frame to i8* ; [#uses = 1]
  %113 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ11outOfBoundsMFNaNbZCQFhQFg12UTFException(i8* nonnull %112) #0 ; [#uses = 1]
  %114 = bitcast %std.utf.UTFException* %113 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %114) #5
  unreachable

afterthrow31:                                     ; No predecessors!
  br label %endif30

endif30:                                          ; preds = %afterthrow31, %unrolledstmt2
  %115 = load i8*, i8** %pstr, align 8            ; [#uses = 1]
  %116 = getelementptr inbounds i8, i8* %115, i64 3 ; [#uses = 1, type = i8*]
  %117 = load i8, i8* %116, align 1               ; [#uses = 1]
  store i8 %117, i8* %tmp, align 1
  %118 = load i8, i8* %tmp, align 1               ; [#uses = 1]
  %119 = zext i8 %118 to i32                      ; [#uses = 1]
  %120 = and i32 %119, 192                        ; [#uses = 1]
  %121 = icmp ne i32 %120, 128                    ; [#uses = 1]
  br i1 %121, label %if32, label %endif33

if32:                                             ; preds = %endif30
  %122 = bitcast %nest.decodeImpl* %.frame to i8* ; [#uses = 1]
  %123 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ10invalidUTFMFNaNbZCQFgQFf12UTFException(i8* nonnull %122) #0 ; [#uses = 1]
  %124 = bitcast %std.utf.UTFException* %123 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %124) #5
  unreachable

afterthrow34:                                     ; No predecessors!
  br label %endif33

endif33:                                          ; preds = %afterthrow34, %endif30
  %125 = load i32, i32* %d, align 4               ; [#uses = 1]
  %126 = shl i32 %125, 6                          ; [#uses = 1]
  %127 = load i8, i8* %tmp, align 1               ; [#uses = 1]
  %128 = zext i8 %127 to i32                      ; [#uses = 1]
  %129 = and i32 %128, 63                         ; [#uses = 1]
  %130 = or i32 %126, %129                        ; [#uses = 1]
  store i32 %130, i32* %d, align 4
  %131 = load i8, i8* %fst, align 1               ; [#uses = 1]
  %132 = trunc i32 1 to i8                        ; [#uses = 1]
  %133 = shl i8 %131, %132                        ; [#uses = 1]
  store i8 %133, i8* %fst, align 1
  %134 = load i8, i8* %fst, align 1               ; [#uses = 1]
  %135 = zext i8 %134 to i32                      ; [#uses = 1]
  %136 = and i32 %135, 128                        ; [#uses = 1]
  %137 = icmp ne i32 %136, 0                      ; [#uses = 1]
  %138 = icmp eq i1 %137, false                   ; [#uses = 1]
  br i1 %138, label %if35, label %endif36

if35:                                             ; preds = %endif33
  %139 = load i32, i32* %d, align 4               ; [#uses = 1]
  %140 = and i32 %139, 2097151                    ; [#uses = 1]
  store i32 %140, i32* %d, align 4
  %141 = load i32, i32* %d, align 4               ; [#uses = 1]
  %142 = and i32 %141, -65536                     ; [#uses = 1]
  %143 = icmp eq i32 %142, 0                      ; [#uses = 1]
  br i1 %143, label %if37, label %endif38

if37:                                             ; preds = %if35
  %144 = bitcast %nest.decodeImpl* %.frame to i8* ; [#uses = 1]
  %145 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ10invalidUTFMFNaNbZCQFgQFf12UTFException(i8* nonnull %144) #0 ; [#uses = 1]
  %146 = bitcast %std.utf.UTFException* %145 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %146) #5
  unreachable

afterthrow39:                                     ; No predecessors!
  br label %endif38

endif38:                                          ; preds = %afterthrow39, %if35
  %147 = load i32, i32* %d, align 4               ; [#uses = 1]
  %148 = icmp ugt i32 %147, 1114111               ; [#uses = 1]
  br i1 %148, label %if40, label %endif41

if40:                                             ; preds = %endif38
  %149 = bitcast %nest.decodeImpl* %.frame to i8* ; [#uses = 1]
  %150 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ10invalidUTFMFNaNbZCQFgQFf12UTFException(i8* nonnull %149) #0 ; [#uses = 1]
  %151 = bitcast %std.utf.UTFException* %150 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %151) #5
  unreachable

afterthrow42:                                     ; No predecessors!
  br label %endif41

endif41:                                          ; preds = %afterthrow42, %endif38
  %152 = load i64, i64* %index, align 8           ; [#uses = 1]
  %153 = add i64 %152, 4                          ; [#uses = 1]
  store i64 %153, i64* %index, align 8
  %154 = load i32, i32* %d, align 4               ; [#uses = 0]
  %155 = load i32, i32* %d, align 4               ; [#uses = 1]
  ret i32 %155

dummy.afterreturn43:                              ; No predecessors!
  br label %endif36

endif36:                                          ; preds = %dummy.afterreturn43, %endif33
  br label %unrolledend

unrolledend:                                      ; preds = %endif36
  %156 = bitcast %nest.decodeImpl* %.frame to i8* ; [#uses = 1]
  %157 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ10invalidUTFMFNaNbZCQFgQFf12UTFException(i8* nonnull %156) #0 ; [#uses = 1]
  %158 = bitcast %std.utf.UTFException* %157 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %158) #5
  unreachable
}

; [#uses = 7]
declare zeroext i1 @_D3std3utf12isValidDcharFNaNbNiNfwZb(i32) #1

; [#uses = 6]
; Function Attrs: cold noreturn uwtable
declare void @_d_assert({ i64, i8* }, i32) #5

; [#uses = 6]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std5range10primitives__T5emptyTAxaZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %a) #0 {
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = icmp ne i64 %.len, 0                       ; [#uses = 1]
  %3 = icmp eq i1 %2, false                       ; [#uses = 1]
  ret i1 %3
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T8popFrontTaZQmFNaNbNiNeMKANgaZv({ i64, i8* }* dereferenceable(16) %str) #0 {
  %c = alloca i8, align 1                         ; [#uses = 3, size/byte = 1]
  %charWidth = alloca i32, align 4                ; [#uses = 2, size/byte = 4]
  %condtmp = alloca i32*, align 8                 ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp = alloca i32, align 4           ; [#uses = 2, size/byte = 4]
  %.makelvaluetmp3 = alloca i32, align 4          ; [#uses = 2, size/byte = 4]
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = icmp ne i64 %.len, 0                       ; [#uses = 1]
  br i1 %2, label %assertPassed, label %assertFailed

assertPassed:                                     ; preds = %0
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %3, align 8             ; [#uses = 2]
  %bounds.cmp = icmp ult i64 0, %.len1            ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %assertPassed
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %4, align 8              ; [#uses = 1]
  %5 = getelementptr inbounds i8, i8* %.ptr, i64 0 ; [#uses = 1, type = i8*]
  %6 = load i8, i8* %5, align 1                   ; [#uses = 1]
  store i8 %6, i8* %c, align 1
  %7 = load i8, i8* %c, align 1                   ; [#uses = 1]
  %8 = zext i8 %7 to i32                          ; [#uses = 1]
  %9 = icmp slt i32 %8, 192                       ; [#uses = 1]
  br i1 %9, label %condtrue, label %condfalse

condtrue:                                         ; preds = %bounds.ok
  store i32 1, i32* %.makelvaluetmp, align 4
  store i32* %.makelvaluetmp, i32** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %bounds.ok
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* @_D3std5range10primitives__T8popFrontTaZQmFNaNbNeMKANgaZ12charWidthTabyAh, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr2 = load i8*, i8** %10, align 8            ; [#uses = 1]
  %11 = load i8, i8* %c, align 1                  ; [#uses = 1]
  %12 = zext i8 %11 to i32                        ; [#uses = 1]
  %13 = sub i32 %12, 192                          ; [#uses = 1]
  %14 = sext i32 %13 to i64                       ; [#uses = 1]
  %15 = getelementptr inbounds i8, i8* %.ptr2, i64 %14 ; [#uses = 1, type = i8*]
  %16 = load i8, i8* %15, align 1                 ; [#uses = 1]
  %17 = zext i8 %16 to i32                        ; [#uses = 1]
  store i32 %17, i32* %.makelvaluetmp3, align 4
  store i32* %.makelvaluetmp3, i32** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %18 = load i32*, i32** %condtmp, align 8        ; [#uses = 1]
  %19 = load i32, i32* %18, align 4               ; [#uses = 1]
  store i32 %19, i32* %charWidth, align 4
  %20 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr4 = load i8*, i8** %20, align 8            ; [#uses = 1]
  %21 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len5 = load i64, i64* %21, align 8            ; [#uses = 1]
  %22 = load i32, i32* %charWidth, align 4        ; [#uses = 1]
  %23 = call i32 @_D3std9algorithm10comparison__T3minTmTyiZQkFNaNbNiNfmyiZyi(i64 %.len5, i32 %22) #1 ; [#uses = 1]
  %24 = sext i32 %23 to i64                       ; [#uses = 4]
  %25 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len6 = load i64, i64* %25, align 8            ; [#uses = 3]
  %bounds.cmp.lo = icmp ule i64 %24, %.len6       ; [#uses = 1]
  br i1 %bounds.cmp.lo, label %bounds.ok7, label %bounds.fail8

bounds.ok7:                                       ; preds = %condend
  %lowerbound = getelementptr inbounds i8, i8* %.ptr4, i64 %24 ; [#uses = 2, type = i8*]
  %26 = sub i64 %.len6, %24                       ; [#uses = 2]
  %27 = insertvalue { i64, i8* } undef, i64 %26, 0 ; [#uses = 1]
  %28 = insertvalue { i64, i8* } %27, i8* %lowerbound, 1 ; [#uses = 0]
  %29 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %26, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound, i8** %30, align 8
  ret void

bounds.fail8:                                     ; preds = %condend
  call void @_d_arraybounds_slice({ i64, i8* } { i64 62, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.25, i32 0, i32 0) }, i32 2330, i64 %24, i64 %.len6, i64 0) #5
  unreachable

bounds.fail:                                      ; preds = %assertPassed
  call void @_d_arraybounds_index({ i64, i8* } { i64 62, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.25, i32 0, i32 0) }, i32 2328, i64 0, i64 %.len1) #5
  unreachable

assertFailed:                                     ; preds = %0
  call void @_d_assert_msg({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.28, i32 0, i32 0) }, { i64, i8* } { i64 62, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.25, i32 0, i32 0) }, i32 2317) #5
  unreachable
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D3std9algorithm10comparison__T3minTmTyiZQkFNaNbNiNfmyiZyi(i64 %__param_0_arg, i32 %__param_1_arg) #0 {
  %__param_0 = alloca i64, align 8                ; [#uses = 3, size/byte = 8]
  %__param_1 = alloca i32, align 4                ; [#uses = 3, size/byte = 4]
  %chooseB = alloca i8, align 1                   ; [#uses = 2, size/byte = 1]
  %condtmp = alloca i32*, align 8                 ; [#uses = 4, size/byte = 8]
  %.makelvaluetmp = alloca i32, align 4           ; [#uses = 2, size/byte = 4]
  %.makelvaluetmp1 = alloca i32, align 4          ; [#uses = 2, size/byte = 4]
  store i64 %__param_0_arg, i64* %__param_0, align 8
  store i32 %__param_1_arg, i32* %__param_1, align 4
  %1 = call zeroext i1 @_D3std10functional__T6safeOpVAyaa1_3cZ__TQuTyiTmZQBcFNaNbNiNfKyiKmZb(i32* dereferenceable(4) %__param_1, i64* dereferenceable(8) %__param_0) #1 ; [#uses = 1]
  %2 = zext i1 %1 to i8                           ; [#uses = 1]
  store i8 %2, i8* %chooseB, align 1
  %3 = load i8, i8* %chooseB, align 1             ; [#uses = 1]
  %4 = trunc i8 %3 to i1                          ; [#uses = 1]
  br i1 %4, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  %5 = load i32, i32* %__param_1, align 4         ; [#uses = 1]
  %6 = sext i32 %5 to i64                         ; [#uses = 1]
  %7 = trunc i64 %6 to i32                        ; [#uses = 1]
  store i32 %7, i32* %.makelvaluetmp, align 4
  store i32* %.makelvaluetmp, i32** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  %8 = load i64, i64* %__param_0, align 8         ; [#uses = 1]
  %9 = trunc i64 %8 to i32                        ; [#uses = 1]
  store i32 %9, i32* %.makelvaluetmp1, align 4
  store i32* %.makelvaluetmp1, i32** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %10 = load i32*, i32** %condtmp, align 8        ; [#uses = 1]
  %11 = load i32, i32* %10, align 4               ; [#uses = 0]
  %12 = load i32*, i32** %condtmp, align 8        ; [#uses = 1]
  %13 = load i32, i32* %12, align 4               ; [#uses = 1]
  ret i32 %13
}

; [#uses = 44]
; Function Attrs: cold noreturn uwtable
declare void @_d_arraybounds_slice({ i64, i8* }, i32, i64, i64, i64) #5

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std10functional__T6safeOpVAyaa1_3cZ__TQuTyiTmZQBcFNaNbNiNfKyiKmZb(i32* dereferenceable(4) %a, i64* dereferenceable(8) %b) #0 {
  %result = alloca i8, align 1                    ; [#uses = 3, size/byte = 1]
  %1 = load i32, i32* %a, align 4                 ; [#uses = 1]
  %2 = icmp slt i32 %1, 0                         ; [#uses = 1]
  br i1 %2, label %ororend, label %oror

oror:                                             ; preds = %0
  %3 = load i32, i32* %a, align 4                 ; [#uses = 1]
  %4 = load i64, i64* %b, align 8                 ; [#uses = 1]
  %5 = call zeroext i1 @_D3std10functional__T6safeOpVAyaa1_3cZ__T8unsafeOpTyiTmZQpFNaNbNiNfyimZb(i32 %3, i64 %4) #1 ; [#uses = 1]
  br label %ororend

ororend:                                          ; preds = %oror, %0
  %ororval = phi i1 [ true, %0 ], [ %5, %oror ]   ; [#uses = 1, type = i1]
  %6 = zext i1 %ororval to i8                     ; [#uses = 1]
  store i8 %6, i8* %result, align 1
  %7 = load i8, i8* %result, align 1              ; [#uses = 1]
  %8 = trunc i8 %7 to i1                          ; [#uses = 0]
  %9 = load i8, i8* %result, align 1              ; [#uses = 1]
  %10 = trunc i8 %9 to i1                         ; [#uses = 1]
  ret i1 %10
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std10functional__T6safeOpVAyaa1_3cZ__T8unsafeOpTyiTmZQpFNaNbNiNfyimZb(i32 %a_arg, i64 %b_arg) #0 {
  %a = alloca i32, align 4                        ; [#uses = 2, size/byte = 4]
  %b = alloca i64, align 8                        ; [#uses = 2, size/byte = 8]
  store i32 %a_arg, i32* %a, align 4
  store i64 %b_arg, i64* %b, align 8
  %1 = load i32, i32* %a, align 4                 ; [#uses = 1]
  %2 = sext i32 %1 to i64                         ; [#uses = 1]
  %3 = load i64, i64* %b, align 8                 ; [#uses = 1]
  %4 = icmp ult i64 %2, %3                        ; [#uses = 1]
  ret i1 %4
}

; [#uses = 10]
; Function Attrs: uwtable
define weak_odr %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ10invalidUTFMFNaNbZCQFgQFf12UTFException(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.decodeImpl* ; [#uses = 1]
  %pstr = getelementptr inbounds %nest.decodeImpl, %nest.decodeImpl* %1, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %2 = bitcast i8* %.nest_arg to %nest.decodeImpl* ; [#uses = 1]
  %length = getelementptr inbounds %nest.decodeImpl, %nest.decodeImpl* %2, i32 0, i32 1 ; [#uses = 1, type = i64*]
  %3 = load i64, i64* %length, align 8            ; [#uses = 1]
  %4 = load i8*, i8** %pstr, align 8              ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %4, i64 0 ; [#uses = 1, type = i8*]
  %5 = sub i64 %3, 0                              ; [#uses = 1]
  %6 = insertvalue { i64, i8* } undef, i64 %5, 0  ; [#uses = 1]
  %7 = insertvalue { i64, i8* } %6, i8* %lowerbound, 1 ; [#uses = 1]
  %8 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ__T9exceptionTQBcZQpFNaNbNfQBpQDsZCQFvQFu12UTFException({ i64, i8* } %7, { i64, i8* } { i64 22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i32 0, i32 0) }) #1 ; [#uses = 1]
  ret %std.utf.UTFException* %8
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ__T9exceptionTQBcZQpFNaNbNfQBpQDsZCQFvQFu12UTFException({ i64, i8* } %str_arg, { i64, i8* } %msg_arg) #0 {
  %str = alloca { i64, i8* }, align 8             ; [#uses = 6, size/byte = 16]
  %msg = alloca { i64, i8* }, align 8             ; [#uses = 2, size/byte = 16]
  %sequence = alloca [4 x i32], align 4           ; [#uses = 2, size/byte = 16]
  %i = alloca i64, align 8                        ; [#uses = 13, size/byte = 8]
  store { i64, i8* } %str_arg, { i64, i8* }* %str, align 8
  store { i64, i8* } %msg_arg, { i64, i8* }* %msg, align 8
  store i64 0, i64* %i, align 8
  br label %dowhile

dowhile:                                          ; preds = %andandend6, %0
  %1 = load i64, i64* %i, align 8                 ; [#uses = 2]
  %bounds.cmp = icmp ult i64 %1, 4                ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %dowhile
  %2 = load i64, i64* %i, align 8                 ; [#uses = 1]
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* %sequence, i32 0, i64 %2 ; [#uses = 1, type = i32*]
  %4 = load i64, i64* %i, align 8                 ; [#uses = 2]
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %5, align 8              ; [#uses = 2]
  %bounds.cmp1 = icmp ult i64 %4, %.len           ; [#uses = 1]
  br i1 %bounds.cmp1, label %bounds.ok2, label %bounds.fail3

bounds.ok2:                                       ; preds = %bounds.ok
  %6 = load i64, i64* %i, align 8                 ; [#uses = 1]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %7, align 8              ; [#uses = 1]
  %8 = getelementptr inbounds i8, i8* %.ptr, i64 %6 ; [#uses = 1, type = i8*]
  %9 = load i8, i8* %8, align 1                   ; [#uses = 1]
  %10 = zext i8 %9 to i32                         ; [#uses = 1]
  store i32 %10, i32* %3, align 4
  br label %dowhilecond

bounds.fail3:                                     ; preds = %bounds.ok
  call void @_d_arraybounds_index({ i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i32 1553, i64 %4, i64 %.len) #5
  unreachable

bounds.fail:                                      ; preds = %dowhile
  call void @_d_arraybounds_index({ i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i32 1553, i64 %1, i64 4) #5
  unreachable

dowhilecond:                                      ; preds = %bounds.ok2
  %11 = load i64, i64* %i, align 8                ; [#uses = 1]
  %12 = add i64 %11, 1                            ; [#uses = 1]
  store i64 %12, i64* %i, align 8
  %13 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len4 = load i64, i64* %13, align 8            ; [#uses = 1]
  %14 = load i64, i64* %i, align 8                ; [#uses = 1]
  %15 = icmp ult i64 %14, %.len4                  ; [#uses = 1]
  br i1 %15, label %andand, label %andandend

andand:                                           ; preds = %dowhilecond
  %16 = load i64, i64* %i, align 8                ; [#uses = 1]
  %17 = icmp ult i64 %16, 4                       ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %dowhilecond
  %andandval = phi i1 [ false, %dowhilecond ], [ %17, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand5, label %andandend6

andand5:                                          ; preds = %andandend
  %18 = load i64, i64* %i, align 8                ; [#uses = 2]
  %19 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len7 = load i64, i64* %19, align 8            ; [#uses = 2]
  %bounds.cmp8 = icmp ult i64 %18, %.len7         ; [#uses = 1]
  br i1 %bounds.cmp8, label %bounds.ok9, label %bounds.fail10

bounds.ok9:                                       ; preds = %andand5
  %20 = load i64, i64* %i, align 8                ; [#uses = 1]
  %21 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr11 = load i8*, i8** %21, align 8           ; [#uses = 1]
  %22 = getelementptr inbounds i8, i8* %.ptr11, i64 %20 ; [#uses = 1, type = i8*]
  %23 = load i8, i8* %22, align 1                 ; [#uses = 1]
  %24 = zext i8 %23 to i32                        ; [#uses = 1]
  %25 = and i32 %24, 192                          ; [#uses = 1]
  %26 = icmp eq i32 %25, 128                      ; [#uses = 1]
  br label %andandend6

bounds.fail10:                                    ; preds = %andand5
  call void @_d_arraybounds_index({ i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i32 1554, i64 %18, i64 %.len7) #5
  unreachable

andandend6:                                       ; preds = %bounds.ok9, %andandend
  %andandval12 = phi i1 [ false, %andandend ], [ %26, %bounds.ok9 ] ; [#uses = 1, type = i1]
  br i1 %andandval12, label %dowhile, label %enddowhile

enddowhile:                                       ; preds = %andandend6
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std3utf12UTFException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %std.utf.UTFException* ; [#uses = 6]
  %vtbl = getelementptr inbounds %std.utf.UTFException, %std.utf.UTFException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [11 x i8*]**]
  store [11 x i8*]* @_D3std3utf12UTFException6__vtblZ, [11 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %std.utf.UTFException, %std.utf.UTFException* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %27 = getelementptr inbounds %std.utf.UTFException, %std.utf.UTFException* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %28 = getelementptr inbounds %std.utf.UTFException, %std.utf.UTFException* @_D3std3utf12UTFException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %29 = bitcast { i64, i8* }* %27 to i8*          ; [#uses = 1]
  %30 = bitcast { i64, i8* }* %28 to i8*          ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 104, i1 false)
  %31 = load { i64, i8* }, { i64, i8* }* %msg, align 8 ; [#uses = 1]
  %32 = load i64, i64* %i, align 8                ; [#uses = 1]
  %33 = call %std.utf.UTFException* @_D3std3utf12UTFException6__ctorMFNaNbNfAyamQemC6object9ThrowableZCQCmQClQCk(%std.utf.UTFException* nonnull returned %.newclass_gc, { i64, i8* } %31, i64 %32, { i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i64 1556, %object.Throwable* null) #1 ; [#uses = 0]
  %34 = getelementptr inbounds %std.utf.UTFException, %std.utf.UTFException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [11 x i8*]**]
  %35 = load [11 x i8*]*, [11 x i8*]** %34, align 8 ; [#uses = 1]
  %"setSequence@vtbl" = getelementptr inbounds [11 x i8*], [11 x i8*]* %35, i32 0, i32 10 ; [#uses = 1, type = i8**]
  %36 = load i8*, i8** %"setSequence@vtbl", align 8 ; [#uses = 1]
  %setSequence = bitcast i8* %36 to %std.utf.UTFException* (%std.utf.UTFException*, { i64, i32* })* ; [#uses = 1]
  %37 = load i64, i64* %i, align 8                ; [#uses = 3]
  %bounds.cmp.up = icmp ule i64 %37, 4            ; [#uses = 1]
  br i1 %bounds.cmp.up, label %bounds.ok13, label %bounds.fail14

bounds.ok13:                                      ; preds = %enddowhile
  %38 = bitcast [4 x i32]* %sequence to i32*      ; [#uses = 1]
  %lowerbound = getelementptr inbounds i32, i32* %38, i64 0 ; [#uses = 1, type = i32*]
  %39 = sub i64 %37, 0                            ; [#uses = 1]
  %40 = insertvalue { i64, i32* } undef, i64 %39, 0 ; [#uses = 1]
  %41 = insertvalue { i64, i32* } %40, i32* %lowerbound, 1 ; [#uses = 1]
  %42 = call %std.utf.UTFException* %setSequence(%std.utf.UTFException* nonnull %.newclass_gc, { i64, i32* } %41) ; [#uses = 1]
  ret %std.utf.UTFException* %42

bounds.fail14:                                    ; preds = %enddowhile
  call void @_d_arraybounds_slice({ i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i32 1556, i64 0, i64 %37, i64 4) #5
  unreachable
}

; [#uses = 3]
; Function Attrs: uwtable
define weak_odr %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ11outOfBoundsMFNaNbZCQFhQFg12UTFException(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.decodeImpl* ; [#uses = 1]
  %pstr = getelementptr inbounds %nest.decodeImpl, %nest.decodeImpl* %1, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %2 = bitcast i8* %.nest_arg to %nest.decodeImpl* ; [#uses = 1]
  %length = getelementptr inbounds %nest.decodeImpl, %nest.decodeImpl* %2, i32 0, i32 1 ; [#uses = 1, type = i64*]
  %3 = load i64, i64* %length, align 8            ; [#uses = 1]
  %4 = load i8*, i8** %pstr, align 8              ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %4, i64 0 ; [#uses = 1, type = i8*]
  %5 = sub i64 %3, 0                              ; [#uses = 1]
  %6 = insertvalue { i64, i8* } undef, i64 %5, 0  ; [#uses = 1]
  %7 = insertvalue { i64, i8* } %6, i8* %lowerbound, 1 ; [#uses = 1]
  %8 = call %std.utf.UTFException* @_D3std3utf__T10decodeImplVbi1VEQBd8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDrFKQjKmZ__T9exceptionTQBcZQpFNaNbNfQBpQDsZCQFvQFu12UTFException({ i64, i8* } %7, { i64, i8* } { i64 44, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.26, i32 0, i32 0) }) #1 ; [#uses = 1]
  ret %std.utf.UTFException* %8
}

; [#uses = 1]
declare %std.utf.UTFException* @_D3std3utf12UTFException6__ctorMFNaNbNfAyamQemC6object9ThrowableZCQCmQClQCk(%std.utf.UTFException* nonnull returned, { i64, i8* }, i64, { i64, i8* }, i64, %object.Throwable*) #1

; [#uses = 0]
declare %std.utf.UTFException* @_D3std3utf12UTFException11setSequenceMFNaNbNiNlNjNfAkXCQCbQCaQBz(%std.utf.UTFException* nonnull, { i64, i32* }) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std5array__T8AppenderTAyaZQo__T3putTwZQhMFNaNfwZv(%"std.array.Appender!string.Appender"* nonnull %.this_arg, i32 %item_arg) #0 {
  %item = alloca i32, align 4                     ; [#uses = 2, size/byte = 4]
  %encoded = alloca [4 x i8], align 1             ; [#uses = 4, size/byte = 4]
  %len = alloca i64, align 8                      ; [#uses = 2, size/byte = 8]
  store i32 %item_arg, i32* %item, align 4
  %1 = bitcast [4 x i8]* %encoded to i8*          ; [#uses = 1]
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 -1, i64 4, i1 false)
  %2 = bitcast [4 x i8]* %encoded to i8*          ; [#uses = 1]
  %3 = insertvalue { i64, i8* } { i64 4, i8* undef }, i8* %2, 1 ; [#uses = 0]
  %4 = load i32, i32* %item, align 4              ; [#uses = 1]
  %5 = call i64 @_D3std3utf__T6encodeVEQu8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0ZQDdFNaNfJG4awZm([4 x i8]* dereferenceable(4) %encoded, i32 %4) #1 ; [#uses = 1]
  store i64 %5, i64* %len, align 8
  %6 = load i64, i64* %len, align 8               ; [#uses = 3]
  %bounds.cmp.up = icmp ule i64 %6, 4             ; [#uses = 1]
  br i1 %bounds.cmp.up, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %0
  %7 = bitcast [4 x i8]* %encoded to i8*          ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %7, i64 0 ; [#uses = 1, type = i8*]
  %8 = sub i64 %6, 0                              ; [#uses = 1]
  %9 = insertvalue { i64, i8* } undef, i64 %8, 0  ; [#uses = 1]
  %10 = insertvalue { i64, i8* } %9, i8* %lowerbound, 1 ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAyaZQo__T3putTAaZQiMFNaNbNfQnZv(%"std.array.Appender!string.Appender"* nonnull %.this_arg, { i64, i8* } %10) #1
  ret void

bounds.fail:                                      ; preds = %0
  call void @_d_arraybounds_slice({ i64, i8* } { i64 51, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.30, i32 0, i32 0) }, i32 3683, i64 0, i64 %6, i64 4) #5
  unreachable
}

; [#uses = 9]
; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr i64 @_D3std3utf__T6encodeVEQu8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0ZQDdFNaNfJG4awZm([4 x i8]* dereferenceable(4) %buf, i32 %c_arg) #0 {
  %c = alloca i32, align 4                        ; [#uses = 26, size/byte = 4]
  store i32 %c_arg, i32* %c, align 4
  %1 = bitcast [4 x i8]* %buf to i8*              ; [#uses = 1]
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 -1, i64 4, i1 false)
  %2 = bitcast [4 x i8]* %buf to i8*              ; [#uses = 1]
  %3 = insertvalue { i64, i8* } { i64 4, i8* undef }, i8* %2, 1 ; [#uses = 0]
  %4 = load i32, i32* %c, align 4                 ; [#uses = 1]
  %5 = icmp ule i32 %4, 127                       ; [#uses = 1]
  br i1 %5, label %if, label %endif

if:                                               ; preds = %0
  %6 = load i32, i32* %c, align 4                 ; [#uses = 1]
  %7 = call zeroext i1 @_D3std3utf12isValidDcharFNaNbNiNfwZb(i32 %6) #1 ; [#uses = 1]
  br i1 %7, label %assertPassed, label %assertFailed

assertPassed:                                     ; preds = %if
  %8 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i64 0 ; [#uses = 1, type = i8*]
  %9 = load i32, i32* %c, align 4                 ; [#uses = 1]
  %10 = trunc i32 %9 to i8                        ; [#uses = 1]
  store i8 %10, i8* %8, align 1
  ret i64 1

dummy.afterreturn:                                ; No predecessors!
  br label %endif

assertFailed:                                     ; preds = %if
  call void @_d_assert({ i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i32 2328) #5
  unreachable

endif:                                            ; preds = %dummy.afterreturn, %0
  %11 = load i32, i32* %c, align 4                ; [#uses = 1]
  %12 = icmp ule i32 %11, 2047                    ; [#uses = 1]
  br i1 %12, label %if1, label %endif2

if1:                                              ; preds = %endif
  %13 = load i32, i32* %c, align 4                ; [#uses = 1]
  %14 = call zeroext i1 @_D3std3utf12isValidDcharFNaNbNiNfwZb(i32 %13) #1 ; [#uses = 1]
  br i1 %14, label %assertPassed3, label %assertFailed4

assertPassed3:                                    ; preds = %if1
  %15 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i64 0 ; [#uses = 1, type = i8*]
  %16 = load i32, i32* %c, align 4                ; [#uses = 1]
  %17 = lshr i32 %16, 6                           ; [#uses = 1]
  %18 = or i32 192, %17                           ; [#uses = 1]
  %19 = trunc i32 %18 to i8                       ; [#uses = 1]
  store i8 %19, i8* %15, align 1
  %20 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i64 1 ; [#uses = 1, type = i8*]
  %21 = load i32, i32* %c, align 4                ; [#uses = 1]
  %22 = and i32 %21, 63                           ; [#uses = 1]
  %23 = or i32 128, %22                           ; [#uses = 1]
  %24 = trunc i32 %23 to i8                       ; [#uses = 1]
  store i8 %24, i8* %20, align 1
  ret i64 2

dummy.afterreturn5:                               ; No predecessors!
  br label %endif2

assertFailed4:                                    ; preds = %if1
  call void @_d_assert({ i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i32 2334) #5
  unreachable

endif2:                                           ; preds = %dummy.afterreturn5, %endif
  %25 = load i32, i32* %c, align 4                ; [#uses = 1]
  %26 = icmp ule i32 %25, 65535                   ; [#uses = 1]
  br i1 %26, label %if6, label %endif7

if6:                                              ; preds = %endif2
  %27 = load i32, i32* %c, align 4                ; [#uses = 1]
  %28 = icmp ule i32 55296, %27                   ; [#uses = 1]
  br i1 %28, label %andand, label %andandend

andand:                                           ; preds = %if6
  %29 = load i32, i32* %c, align 4                ; [#uses = 1]
  %30 = icmp ule i32 %29, 57343                   ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %if6
  %andandval = phi i1 [ false, %if6 ], [ %30, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %if8, label %endif9

if8:                                              ; preds = %andandend
  %31 = load i32, i32* %c, align 4                ; [#uses = 1]
  %32 = call i32 @_D3std3utf__T13_utfExceptionVEQBc8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0ZQDmFNaNfQCiwZw({ i64, i8* } { i64 40, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.31, i32 0, i32 0) }, i32 %31) #1 ; [#uses = 1]
  store i32 %32, i32* %c, align 4
  br label %endif9

endif9:                                           ; preds = %if8, %andandend
  %33 = load i32, i32* %c, align 4                ; [#uses = 1]
  %34 = call zeroext i1 @_D3std3utf12isValidDcharFNaNbNiNfwZb(i32 %33) #1 ; [#uses = 1]
  br i1 %34, label %assertPassed10, label %assertFailed11

assertPassed10:                                   ; preds = %endif9
  br label %label.L3

label.L3:                                         ; preds = %assertPassed18, %assertPassed10
  %35 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i64 0 ; [#uses = 1, type = i8*]
  %36 = load i32, i32* %c, align 4                ; [#uses = 1]
  %37 = lshr i32 %36, 12                          ; [#uses = 1]
  %38 = or i32 224, %37                           ; [#uses = 1]
  %39 = trunc i32 %38 to i8                       ; [#uses = 1]
  store i8 %39, i8* %35, align 1
  %40 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i64 1 ; [#uses = 1, type = i8*]
  %41 = load i32, i32* %c, align 4                ; [#uses = 1]
  %42 = lshr i32 %41, 6                           ; [#uses = 1]
  %43 = and i32 %42, 63                           ; [#uses = 1]
  %44 = or i32 128, %43                           ; [#uses = 1]
  %45 = trunc i32 %44 to i8                       ; [#uses = 1]
  store i8 %45, i8* %40, align 1
  %46 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i64 2 ; [#uses = 1, type = i8*]
  %47 = load i32, i32* %c, align 4                ; [#uses = 1]
  %48 = and i32 %47, 63                           ; [#uses = 1]
  %49 = or i32 128, %48                           ; [#uses = 1]
  %50 = trunc i32 %49 to i8                       ; [#uses = 1]
  store i8 %50, i8* %46, align 1
  ret i64 3

dummy.afterreturn12:                              ; No predecessors!
  br label %endif7

assertFailed11:                                   ; preds = %endif9
  call void @_d_assert({ i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i32 2344) #5
  unreachable

endif7:                                           ; preds = %dummy.afterreturn12, %endif2
  %51 = load i32, i32* %c, align 4                ; [#uses = 1]
  %52 = icmp ule i32 %51, 1114111                 ; [#uses = 1]
  br i1 %52, label %if13, label %endif14

if13:                                             ; preds = %endif7
  %53 = load i32, i32* %c, align 4                ; [#uses = 1]
  %54 = call zeroext i1 @_D3std3utf12isValidDcharFNaNbNiNfwZb(i32 %53) #1 ; [#uses = 1]
  br i1 %54, label %assertPassed15, label %assertFailed16

assertPassed15:                                   ; preds = %if13
  %55 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i64 0 ; [#uses = 1, type = i8*]
  %56 = load i32, i32* %c, align 4                ; [#uses = 1]
  %57 = lshr i32 %56, 18                          ; [#uses = 1]
  %58 = or i32 240, %57                           ; [#uses = 1]
  %59 = trunc i32 %58 to i8                       ; [#uses = 1]
  store i8 %59, i8* %55, align 1
  %60 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i64 1 ; [#uses = 1, type = i8*]
  %61 = load i32, i32* %c, align 4                ; [#uses = 1]
  %62 = lshr i32 %61, 12                          ; [#uses = 1]
  %63 = and i32 %62, 63                           ; [#uses = 1]
  %64 = or i32 128, %63                           ; [#uses = 1]
  %65 = trunc i32 %64 to i8                       ; [#uses = 1]
  store i8 %65, i8* %60, align 1
  %66 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i64 2 ; [#uses = 1, type = i8*]
  %67 = load i32, i32* %c, align 4                ; [#uses = 1]
  %68 = lshr i32 %67, 6                           ; [#uses = 1]
  %69 = and i32 %68, 63                           ; [#uses = 1]
  %70 = or i32 128, %69                           ; [#uses = 1]
  %71 = trunc i32 %70 to i8                       ; [#uses = 1]
  store i8 %71, i8* %66, align 1
  %72 = getelementptr inbounds [4 x i8], [4 x i8]* %buf, i32 0, i64 3 ; [#uses = 1, type = i8*]
  %73 = load i32, i32* %c, align 4                ; [#uses = 1]
  %74 = and i32 %73, 63                           ; [#uses = 1]
  %75 = or i32 128, %74                           ; [#uses = 1]
  %76 = trunc i32 %75 to i8                       ; [#uses = 1]
  store i8 %76, i8* %72, align 1
  ret i64 4

dummy.afterreturn17:                              ; No predecessors!
  br label %endif14

assertFailed16:                                   ; preds = %if13
  call void @_d_assert({ i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i32 2353) #5
  unreachable

endif14:                                          ; preds = %dummy.afterreturn17, %endif7
  %77 = load i32, i32* %c, align 4                ; [#uses = 1]
  %78 = call zeroext i1 @_D3std3utf12isValidDcharFNaNbNiNfwZb(i32 %77) #1 ; [#uses = 1]
  %79 = icmp eq i1 %78, false                     ; [#uses = 1]
  br i1 %79, label %assertPassed18, label %assertFailed19

assertPassed18:                                   ; preds = %endif14
  %80 = load i32, i32* %c, align 4                ; [#uses = 1]
  %81 = call i32 @_D3std3utf__T13_utfExceptionVEQBc8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0ZQDmFNaNfQCiwZw({ i64, i8* } { i64 39, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.32, i32 0, i32 0) }, i32 %80) #1 ; [#uses = 1]
  store i32 %81, i32* %c, align 4
  br label %label.L3

assertFailed19:                                   ; preds = %endif14
  call void @_d_assert({ i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i32 2361) #5
  unreachable
}

; [#uses = 3]
; Function Attrs: uwtable
define weak_odr void @_D3std5array__T8AppenderTAyaZQo__T3putTAaZQiMFNaNbNfQnZv(%"std.array.Appender!string.Appender"* nonnull %.this_arg, { i64, i8* } %items_arg) #0 {
  %items = alloca { i64, i8* }, align 8           ; [#uses = 4, size/byte = 16]
  %.frame = alloca %nest.put, align 8             ; [#uses = 2, size/byte = 8]
  %bigData = alloca { i64, i8* }, align 8         ; [#uses = 7, size/byte = 16]
  %len = alloca i64, align 8                      ; [#uses = 2, size/byte = 8]
  %newlen = alloca i64, align 8                   ; [#uses = 2, size/byte = 8]
  store { i64, i8* } %items_arg, { i64, i8* }* %items, align 8
  %this = getelementptr inbounds %nest.put, %nest.put* %.frame, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender"**]
  store %"std.array.Appender!string.Appender"* %.this_arg, %"std.array.Appender!string.Appender"** %this, align 8
  %1 = bitcast %nest.put* %.frame to i8*          ; [#uses = 1]
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %items, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %2, align 8              ; [#uses = 1]
  %3 = call { i64, i8* } @_D3std5array__T8AppenderTAyaZQo__T3putTAaZQiMFQhZ10bigDataFunMFNaNbNfmZQBg(i8* nonnull %1, i64 %.len) #0 ; [#uses = 2]
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %bigData, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = extractvalue { i64, i8* } %3, 0        ; [#uses = 1]
  store i64 %.len1, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %bigData, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = extractvalue { i64, i8* } %3, 1         ; [#uses = 1]
  store i8* %.ptr, i8** %5, align 8
  %6 = getelementptr inbounds %"std.array.Appender!string.Appender", %"std.array.Appender!string.Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender.Data"**]
  %7 = load %"std.array.Appender!string.Appender.Data"*, %"std.array.Appender!string.Appender.Data"** %6, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds %"std.array.Appender!string.Appender.Data", %"std.array.Appender!string.Appender.Data"* %7, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }*]
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %8, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len2 = load i64, i64* %9, align 8             ; [#uses = 1]
  store i64 %.len2, i64* %len, align 8
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %bigData, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len3 = load i64, i64* %10, align 8            ; [#uses = 1]
  store i64 %.len3, i64* %newlen, align 8
  %11 = load i64, i64* %len, align 8              ; [#uses = 4]
  %12 = load i64, i64* %newlen, align 8           ; [#uses = 4]
  %13 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %bigData, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len4 = load i64, i64* %13, align 8            ; [#uses = 2]
  %bounds.cmp.up = icmp ule i64 %12, %.len4       ; [#uses = 1]
  %bounds.cmp.lo = icmp ule i64 %11, %12          ; [#uses = 1]
  %14 = and i1 %bounds.cmp.up, %bounds.cmp.lo     ; [#uses = 1]
  br i1 %14, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %0
  %15 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %bigData, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr5 = load i8*, i8** %15, align 8            ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr5, i64 %11 ; [#uses = 2, type = i8*]
  %16 = sub i64 %12, %11                          ; [#uses = 2]
  %17 = insertvalue { i64, i8* } undef, i64 %16, 0 ; [#uses = 1]
  %18 = insertvalue { i64, i8* } %17, i8* %lowerbound, 1 ; [#uses = 0]
  %19 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %items, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr6 = load i8*, i8** %19, align 8            ; [#uses = 2]
  %20 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %items, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len7 = load i64, i64* %20, align 8            ; [#uses = 2]
  %21 = insertvalue { i64, i8* } undef, i64 %.len7, 0 ; [#uses = 1]
  %22 = insertvalue { i64, i8* } %21, i8* %.ptr6, 1 ; [#uses = 0]
  call void @_d_array_slice_copy(i8* nocapture %lowerbound, i64 %16, i8* nocapture %.ptr6, i64 %.len7, i64 1) #2
  %23 = getelementptr inbounds %"std.array.Appender!string.Appender", %"std.array.Appender!string.Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender.Data"**]
  %24 = load %"std.array.Appender!string.Appender.Data"*, %"std.array.Appender!string.Appender.Data"** %23, align 8 ; [#uses = 1]
  %25 = getelementptr inbounds %"std.array.Appender!string.Appender.Data", %"std.array.Appender!string.Appender.Data"* %24, i32 0, i32 1 ; [#uses = 2, type = { i64, i8* }*]
  %26 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %25, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %27 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %bigData, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len8 = load i64, i64* %27, align 8            ; [#uses = 1]
  store i64 %.len8, i64* %26, align 8
  %28 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %25, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %29 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %bigData, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr9 = load i8*, i8** %29, align 8            ; [#uses = 1]
  store i8* %.ptr9, i8** %28, align 8
  ret void

bounds.fail:                                      ; preds = %0
  call void @_d_arraybounds_slice({ i64, i8* } { i64 51, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.30, i32 0, i32 0) }, i32 3750, i64 %11, i64 %12, i64 %.len4) #5
  unreachable
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr i32 @_D3std3utf__T13_utfExceptionVEQBc8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0ZQDmFNaNfQCiwZw({ i64, i8* } %msg_arg, i32 %c_arg) #0 {
  %msg = alloca { i64, i8* }, align 8             ; [#uses = 2, size/byte = 16]
  %c = alloca i32, align 4                        ; [#uses = 2, size/byte = 4]
  %arrayliteral = alloca [1 x i32], align 4       ; [#uses = 2, size/byte = 4]
  store { i64, i8* } %msg_arg, { i64, i8* }* %msg, align 8
  store i32 %c_arg, i32* %c, align 4
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std3utf12UTFException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %std.utf.UTFException* ; [#uses = 6]
  %vtbl = getelementptr inbounds %std.utf.UTFException, %std.utf.UTFException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [11 x i8*]**]
  store [11 x i8*]* @_D3std3utf12UTFException6__vtblZ, [11 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %std.utf.UTFException, %std.utf.UTFException* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %1 = getelementptr inbounds %std.utf.UTFException, %std.utf.UTFException* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %2 = getelementptr inbounds %std.utf.UTFException, %std.utf.UTFException* @_D3std3utf12UTFException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %3 = bitcast { i64, i8* }* %1 to i8*            ; [#uses = 1]
  %4 = bitcast { i64, i8* }* %2 to i8*            ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 104, i1 false)
  %5 = load { i64, i8* }, { i64, i8* }* %msg, align 8 ; [#uses = 1]
  %6 = call %std.utf.UTFException* @_D3std3utf12UTFException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCnQCmQCl(%std.utf.UTFException* nonnull returned %.newclass_gc, { i64, i8* } %5, { i64, i8* } { i64 49, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.27, i32 0, i32 0) }, i64 2311, %object.Throwable* null) #1 ; [#uses = 0]
  %7 = getelementptr inbounds %std.utf.UTFException, %std.utf.UTFException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [11 x i8*]**]
  %8 = load [11 x i8*]*, [11 x i8*]** %7, align 8 ; [#uses = 1]
  %"setSequence@vtbl" = getelementptr inbounds [11 x i8*], [11 x i8*]* %8, i32 0, i32 10 ; [#uses = 1, type = i8**]
  %9 = load i8*, i8** %"setSequence@vtbl", align 8 ; [#uses = 1]
  %setSequence = bitcast i8* %9 to %std.utf.UTFException* (%std.utf.UTFException*, { i64, i32* })* ; [#uses = 1]
  %10 = getelementptr inbounds [1 x i32], [1 x i32]* %arrayliteral, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %11 = load i32, i32* %c, align 4                ; [#uses = 1]
  store i32 %11, i32* %10, align 4
  %12 = bitcast [1 x i32]* %arrayliteral to i32*  ; [#uses = 1]
  %13 = insertvalue { i64, i32* } { i64 1, i32* undef }, i32* %12, 1 ; [#uses = 1]
  %14 = call %std.utf.UTFException* %setSequence(%std.utf.UTFException* nonnull %.newclass_gc, { i64, i32* } %13) ; [#uses = 1]
  %15 = bitcast %std.utf.UTFException* %14 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %15) #5
  unreachable
}

; [#uses = 1]
declare %std.utf.UTFException* @_D3std3utf12UTFException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCnQCmQCl(%std.utf.UTFException* nonnull returned, { i64, i8* }, { i64, i8* }, i64, %object.Throwable*) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std5array__T8AppenderTAyaZQo__T3putTAaZQiMFQhZ10bigDataFunMFNaNbNfmZQBg(i8* nonnull %.nest_arg, i64 %extra_arg) #0 {
  %1 = alloca i64, align 8                        ; [#uses = 2, size/byte = 8]
  %.frame = alloca %nest.bigDataFun, align 8      ; [#uses = 4, size/byte = 16]
  store i64 %extra_arg, i64* %1, align 8
  %2 = bitcast i8* %.nest_arg to %nest.put*       ; [#uses = 1]
  %3 = getelementptr inbounds %nest.bigDataFun, %nest.bigDataFun* %.frame, i32 0, i32 0 ; [#uses = 1, type = %nest.put**]
  store %nest.put* %2, %nest.put** %3, align 8
  %extra = getelementptr inbounds %nest.bigDataFun, %nest.bigDataFun* %.frame, i32 0, i32 1 ; [#uses = 2, type = i64*]
  %4 = bitcast i64* %extra to i8*                 ; [#uses = 1]
  %5 = bitcast i64* %1 to i8*                     ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 8, i1 false)
  %6 = getelementptr inbounds %nest.bigDataFun, %nest.bigDataFun* %.frame, i32 0, i32 0 ; [#uses = 1, type = %nest.put**]
  %.frame.put = load %nest.put*, %nest.put** %6, align 8 ; [#uses = 1]
  %this = getelementptr inbounds %nest.put, %nest.put* %.frame.put, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender"**]
  %7 = load %"std.array.Appender!string.Appender"*, %"std.array.Appender!string.Appender"** %this, align 8 ; [#uses = 1]
  %8 = load i64, i64* %extra, align 8             ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAyaZQo13ensureAddableMFNaNbNfmZv(%"std.array.Appender!string.Appender"* nonnull %7, i64 %8) #1
  %9 = bitcast %nest.bigDataFun* %.frame to i8*   ; [#uses = 1]
  %10 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %9, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %10, { i64, i8* } (i8*)* @_D3std5array__T8AppenderTAyaZQo__T3putTAaZQiMFQhZ10bigDataFunMFmZ9__lambda2MFNaNbNiNeZQBv, 1 ; [#uses = 2]
  %.funcptr = extractvalue { i8*, { i64, i8* } (i8*)* } %.func, 1 ; [#uses = 1]
  %.ptr = extractvalue { i8*, { i64, i8* } (i8*)* } %.func, 0 ; [#uses = 1]
  %11 = call { i64, i8* } %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  ret { i64, i8* } %11
}

; [#uses = 2]
declare void @_D3std5array__T8AppenderTAyaZQo13ensureAddableMFNaNbNfmZv(%"std.array.Appender!string.Appender"* nonnull, i64) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std5array__T8AppenderTAyaZQo__T3putTAaZQiMFQhZ10bigDataFunMFmZ9__lambda2MFNaNbNiNeZQBv(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.bigDataFun* ; [#uses = 1]
  %2 = getelementptr inbounds %nest.bigDataFun, %nest.bigDataFun* %1, i32 0, i32 0 ; [#uses = 1, type = %nest.put**]
  %.frame.put = load %nest.put*, %nest.put** %2, align 8 ; [#uses = 1]
  %this = getelementptr inbounds %nest.put, %nest.put* %.frame.put, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender"**]
  %3 = load %"std.array.Appender!string.Appender"*, %"std.array.Appender!string.Appender"** %this, align 8 ; [#uses = 1]
  %4 = getelementptr inbounds %"std.array.Appender!string.Appender", %"std.array.Appender!string.Appender"* %3, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender.Data"**]
  %5 = load %"std.array.Appender!string.Appender.Data"*, %"std.array.Appender!string.Appender.Data"** %4, align 8 ; [#uses = 1]
  %6 = getelementptr inbounds %"std.array.Appender!string.Appender.Data", %"std.array.Appender!string.Appender.Data"* %5, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }*]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %6, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %7, align 8              ; [#uses = 1]
  %8 = bitcast i8* %.nest_arg to %nest.bigDataFun* ; [#uses = 1]
  %9 = getelementptr inbounds %nest.bigDataFun, %nest.bigDataFun* %8, i32 0, i32 0 ; [#uses = 1, type = %nest.put**]
  %.frame.put1 = load %nest.put*, %nest.put** %9, align 8 ; [#uses = 1]
  %this2 = getelementptr inbounds %nest.put, %nest.put* %.frame.put1, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender"**]
  %10 = load %"std.array.Appender!string.Appender"*, %"std.array.Appender!string.Appender"** %this2, align 8 ; [#uses = 1]
  %11 = getelementptr inbounds %"std.array.Appender!string.Appender", %"std.array.Appender!string.Appender"* %10, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender.Data"**]
  %12 = load %"std.array.Appender!string.Appender.Data"*, %"std.array.Appender!string.Appender.Data"** %11, align 8 ; [#uses = 1]
  %13 = getelementptr inbounds %"std.array.Appender!string.Appender.Data", %"std.array.Appender!string.Appender.Data"* %12, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }*]
  %14 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %13, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %14, align 8             ; [#uses = 1]
  %15 = bitcast i8* %.nest_arg to %nest.bigDataFun* ; [#uses = 1]
  %extra = getelementptr inbounds %nest.bigDataFun, %nest.bigDataFun* %15, i32 0, i32 1 ; [#uses = 1, type = i64*]
  %16 = load i64, i64* %extra, align 8            ; [#uses = 1]
  %17 = add i64 %.len, %16                        ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr, i64 0 ; [#uses = 1, type = i8*]
  %18 = sub i64 %17, 0                            ; [#uses = 1]
  %19 = insertvalue { i64, i8* } undef, i64 %18, 0 ; [#uses = 1]
  %20 = insertvalue { i64, i8* } %19, i8* %lowerbound, 1 ; [#uses = 1]
  ret { i64, i8* } %20
}

; [#uses = 1]
; Function Attrs: uwtable
declare void @_d_array_slice_copy(i8* nocapture, i64, i8* nocapture, i64, i64) #2

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std5range10primitives__T4saveTaZQiFNaNbNdNiNfNkMANgaZQf({ i64, i8* } %a_arg) #0 {
  %a = alloca { i64, i8* }, align 8               ; [#uses = 3, size/byte = 16]
  store { i64, i8* } %a_arg, { i64, i8* }* %a, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %a, align 8 ; [#uses = 0]
  %2 = load { i64, i8* }, { i64, i8* }* %a, align 8 ; [#uses = 1]
  ret { i64, i8* } %2
}

; [#uses = 0]
; Function Attrs: uwtable
define internal zeroext i1 @_D3std6format8internal5write__T8getWidthTAyaZQoFQhZ__T9__lambda2TwZQnFNaNbNiNfwZb(i32 %a_arg) #0 {
  %a = alloca i32, align 4                        ; [#uses = 2, size/byte = 4]
  store i32 %a_arg, i32* %a, align 4
  %1 = load i32, i32* %a, align 4                 ; [#uses = 1]
  %2 = icmp ule i32 %1, 127                       ; [#uses = 1]
  ret i1 %2
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T5doPutTSQBh5array__T8AppenderTAyaZQoTQhZQBoFNaNbNfKQBsKQzZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, { i64, i8* }* dereferenceable(16) %e) #0 {
  %1 = load { i64, i8* }, { i64, i8* }* %e, align 8 ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAyaZQo__T3putTQoZQiMFNaNbNfQBbZv(%"std.array.Appender!string.Appender"* nonnull %r, { i64, i8* } %1) #1
  ret void
}

; [#uses = 1]
declare void @_D3std5array__T8AppenderTAyaZQo__T3putTQoZQiMFNaNbNfQBbZv(%"std.array.Appender!string.Appender"* nonnull, { i64, i8* }) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T5doPutTSQBh5array__T8AppenderTAyaZQoTxaZQBoFNaNbNfKQBsKxaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, i8* dereferenceable(1) %e) #0 {
  %1 = load i8, i8* %e, align 1                   ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAyaZQo__T3putTxaZQiMFNaNbNfxaZv(%"std.array.Appender!string.Appender"* nonnull %r, i8 zeroext %1) #1
  ret void
}

; [#uses = 1]
declare void @_D3std5array__T8AppenderTAyaZQo__T3putTxaZQiMFNaNbNfxaZv(%"std.array.Appender!string.Appender"* nonnull, i8 zeroext) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T5doPutTSQBh5array__T8AppenderTAyaZQoTaZQBnFNaNbNfKQBrKaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, i8* dereferenceable(1) %e) #0 {
  %1 = load i8, i8* %e, align 1                   ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAyaZQo__T3putTaZQhMFNaNbNfaZv(%"std.array.Appender!string.Appender"* nonnull %r, i8 zeroext %1) #1
  ret void
}

; [#uses = 1]
declare void @_D3std5array__T8AppenderTAyaZQo__T3putTaZQhMFNaNbNfaZv(%"std.array.Appender!string.Appender"* nonnull, i8 zeroext) #1

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T5doPutTSQBh5array__T8AppenderTAyaZQoTAaZQBoFNaNbNfKQBsKQsZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, { i64, i8* }* dereferenceable(16) %e) #0 {
  %1 = load { i64, i8* }, { i64, i8* }* %e, align 8 ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAyaZQo__T3putTAaZQiMFNaNbNfQnZv(%"std.array.Appender!string.Appender"* nonnull %r, { i64, i8* } %1) #0
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T5doPutTSQBh5array__T8AppenderTAyaZQoTxwZQBoFNaNfKQBqKxwZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, i32* dereferenceable(4) %e) #0 {
  %1 = load i32, i32* %e, align 4                 ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAyaZQo__T3putTxwZQiMFNaNfxwZv(%"std.array.Appender!string.Appender"* nonnull %r, i32 %1) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std5array__T8AppenderTAyaZQo__T3putTxwZQiMFNaNfxwZv(%"std.array.Appender!string.Appender"* nonnull %.this_arg, i32 %item_arg) #0 {
  %item = alloca i32, align 4                     ; [#uses = 2, size/byte = 4]
  %encoded = alloca [4 x i8], align 1             ; [#uses = 4, size/byte = 4]
  %len = alloca i64, align 8                      ; [#uses = 2, size/byte = 8]
  store i32 %item_arg, i32* %item, align 4
  %1 = bitcast [4 x i8]* %encoded to i8*          ; [#uses = 1]
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 -1, i64 4, i1 false)
  %2 = bitcast [4 x i8]* %encoded to i8*          ; [#uses = 1]
  %3 = insertvalue { i64, i8* } { i64 4, i8* undef }, i8* %2, 1 ; [#uses = 0]
  %4 = load i32, i32* %item, align 4              ; [#uses = 1]
  %5 = call i64 @_D3std3utf__T6encodeVEQu8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0ZQDdFNaNfJG4awZm([4 x i8]* dereferenceable(4) %encoded, i32 %4) #0 ; [#uses = 1]
  store i64 %5, i64* %len, align 8
  %6 = load i64, i64* %len, align 8               ; [#uses = 3]
  %bounds.cmp.up = icmp ule i64 %6, 4             ; [#uses = 1]
  br i1 %bounds.cmp.up, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %0
  %7 = bitcast [4 x i8]* %encoded to i8*          ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %7, i64 0 ; [#uses = 1, type = i8*]
  %8 = sub i64 %6, 0                              ; [#uses = 1]
  %9 = insertvalue { i64, i8* } undef, i64 %8, 0  ; [#uses = 1]
  %10 = insertvalue { i64, i8* } %9, i8* %lowerbound, 1 ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAyaZQo__T3putTAaZQiMFNaNbNfQnZv(%"std.array.Appender!string.Appender"* nonnull %.this_arg, { i64, i8* } %10) #0
  ret void

bounds.fail:                                      ; preds = %0
  call void @_d_arraybounds_slice({ i64, i8* } { i64 51, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.30, i32 0, i32 0) }, i32 3683, i64 0, i64 %6, i64 4) #5
  unreachable
}

; [#uses = 0]
; Function Attrs: uwtable
define internal zeroext i1 @_D3std6format8internal5write__T20formatValueImplUlongTSQCb5array__T8AppenderTAyaZQoTaZQCdFKQBlmIbMKxSQDvQDu4spec__T10FormatSpecTaZQpZ__T10__lambda16TwZQpFNaNbNiNfwZb(i32 %a_arg) #0 {
  %a = alloca i32, align 4                        ; [#uses = 2, size/byte = 4]
  store i32 %a_arg, i32* %a, align 4
  %1 = load i32, i32* %a, align 4                 ; [#uses = 1]
  %2 = icmp eq i32 %1, 48                         ; [#uses = 1]
  ret i1 %2
}

; [#uses = 0]
; Function Attrs: uwtable
define internal zeroext i1 @_D3std6format8internal5write__T20formatValueImplUlongTSQCb5array__T8AppenderTAyaZQoTaZQCdFKQBlmIbMKxSQDvQDu4spec__T10FormatSpecTaZQpZ__T10__lambda17TwZQpFNaNbNiNfwZb(i32 %a_arg) #0 {
  %a = alloca i32, align 4                        ; [#uses = 2, size/byte = 4]
  store i32 %a_arg, i32* %a, align 4
  %1 = load i32, i32* %a, align 4                 ; [#uses = 1]
  %2 = icmp eq i32 %1, 48                         ; [#uses = 1]
  ret i1 %2
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T5doPutTSQBh5array__T8AppenderTAyaZQoTAxaZQBpFNaNbNfKQBtKQtZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, { i64, i8* }* dereferenceable(16) %e) #0 {
  %1 = load { i64, i8* }, { i64, i8* }* %e, align 8 ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAyaZQo__T3putTAxaZQjMFNaNbNfQoZv(%"std.array.Appender!string.Appender"* nonnull %r, { i64, i8* } %1) #1
  ret void
}

; [#uses = 1]
declare void @_D3std5array__T8AppenderTAyaZQo__T3putTAxaZQjMFNaNbNfQoZv(%"std.array.Appender!string.Appender"* nonnull, { i64, i8* }) #1

; [#uses = 4]
; Function Attrs: uwtable
define weak_odr i32 @_D4core8internal5array10comparison__T5__cmpTaZQjFNaNbNiNeMxAaMxQeZi({ i64, i8* } %lhs_arg, { i64, i8* } %rhs_arg) #0 {
  %lhs = alloca { i64, i8* }, align 8             ; [#uses = 3, size/byte = 16]
  %rhs = alloca { i64, i8* }, align 8             ; [#uses = 3, size/byte = 16]
  store { i64, i8* } %lhs_arg, { i64, i8* }* %lhs, align 8
  store { i64, i8* } %rhs_arg, { i64, i8* }* %rhs, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %lhs, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 2]
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %lhs, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %2, align 8              ; [#uses = 2]
  %3 = insertvalue { i64, i8* } undef, i64 %.len, 0 ; [#uses = 1]
  %4 = insertvalue { i64, i8* } %3, i8* %.ptr, 1  ; [#uses = 0]
  %5 = insertvalue { i64, i8* } undef, i64 %.len, 0 ; [#uses = 1]
  %6 = insertvalue { i64, i8* } %5, i8* %.ptr, 1  ; [#uses = 1]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %rhs, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %7, align 8             ; [#uses = 2]
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %rhs, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr2 = load i8*, i8** %8, align 8             ; [#uses = 2]
  %9 = insertvalue { i64, i8* } undef, i64 %.len1, 0 ; [#uses = 1]
  %10 = insertvalue { i64, i8* } %9, i8* %.ptr2, 1 ; [#uses = 0]
  %11 = insertvalue { i64, i8* } undef, i64 %.len1, 0 ; [#uses = 1]
  %12 = insertvalue { i64, i8* } %11, i8* %.ptr2, 1 ; [#uses = 1]
  %13 = call i32 @_D4core8internal6string__T7dstrcmpZQjFNaNbNiNeMxAaMxQeZi({ i64, i8* } %6, { i64, i8* } %12) #1 ; [#uses = 1]
  ret i32 %13
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D4core8internal6string__T7dstrcmpZQjFNaNbNiNeMxAaMxQeZi({ i64, i8* } %s1_arg, { i64, i8* } %s2_arg) #0 {
  %s1 = alloca { i64, i8* }, align 8              ; [#uses = 6, size/byte = 16]
  %s2 = alloca { i64, i8* }, align 8              ; [#uses = 6, size/byte = 16]
  %len = alloca i64, align 8                      ; [#uses = 2, size/byte = 8]
  %condtmp = alloca i64*, align 8                 ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp = alloca i64, align 8           ; [#uses = 2, size/byte = 8]
  %.makelvaluetmp4 = alloca i64, align 8          ; [#uses = 2, size/byte = 8]
  %ret = alloca i32, align 4                      ; [#uses = 5, size/byte = 4]
  store { i64, i8* } %s1_arg, { i64, i8* }* %s1, align 8
  store { i64, i8* } %s2_arg, { i64, i8* }* %s2, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s1, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s2, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %2, align 8             ; [#uses = 1]
  %3 = icmp ule i64 %.len, %.len1                 ; [#uses = 1]
  br i1 %3, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s1, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len2 = load i64, i64* %4, align 8             ; [#uses = 1]
  store i64 %.len2, i64* %.makelvaluetmp, align 8
  store i64* %.makelvaluetmp, i64** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s2, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len3 = load i64, i64* %5, align 8             ; [#uses = 1]
  store i64 %.len3, i64* %.makelvaluetmp4, align 8
  store i64* %.makelvaluetmp4, i64** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %6 = load i64*, i64** %condtmp, align 8         ; [#uses = 1]
  %7 = load i64, i64* %6, align 8                 ; [#uses = 1]
  store i64 %7, i64* %len, align 8
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s1, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %8, align 8              ; [#uses = 1]
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s2, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr5 = load i8*, i8** %9, align 8             ; [#uses = 1]
  %10 = load i64, i64* %len, align 8              ; [#uses = 1]
  %11 = call i32 @memcmp(i8* %.ptr, i8* %.ptr5, i64 %10) #1 ; [#uses = 1]
  store i32 %11, i32* %ret, align 4
  %12 = load i32, i32* %ret, align 4              ; [#uses = 0]
  %13 = load i32, i32* %ret, align 4              ; [#uses = 1]
  %14 = icmp ne i32 %13, 0                        ; [#uses = 1]
  br i1 %14, label %if, label %endif

if:                                               ; preds = %condend
  %15 = load i32, i32* %ret, align 4              ; [#uses = 0]
  %16 = load i32, i32* %ret, align 4              ; [#uses = 1]
  ret i32 %16

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %condend
  %17 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s1, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len6 = load i64, i64* %17, align 8            ; [#uses = 1]
  %18 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s2, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len7 = load i64, i64* %18, align 8            ; [#uses = 1]
  %19 = icmp ugt i64 %.len6, %.len7               ; [#uses = 1]
  %20 = zext i1 %19 to i32                        ; [#uses = 1]
  %21 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s1, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len8 = load i64, i64* %21, align 8            ; [#uses = 1]
  %22 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s2, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len9 = load i64, i64* %22, align 8            ; [#uses = 1]
  %23 = icmp ult i64 %.len8, %.len9               ; [#uses = 1]
  %24 = zext i1 %23 to i32                        ; [#uses = 1]
  %25 = sub i32 %20, %24                          ; [#uses = 1]
  ret i32 %25
}

; [#uses = 2]
declare i32 @memcmp(i8*, i8*, i64) #1

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T5doPutTSQBh5array__T8AppenderTAyaZQoTAwZQBoFNaNfKQBqKQqZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, { i64, i32* }* dereferenceable(16) %e) #0 {
  %1 = load { i64, i32* }, { i64, i32* }* %e, align 8 ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAyaZQo__T3putTAwZQiMFNaNfQlZv(%"std.array.Appender!string.Appender"* nonnull %r, { i64, i32* } %1) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std5array__T8AppenderTAyaZQo__T3putTAwZQiMFNaNfQlZv(%"std.array.Appender!string.Appender"* nonnull %.this_arg, { i64, i32* } %items_arg) #0 {
  %items = alloca { i64, i32* }, align 8          ; [#uses = 3, size/byte = 16]
  %c = alloca i32, align 4                        ; [#uses = 2, size/byte = 4]
  store { i64, i32* } %items_arg, { i64, i32* }* %items, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %0
  %1 = call zeroext i1 @_D3std5range10primitives__T5emptyTAwZQkFNaNbNdNiNfMKQsZb({ i64, i32* }* dereferenceable(16) %items) #1 ; [#uses = 1]
  %2 = icmp eq i1 %1, false                       ; [#uses = 1]
  br i1 %2, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %3 = call i32 @_D3std3utf__T11decodeFrontVEQBa8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAwZQDnFNaNfKQmZw({ i64, i32* }* dereferenceable(16) %items) #1 ; [#uses = 1]
  store i32 %3, i32* %c, align 4
  %4 = load i32, i32* %c, align 4                 ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAyaZQo__T3putTwZQhMFNaNfwZv(%"std.array.Appender!string.Appender"* nonnull %.this_arg, i32 %4) #0
  br label %forinc

forinc:                                           ; preds = %forbody
  br label %forcond

endfor:                                           ; preds = %forcond
  ret void
}

; [#uses = 1]
declare zeroext i1 @_D3std5range10primitives__T5emptyTAwZQkFNaNbNdNiNfMKQsZb({ i64, i32* }* dereferenceable(16)) #1

; [#uses = 1]
declare i32 @_D3std3utf__T11decodeFrontVEQBa8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAwZQDnFNaNfKQmZw({ i64, i32* }* dereferenceable(16)) #1

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T5doPutTSQBh5array__T8AppenderTAyaZQoTyaZQBoFNaNbNfKQBsKyaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, i8* dereferenceable(1) %e) #0 {
  %1 = load i8, i8* %e, align 1                   ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAyaZQo__T3putTyaZQiMFNaNbNfyaZv(%"std.array.Appender!string.Appender"* nonnull %r, i8 zeroext %1) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std5array__T8AppenderTAyaZQo__T3putTyaZQiMFNaNbNfyaZv(%"std.array.Appender!string.Appender"* nonnull %.this_arg, i8 zeroext %item_arg) #0 {
  %1 = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %.frame = alloca %nest.put.0, align 8           ; [#uses = 5, size/byte = 24]
  %bigData = alloca { i64, i8* }, align 8         ; [#uses = 6, size/byte = 16]
  %itemUnqual = alloca i8*, align 8               ; [#uses = 2, size/byte = 8]
  store i8 %item_arg, i8* %1, align 1
  %this = getelementptr inbounds %nest.put.0, %nest.put.0* %.frame, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender"**]
  store %"std.array.Appender!string.Appender"* %.this_arg, %"std.array.Appender!string.Appender"** %this, align 8
  %len = getelementptr inbounds %nest.put.0, %nest.put.0* %.frame, i32 0, i32 1 ; [#uses = 3, type = i64*]
  %item = getelementptr inbounds %nest.put.0, %nest.put.0* %.frame, i32 0, i32 2 ; [#uses = 1, type = i8*]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %item, i8* align 1 %1, i64 1, i1 false)
  call void @_D3std5array__T8AppenderTAyaZQo13ensureAddableMFNaNbNfmZv(%"std.array.Appender!string.Appender"* nonnull %.this_arg, i64 1) #1
  %2 = getelementptr inbounds %"std.array.Appender!string.Appender", %"std.array.Appender!string.Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender.Data"**]
  %3 = load %"std.array.Appender!string.Appender.Data"*, %"std.array.Appender!string.Appender.Data"** %2, align 8 ; [#uses = 1]
  %4 = getelementptr inbounds %"std.array.Appender!string.Appender.Data", %"std.array.Appender!string.Appender.Data"* %3, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }*]
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %4, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %5, align 8              ; [#uses = 1]
  store i64 %.len, i64* %len, align 8
  %6 = bitcast %nest.put.0* %.frame to i8*        ; [#uses = 1]
  %7 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %6, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %7, { i64, i8* } (i8*)* @_D3std5array__T8AppenderTAyaZQo__T3putTyaZQiMFyaZ9__lambda3MFNaNbNiNeZAa, 1 ; [#uses = 2]
  %.funcptr = extractvalue { i8*, { i64, i8* } (i8*)* } %.func, 1 ; [#uses = 1]
  %.ptr = extractvalue { i8*, { i64, i8* } (i8*)* } %.func, 0 ; [#uses = 1]
  %8 = call { i64, i8* } %.funcptr(i8* nonnull %.ptr) ; [#uses = 2]
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %bigData, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len2 = extractvalue { i64, i8* } %8, 0        ; [#uses = 1]
  store i64 %.len2, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %bigData, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr3 = extractvalue { i64, i8* } %8, 1        ; [#uses = 1]
  store i8* %.ptr3, i8** %10, align 8
  %11 = bitcast %nest.put.0* %.frame to i8*       ; [#uses = 1]
  %12 = insertvalue { i8*, i8* (i8*)* } undef, i8* %11, 0 ; [#uses = 1]
  %.func4 = insertvalue { i8*, i8* (i8*)* } %12, i8* (i8*)* @_D3std5array__T8AppenderTAyaZQo__T3putTyaZQiMFyaZ9__lambda5MFNaNbNiNeZPa, 1 ; [#uses = 2]
  %.funcptr5 = extractvalue { i8*, i8* (i8*)* } %.func4, 1 ; [#uses = 1]
  %.ptr6 = extractvalue { i8*, i8* (i8*)* } %.func4, 0 ; [#uses = 1]
  %13 = call i8* %.funcptr5(i8* nonnull %.ptr6)   ; [#uses = 1]
  store i8* %13, i8** %itemUnqual, align 8
  %14 = load i64, i64* %len, align 8              ; [#uses = 2]
  %15 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %bigData, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len7 = load i64, i64* %15, align 8            ; [#uses = 2]
  %bounds.cmp = icmp ult i64 %14, %.len7          ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %0
  %16 = load i64, i64* %len, align 8              ; [#uses = 1]
  %17 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %bigData, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr8 = load i8*, i8** %17, align 8            ; [#uses = 1]
  %18 = getelementptr inbounds i8, i8* %.ptr8, i64 %16 ; [#uses = 1, type = i8*]
  %19 = load i8*, i8** %itemUnqual, align 8       ; [#uses = 1]
  %20 = call i8* @_D4core8lifetime__T7emplaceTaTaZQnFNaNbNiNfPaKaZQf(i8* %18, i8* dereferenceable(1) %19) #1 ; [#uses = 0]
  %21 = getelementptr inbounds %"std.array.Appender!string.Appender", %"std.array.Appender!string.Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender.Data"**]
  %22 = load %"std.array.Appender!string.Appender.Data"*, %"std.array.Appender!string.Appender.Data"** %21, align 8 ; [#uses = 1]
  %23 = getelementptr inbounds %"std.array.Appender!string.Appender.Data", %"std.array.Appender!string.Appender.Data"* %22, i32 0, i32 1 ; [#uses = 2, type = { i64, i8* }*]
  %24 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %23, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %25 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %bigData, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len9 = load i64, i64* %25, align 8            ; [#uses = 1]
  store i64 %.len9, i64* %24, align 8
  %26 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %23, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %27 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %bigData, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr10 = load i8*, i8** %27, align 8           ; [#uses = 1]
  store i8* %.ptr10, i8** %26, align 8
  ret void

bounds.fail:                                      ; preds = %0
  call void @_d_arraybounds_index({ i64, i8* } { i64 51, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.30, i32 0, i32 0) }, i32 3694, i64 %14, i64 %.len7) #5
  unreachable
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std5array__T8AppenderTAyaZQo__T3putTyaZQiMFyaZ9__lambda3MFNaNbNiNeZAa(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.put.0*     ; [#uses = 1]
  %this = getelementptr inbounds %nest.put.0, %nest.put.0* %1, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender"**]
  %2 = load %"std.array.Appender!string.Appender"*, %"std.array.Appender!string.Appender"** %this, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds %"std.array.Appender!string.Appender", %"std.array.Appender!string.Appender"* %2, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender.Data"**]
  %4 = load %"std.array.Appender!string.Appender.Data"*, %"std.array.Appender!string.Appender.Data"** %3, align 8 ; [#uses = 1]
  %5 = getelementptr inbounds %"std.array.Appender!string.Appender.Data", %"std.array.Appender!string.Appender.Data"* %4, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }*]
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %5, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %6, align 8              ; [#uses = 1]
  %7 = bitcast i8* %.nest_arg to %nest.put.0*     ; [#uses = 1]
  %len = getelementptr inbounds %nest.put.0, %nest.put.0* %7, i32 0, i32 1 ; [#uses = 1, type = i64*]
  %8 = load i64, i64* %len, align 8               ; [#uses = 1]
  %9 = add i64 %8, 1                              ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr, i64 0 ; [#uses = 1, type = i8*]
  %10 = sub i64 %9, 0                             ; [#uses = 1]
  %11 = insertvalue { i64, i8* } undef, i64 %10, 0 ; [#uses = 1]
  %12 = insertvalue { i64, i8* } %11, i8* %lowerbound, 1 ; [#uses = 1]
  ret { i64, i8* } %12
}

; [#uses = 1]
; Function Attrs: uwtable
define internal i8* @_D3std5array__T8AppenderTAyaZQo__T3putTyaZQiMFyaZ9__lambda5MFNaNbNiNeZPa(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.put.0*     ; [#uses = 1]
  %item = getelementptr inbounds %nest.put.0, %nest.put.0* %1, i32 0, i32 2 ; [#uses = 1, type = i8*]
  ret i8* %item
}

; [#uses = 1]
declare i8* @_D4core8lifetime__T7emplaceTaTaZQnFNaNbNiNfPaKaZQf(i8*, i8* dereferenceable(1)) #1

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std10functional__T9binaryFunVAyaa6_61203d3d2062VQta1_61VQBba1_62Z__TQByThThZQCgFNaNbNiNfKhKhZb(i8* dereferenceable(1) %__a, i8* dereferenceable(1) %__b) #0 {
  %1 = load i8, i8* %__a, align 1                 ; [#uses = 1]
  %2 = zext i8 %1 to i32                          ; [#uses = 1]
  %3 = load i8, i8* %__b, align 1                 ; [#uses = 1]
  %4 = zext i8 %3 to i32                          ; [#uses = 1]
  %5 = icmp eq i32 %2, %4                         ; [#uses = 1]
  ret i1 %5
}

; [#uses = 0]
declare i8** @_D4hunt4http6server17HttpServerRequestQt7queriesMFNcNdZHAyaQd(%hunt.http.server.HttpServerRequest.HttpServerRequest* nonnull) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D6object__T3getTAyaTQeZQmFNaNfNgHQrAyaQwLNgQiZNgQn(i8* %aa_arg, { i64, i8* } %key_arg, { i8*, { i64, i8* } (i8*)* } %defaultValue_arg) #0 {
  %aa = alloca i8*, align 8                       ; [#uses = 2, size/byte = 8]
  %key = alloca { i64, i8* }, align 8             ; [#uses = 2, size/byte = 16]
  %defaultValue = alloca { i8*, { i64, i8* } (i8*)* }, align 8 ; [#uses = 3, size/byte = 16]
  %p = alloca { i64, i8* }*, align 8              ; [#uses = 3, size/byte = 8]
  %condtmp = alloca { i64, i8* }*, align 8        ; [#uses = 4, size/byte = 8]
  %.makelvaluetmp = alloca { i64, i8* }, align 8  ; [#uses = 3, size/byte = 16]
  store i8* %aa_arg, i8** %aa, align 8
  store { i64, i8* } %key_arg, { i64, i8* }* %key, align 8
  store { i8*, { i64, i8* } (i8*)* } %defaultValue_arg, { i8*, { i64, i8* } (i8*)* }* %defaultValue, align 8
  %1 = load i8*, i8** %aa, align 8                ; [#uses = 1]
  %2 = bitcast i8* %1 to i8**                     ; [#uses = 1]
  %3 = bitcast { i64, i8* }* %key to i8*          ; [#uses = 1]
  %aa.in = call i8* @_aaInX(i8** nocapture dereferenceable(8) %2, %object.TypeInfo* bitcast (%object.TypeInfo_Array* @_D12TypeInfo_Aya6__initZ to %object.TypeInfo*), i8* nocapture %3) #7 ; [#uses = 1]
  %4 = bitcast i8* %aa.in to { i64, i8* }*        ; [#uses = 1]
  store { i64, i8* }* %4, { i64, i8* }** %p, align 8
  %5 = load { i64, i8* }*, { i64, i8* }** %p, align 8 ; [#uses = 1]
  %6 = icmp ne { i64, i8* }* %5, null             ; [#uses = 1]
  br i1 %6, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  %7 = load { i64, i8* }*, { i64, i8* }** %p, align 8 ; [#uses = 1]
  store { i64, i8* }* %7, { i64, i8* }** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  %8 = getelementptr inbounds { i8*, { i64, i8* } (i8*)* }, { i8*, { i64, i8* } (i8*)* }* %defaultValue, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* } (i8*)**]
  %.funcptr = load { i64, i8* } (i8*)*, { i64, i8* } (i8*)** %8, align 8 ; [#uses = 1]
  %9 = getelementptr inbounds { i8*, { i64, i8* } (i8*)* }, { i8*, { i64, i8* } (i8*)* }* %defaultValue, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %9, align 8              ; [#uses = 1]
  %10 = call { i64, i8* } %.funcptr(i8* nonnull %.ptr) ; [#uses = 2]
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = extractvalue { i64, i8* } %10, 0        ; [#uses = 1]
  store i64 %.len, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr1 = extractvalue { i64, i8* } %10, 1       ; [#uses = 1]
  store i8* %.ptr1, i8** %12, align 8
  store { i64, i8* }* %.makelvaluetmp, { i64, i8* }** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %13 = load { i64, i8* }*, { i64, i8* }** %condtmp, align 8 ; [#uses = 1]
  %14 = load { i64, i8* }, { i64, i8* }* %13, align 8 ; [#uses = 0]
  %15 = load { i64, i8* }*, { i64, i8* }** %condtmp, align 8 ; [#uses = 1]
  %16 = load { i64, i8* }, { i64, i8* }* %15, align 8 ; [#uses = 1]
  ret { i64, i8* } %16
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt4http6server17HttpServerRequestQt__T3getTAyaZQjMFQiQkZ12__dgliteral4MFNaNbNiNfZQBm(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std4conv__T2toTAyaZ__TQlTQkZQrFNaNbNiNfQyZQBb({ i64, i8* } %__param_0_arg) #0 {
  %__param_0 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %__param_0_arg, { i64, i8* }* %__param_0, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %__param_0, align 8 ; [#uses = 1]
  %2 = call { i64, i8* } @_D3std4conv__T6toImplTAyaTQeZQpFNaNbNiNfQsZQv({ i64, i8* } %1) #1 ; [#uses = 1]
  ret { i64, i8* } %2
}

; [#uses = 5]
; Function Attrs: memory(read) uwtable
declare i8* @_aaInX(i8** nocapture dereferenceable(8), %object.TypeInfo*, i8* nocapture) #7

; [#uses = 1]
declare { i64, i8* } @_D3std4conv__T6toImplTAyaTQeZQpFNaNbNiNfQsZQv({ i64, i8* }) #1

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std6format__TQkTaTAyaTQeZQwFNaNfIAaQrQtZQw({ i64, i8* } %fmt_arg, { i64, i8* } %__param_1_arg, { i64, i8* } %__param_2_arg) #0 {
  %fmt = alloca { i64, i8* }, align 8             ; [#uses = 2, size/byte = 16]
  %__param_1 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %__param_2 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %.frame = alloca %nest.format, align 4          ; [#uses = 2, size/byte = 4]
  %w = alloca %"std.array.Appender!string.Appender", align 8 ; [#uses = 3, size/byte = 8]
  %1 = alloca %"std.array.Appender!string.Appender", align 8 ; [#uses = 2, size/byte = 8]
  store { i64, i8* } %fmt_arg, { i64, i8* }* %fmt, align 8
  store { i64, i8* } %__param_1_arg, { i64, i8* }* %__param_1, align 8
  store { i64, i8* } %__param_2_arg, { i64, i8* }* %__param_2, align 8
  %n = getelementptr inbounds %nest.format, %nest.format* %.frame, i32 0, i32 0 ; [#uses = 2, type = i32*]
  %2 = call %"std.array.Appender!string.Appender" @_D3std5array__T8appenderTAyaZQoFNaNbNfZSQBmQBl__T8AppenderTQBiZQo() #1 ; [#uses = 1]
  store %"std.array.Appender!string.Appender" %2, %"std.array.Appender!string.Appender"* %1, align 8
  %3 = bitcast %"std.array.Appender!string.Appender"* %w to i8* ; [#uses = 1]
  %4 = bitcast %"std.array.Appender!string.Appender"* %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 8, i1 false)
  %5 = load { i64, i8* }, { i64, i8* }* %fmt, align 8 ; [#uses = 1]
  %6 = load { i64, i8* }, { i64, i8* }* %__param_1, align 8 ; [#uses = 1]
  %7 = call i32 @_D3std6format5write__T14formattedWriteTSQBm5array__T8AppenderTAyaZQoTaTQjTQmZQCdFNaNfKQBvMxAaQBfQBiZk(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %5, { i64, i8* } %6, { i64, i8* }* byval({ i64, i8* }) align 8 %__param_2) #1 ; [#uses = 1]
  store i32 %7, i32* %n, align 4
  %8 = load i32, i32* %n, align 4                 ; [#uses = 1]
  %9 = zext i32 %8 to i64                         ; [#uses = 1]
  %10 = icmp eq i64 %9, 2                         ; [#uses = 1]
  %11 = bitcast %nest.format* %.frame to i8*      ; [#uses = 1]
  %12 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %11, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %12, { i64, i8* } (i8*)* @_D3std6format__TQkTaTAyaTQeZQwFIAaQnQpZ12__dgliteral7MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %13 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %10, { i8*, { i64, i8* } (i8*)* } %.func, { i64, i8* } { i64 60, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.37, i32 0, i32 0) }, i64 785) #1 ; [#uses = 0]
  %14 = call { i64, i8* } @_D3std5array__T8AppenderTAyaZQo4dataMNgFNaNbNdNiNeZQBa(%"std.array.Appender!string.Appender"* nonnull %w) #1 ; [#uses = 1]
  ret { i64, i8* } %14
}

; [#uses = 5]
; Function Attrs: uwtable
define weak_odr %"std.array.Appender!string.Appender" @_D3std5array__T8appenderTAyaZQoFNaNbNfZSQBmQBl__T8AppenderTQBiZQo() #0 {
  %.structliteral = alloca %"std.array.Appender!string.Appender", align 8 ; [#uses = 3, size/byte = 8]
  %1 = getelementptr inbounds %"std.array.Appender!string.Appender", %"std.array.Appender!string.Appender"* %.structliteral, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender.Data"**]
  store %"std.array.Appender!string.Appender.Data"* null, %"std.array.Appender!string.Appender.Data"** %1, align 8
  %2 = call %"std.array.Appender!string.Appender"* @_D3std5array__T8AppenderTAyaZQo6__ctorMFNaNbNcNeQxZSQByQBx__TQBuTQBoZQCc(%"std.array.Appender!string.Appender"* nonnull returned %.structliteral, { i64, i8* } zeroinitializer) #1 ; [#uses = 0]
  %3 = load %"std.array.Appender!string.Appender", %"std.array.Appender!string.Appender"* %.structliteral, align 8 ; [#uses = 1]
  ret %"std.array.Appender!string.Appender" %3
}

; [#uses = 1]
declare i32 @_D3std6format5write__T14formattedWriteTSQBm5array__T8AppenderTAyaZQoTaTQjTQmZQCdFNaNfKQBvMxAaQBfQBiZk(%"std.array.Appender!string.Appender"* dereferenceable(8), { i64, i8* }, { i64, i8* }, { i64, i8* }* byval({ i64, i8* }) align 8) #1

; [#uses = 24]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %value_arg, { i8*, { i64, i8* } (i8*)* } %msg_arg, { i64, i8* } %file_arg, i64 %line_arg) #0 {
  %value = alloca i8, align 1                     ; [#uses = 4, size/byte = 1]
  %msg = alloca { i8*, { i64, i8* } (i8*)* }, align 8 ; [#uses = 3, size/byte = 16]
  %file = alloca { i64, i8* }, align 8            ; [#uses = 2, size/byte = 16]
  %line = alloca i64, align 8                     ; [#uses = 2, size/byte = 8]
  %1 = zext i1 %value_arg to i8                   ; [#uses = 1]
  store i8 %1, i8* %value, align 1
  store { i8*, { i64, i8* } (i8*)* } %msg_arg, { i8*, { i64, i8* } (i8*)* }* %msg, align 8
  store { i64, i8* } %file_arg, { i64, i8* }* %file, align 8
  store i64 %line_arg, i64* %line, align 8
  %2 = load i8, i8* %value, align 1               ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  %4 = icmp eq i1 %3, false                       ; [#uses = 1]
  br i1 %4, label %if, label %endif

if:                                               ; preds = %0
  %5 = load { i64, i8* }, { i64, i8* }* %file, align 8 ; [#uses = 1]
  %6 = load i64, i64* %line, align 8              ; [#uses = 1]
  %7 = getelementptr inbounds { i8*, { i64, i8* } (i8*)* }, { i8*, { i64, i8* } (i8*)* }* %msg, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* } (i8*)**]
  %.funcptr = load { i64, i8* } (i8*)*, { i64, i8* } (i8*)** %7, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds { i8*, { i64, i8* } (i8*)* }, { i8*, { i64, i8* } (i8*)* }* %msg, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %8, align 8              ; [#uses = 1]
  %9 = call { i64, i8* } %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  call void @_D3std9exception__T7bailOutHTCQBc6format15FormatExceptionZQBnFNaNfAyamMAxaZNn({ i64, i8* } %5, i64 %6, { i64, i8* } %9) #12
  br label %endif

endif:                                            ; preds = %if, %0
  %10 = load i8, i8* %value, align 1              ; [#uses = 1]
  %11 = trunc i8 %10 to i1                        ; [#uses = 0]
  %12 = load i8, i8* %value, align 1              ; [#uses = 1]
  %13 = trunc i8 %12 to i1                        ; [#uses = 1]
  ret i1 %13
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format__TQkTaTAyaTQeZQwFIAaQnQpZ12__dgliteral7MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.format*    ; [#uses = 1]
  %n = getelementptr inbounds %nest.format, %nest.format* %1, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %2 = load i32, i32* %n, align 4                 ; [#uses = 1]
  %3 = call { i64, i8* } @_D3std4conv__T4textTAyaTkTQgTmTQlZQuFNaNbNfQxkQBamQBeZQBi({ i64, i8* } { i64 30, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34, i32 0, i32 0) }, i32 %2, { i64, i8* } { i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0) }, i64 2, { i64, i8* } { i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i32 0, i32 0) }) #1 ; [#uses = 1]
  ret { i64, i8* } %3
}

; [#uses = 1]
declare { i64, i8* } @_D3std4conv__T4textTAyaTkTQgTmTQlZQuFNaNbNfQxkQBamQBeZQBi({ i64, i8* }, i32, { i64, i8* }, i64, { i64, i8* }) #1

; [#uses = 5]
declare { i64, i8* } @_D3std5array__T8AppenderTAyaZQo4dataMNgFNaNbNdNiNeZQBa(%"std.array.Appender!string.Appender"* nonnull) #1

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr void @_D4hunt7logging6Logger__T10logWarningVAyaa89_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d687474702f302e382e322f68756e742d687474702f736f757263652f68756e742f687474702f7365727665722f48747470536572766572526571756573742e64Vmi410VQHka67_68756e742e687474702e7365727665722e48747470536572766572526571756573742e48747470536572766572526571756573742e67657421737472696e672e676574TQMwZQNnFNbLQNhZv({ i8*, { i64, i8* } (i8*)* } %__param_0_arg) #0 {
  %1 = alloca { i8*, { i64, i8* } (i8*)* }, align 8 ; [#uses = 2, size/byte = 16]
  %.frame = alloca %nest.logWarning, align 8      ; [#uses = 3, size/byte = 16]
  store { i8*, { i64, i8* } (i8*)* } %__param_0_arg, { i8*, { i64, i8* } (i8*)* }* %1, align 8
  %__param_0 = getelementptr inbounds %nest.logWarning, %nest.logWarning* %.frame, i32 0, i32 0 ; [#uses = 1, type = { i8*, { i64, i8* } (i8*)* }*]
  %2 = bitcast { i8*, { i64, i8* } (i8*)* }* %__param_0 to i8* ; [#uses = 1]
  %3 = bitcast { i8*, { i64, i8* } (i8*)* }* %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false)
  %4 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %5 = icmp eq %hunt.logging.Logger.Logger* %4, null ; [#uses = 1]
  br i1 %5, label %if, label %else

if:                                               ; preds = %0
  %6 = bitcast %nest.logWarning* %.frame to i8*   ; [#uses = 1]
  %7 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %6, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %7, { i64, i8* } (i8*)* @_D4hunt7logging6Logger__T10logWarningVAyaa89_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d687474702f302e382e322f68756e742d687474702f736f757263652f68756e742f687474702f7365727665722f48747470536572766572526571756573742e64Vmi410VQHka67_68756e742e687474702e7365727665722e48747470536572766572526571756573742e48747470536572766572526571756573742e67657421737472696e672e676574TQMwZQNnFNbLQNhZ12__dgliteral3MFNaNiNfZQOi, 1 ; [#uses = 1]
  call void @_D4hunt7logging6LoggerQh16writeFormatColorFNbEQBsQBqQBl8LogLevelLAyaZv(i32 2, { i8*, { i64, i8* } (i8*)* } %.func) #1
  br label %endif

else:                                             ; preds = %0
  %8 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %9 = getelementptr inbounds %hunt.logging.Logger.Logger, %hunt.logging.Logger.Logger* %8, i32 0, i32 0 ; [#uses = 1, type = [11 x i8*]**]
  %10 = load [11 x i8*]*, [11 x i8*]** %9, align 8 ; [#uses = 1]
  %"doWrite@vtbl" = getelementptr inbounds [11 x i8*], [11 x i8*]* %10, i32 0, i32 9 ; [#uses = 1, type = i8**]
  %11 = load i8*, i8** %"doWrite@vtbl", align 8   ; [#uses = 1]
  %doWrite = bitcast i8* %11 to void (%hunt.logging.Logger.Logger*, i32, { i8*, { i64, i8* } (i8*)* })* ; [#uses = 1]
  %12 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %13 = bitcast %nest.logWarning* %.frame to i8*  ; [#uses = 1]
  %14 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %13, 0 ; [#uses = 1]
  %.func2 = insertvalue { i8*, { i64, i8* } (i8*)* } %14, { i64, i8* } (i8*)* @_D4hunt7logging6Logger__T10logWarningVAyaa89_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d687474702f302e382e322f68756e742d687474702f736f757263652f68756e742f687474702f7365727665722f48747470536572766572526571756573742e64Vmi410VQHka67_68756e742e687474702e7365727665722e48747470536572766572526571756573742e48747470536572766572526571756573742e67657421737472696e672e676574TQMwZQNnFNbLQNhZ12__dgliteral4MFNaNiNfZQOi, 1 ; [#uses = 1]
  call void %doWrite(%hunt.logging.Logger.Logger* nonnull %12, i32 2, { i8*, { i64, i8* } (i8*)* } %.func2)
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 5]
declare void @_D4hunt7logging6LoggerQh16writeFormatColorFNbEQBsQBqQBl8LogLevelLAyaZv(i32, { i8*, { i64, i8* } (i8*)* }) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6Logger__T10logWarningVAyaa89_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d687474702f302e382e322f68756e742d687474702f736f757263652f68756e742f687474702f7365727665722f48747470536572766572526571756573742e64Vmi410VQHka67_68756e742e687474702e7365727665722e48747470536572766572526571756573742e48747470536572766572526571756573742e67657421737472696e672e676574TQMwZQNnFNbLQNhZ12__dgliteral3MFNaNiNfZQOi(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.logWarning* ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.logWarning, %nest.logWarning* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, { i64, i8* } (i8*)* }*]
  %2 = getelementptr inbounds { i8*, { i64, i8* } (i8*)* }, { i8*, { i64, i8* } (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* } (i8*)**]
  %.funcptr = load { i64, i8* } (i8*)*, { i64, i8* } (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, { i64, i8* } (i8*)* }, { i8*, { i64, i8* } (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call { i64, i8* } %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTAyaZQpFNaNbNfQnZQq({ i64, i8* } %4) #1 ; [#uses = 1]
  %6 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.38, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 89, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.39, i32 0, i32 0) }, i64 410, i32 2, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } zeroinitializer) #1 ; [#uses = 1]
  ret { i64, i8* } %6
}

; [#uses = 14]
declare { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* }, { i64, i8* }, { i64, i8* }, i64, i32, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }) #1

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTAyaZQpFNaNbNfQnZQq({ i64, i8* } %__param_0_arg) #0 {
  %__param_0 = alloca { i64, i8* }, align 8       ; [#uses = 3, size/byte = 16]
  %w = alloca %"std.array.Appender!string.Appender", align 8 ; [#uses = 3, size/byte = 8]
  %1 = alloca %"std.array.Appender!string.Appender", align 8 ; [#uses = 2, size/byte = 8]
  %arg = alloca { i64, i8* }, align 8             ; [#uses = 3, size/byte = 16]
  store { i64, i8* } %__param_0_arg, { i64, i8* }* %__param_0, align 8
  %2 = call %"std.array.Appender!string.Appender" @_D3std5array__T8appenderTAyaZQoFNaNbNfZSQBmQBl__T8AppenderTQBiZQo() #1 ; [#uses = 1]
  store %"std.array.Appender!string.Appender" %2, %"std.array.Appender!string.Appender"* %1, align 8
  %3 = bitcast %"std.array.Appender!string.Appender"* %w to i8* ; [#uses = 1]
  %4 = bitcast %"std.array.Appender!string.Appender"* %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 8, i1 false)
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %0
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %arg, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %6, align 8              ; [#uses = 1]
  store i64 %.len, i64* %5, align 8
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %arg, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %8, align 8              ; [#uses = 1]
  store i8* %.ptr, i8** %7, align 8
  %9 = load { i64, i8* }, { i64, i8* }* %arg, align 8 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %9) #1
  br label %unrolledend

unrolledend:                                      ; preds = %unrolledstmt
  %10 = call { i64, i8* } @_D3std5array__T8AppenderTAyaZQo4dataMNgFNaNbNdNiNeZQBa(%"std.array.Appender!string.Appender"* nonnull %w) #1 ; [#uses = 1]
  ret { i64, i8* } %10
}

; [#uses = 0]
declare void @_D4hunt7logging6LoggerQh7doWriteMFNbEQBjQBhQBc8LogLevelLAyaZv(%hunt.logging.Logger.Logger* nonnull, i32, { i8*, { i64, i8* } (i8*)* }) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6Logger__T10logWarningVAyaa89_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d687474702f302e382e322f68756e742d687474702f736f757263652f68756e742f687474702f7365727665722f48747470536572766572526571756573742e64Vmi410VQHka67_68756e742e687474702e7365727665722e48747470536572766572526571756573742e48747470536572766572526571756573742e67657421737472696e672e676574TQMwZQNnFNbLQNhZ12__dgliteral4MFNaNiNfZQOi(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.logWarning* ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.logWarning, %nest.logWarning* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, { i64, i8* } (i8*)* }*]
  %2 = getelementptr inbounds { i8*, { i64, i8* } (i8*)* }, { i8*, { i64, i8* } (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* } (i8*)**]
  %.funcptr = load { i64, i8* } (i8*)*, { i64, i8* } (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, { i64, i8* } (i8*)* }, { i8*, { i64, i8* } (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call { i64, i8* } %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTAyaZQpFNaNbNfQnZQq({ i64, i8* } %4) #1 ; [#uses = 1]
  %6 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.38, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 89, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.39, i32 0, i32 0) }, i64 410, i32 2, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } zeroinitializer) #1 ; [#uses = 1]
  ret { i64, i8* } %6
}

; [#uses = 20]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, { i64, i8* } %e_arg) #0 {
  %e = alloca { i64, i8* }, align 8               ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %e_arg, { i64, i8* }* %e, align 8
  call void @_D3std5range10primitives__T5doPutTSQBh5array__T8AppenderTAyaZQoTQhZQBoFNaNbNfKQBsKQzZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, { i64, i8* }* dereferenceable(16) %e) #0
  ret void
}

; [#uses = 1]
declare %"std.array.Appender!string.Appender"* @_D3std5array__T8AppenderTAyaZQo6__ctorMFNaNbNcNeQxZSQByQBx__TQBuTQBoZQCc(%"std.array.Appender!string.Appender"* nonnull returned, { i64, i8* }) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std4conv__T2toTAyaZ__TQlTbZQqFNaNbNiNfbZQz(i1 zeroext %__param_0_arg) #0 {
  %__param_0 = alloca i8, align 1                 ; [#uses = 2, size/byte = 1]
  %1 = zext i1 %__param_0_arg to i8               ; [#uses = 1]
  store i8 %1, i8* %__param_0, align 1
  %2 = load i8, i8* %__param_0, align 1           ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  %4 = call { i64, i8* } @_D3std4conv__T6toImplTAyaTbZQoFNaNbNiNfbZQt(i1 zeroext %3) #1 ; [#uses = 1]
  ret { i64, i8* } %4
}

; [#uses = 1]
declare %hunt.http.HttpBody.HttpBody* @_D4hunt4http8HttpBodyQj6createFAyaQdZCQBkQBiQBgQBj({ i64, i8* }, { i64, i8* }) #1

; [#uses = 0]
declare %hunt.http.HttpMetaData.HttpMetaData* @_D4hunt4http12HttpMetaDataQo7setBodyMFCQBlQBj8HttpBodyQjZCQCeQCcQCaQCd(%hunt.http.HttpMetaData.HttpMetaData* nonnull, %hunt.http.HttpBody.HttpBody*) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std4conv__T6toImplTAyaTbZQoFNaNbNiNfbZQt(i1 zeroext %value_arg) #0 {
  %value = alloca i8, align 1                     ; [#uses = 2, size/byte = 1]
  %1 = zext i1 %value_arg to i8                   ; [#uses = 1]
  store i8 %1, i8* %value, align 1
  %2 = load i8, i8* %value, align 1               ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  %4 = call { i64, i8* } @_D3std4conv__T5toStrTAyaTbZQnFNaNbNiNfbZQt(i1 zeroext %3) #1 ; [#uses = 1]
  ret { i64, i8* } %4
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std4conv__T5toStrTAyaTbZQnFNaNbNiNfbZQt(i1 zeroext %src_arg) #0 {
  %src = alloca i8, align 1                       ; [#uses = 2, size/byte = 1]
  %condtmp = alloca { i64, i8* }*, align 8        ; [#uses = 4, size/byte = 8]
  %.makelvaluetmp = alloca { i64, i8* }, align 8  ; [#uses = 3, size/byte = 16]
  %.makelvaluetmp1 = alloca { i64, i8* }, align 8 ; [#uses = 3, size/byte = 16]
  %1 = zext i1 %src_arg to i8                     ; [#uses = 1]
  store i8 %1, i8* %src, align 1
  %2 = load i8, i8* %src, align 1                 ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  br i1 %3, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 4, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0), i8** %5, align 8
  store { i64, i8* }* %.makelvaluetmp, { i64, i8* }** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp1, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 5, i64* %6, align 8
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp1, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i32 0, i32 0), i8** %7, align 8
  store { i64, i8* }* %.makelvaluetmp1, { i64, i8* }** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %8 = load { i64, i8* }*, { i64, i8* }** %condtmp, align 8 ; [#uses = 1]
  %9 = load { i64, i8* }, { i64, i8* }* %8, align 8 ; [#uses = 0]
  %10 = load { i64, i8* }*, { i64, i8* }** %condtmp, align 8 ; [#uses = 1]
  %11 = load { i64, i8* }, { i64, i8* }* %10, align 8 ; [#uses = 1]
  ret { i64, i8* } %11
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D4core8internal7switch___T8__switchTyaVxAyaa4_6563686fVxQqa4_66616374ZQBsFNaNbNiNfMxQBsZi({ i64, i8* } %condition_arg) #0 {
  %condition = alloca { i64, i8* }, align 8       ; [#uses = 6, size/byte = 16]
  %r = alloca i32, align 4                        ; [#uses = 4, size/byte = 4]
  store { i64, i8* } %condition_arg, { i64, i8* }* %condition, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %condition, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = icmp eq i64 %.len, 4                       ; [#uses = 1]
  br i1 %2, label %if, label %else

if:                                               ; preds = %0
  %3 = load { i64, i8* }, { i64, i8* }* %condition, align 8 ; [#uses = 1]
  %4 = call i32 @_D4core8internal5array10comparison__T5__cmpTaZQjFNaNbNiNeMxAaMxQeZi({ i64, i8* } %3, { i64, i8* } { i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0) }) #0 ; [#uses = 1]
  store i32 %4, i32* %r, align 4
  %5 = load i32, i32* %r, align 4                 ; [#uses = 1]
  %6 = icmp eq i32 %5, 0                          ; [#uses = 1]
  br i1 %6, label %if1, label %endif2

if1:                                              ; preds = %if
  ret i32 1

dummy.afterreturn:                                ; No predecessors!
  br label %endif2

endif2:                                           ; preds = %dummy.afterreturn, %if
  br label %endif

else:                                             ; preds = %0
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %condition, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len3 = load i64, i64* %7, align 8             ; [#uses = 1]
  %8 = icmp ugt i64 %.len3, 4                     ; [#uses = 1]
  %9 = zext i1 %8 to i32                          ; [#uses = 1]
  %10 = shl i32 %9, 1                             ; [#uses = 1]
  %11 = sub i32 %10, 1                            ; [#uses = 1]
  store i32 %11, i32* %r, align 4
  br label %endif

endif:                                            ; preds = %else, %endif2
  %12 = load i32, i32* %r, align 4                ; [#uses = 1]
  %13 = icmp slt i32 %12, 0                       ; [#uses = 1]
  br i1 %13, label %if4, label %else6

if4:                                              ; preds = %endif
  %14 = load { i64, i8* }, { i64, i8* }* %condition, align 8 ; [#uses = 1]
  %15 = call i32 @_D4core8internal7switch___T8__switchTyaVxAyaa4_6563686fZQBdFNaNbNiNfMxQBdZi({ i64, i8* } %14) #1 ; [#uses = 1]
  ret i32 %15

dummy.afterreturn7:                               ; No predecessors!
  br label %endif5

else6:                                            ; preds = %endif
  %16 = load { i64, i8* }, { i64, i8* }* %condition, align 8 ; [#uses = 1]
  %17 = call i32 @_D4core8internal7switch___T8__switchTyaZQnFNaNbNiNfMxAyaZi({ i64, i8* } %16) #1 ; [#uses = 1]
  %18 = add i32 %17, 1                            ; [#uses = 1]
  %19 = add i32 %18, 1                            ; [#uses = 1]
  ret i32 %19

dummy.afterreturn8:                               ; No predecessors!
  br label %endif5

endif5:                                           ; preds = %dummy.afterreturn8, %dummy.afterreturn7
  ret i32 undef
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D4core8internal7switch___T8__switchTyaVxAyaa37_6973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6eZQDsFNaNbNiNfMxQDsZi({ i64, i8* } %condition_arg) #0 {
  %condition = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %condtmp = alloca i32*, align 8                 ; [#uses = 4, size/byte = 8]
  %.makelvaluetmp = alloca i32, align 4           ; [#uses = 2, size/byte = 4]
  %.makelvaluetmp1 = alloca i32, align 4          ; [#uses = 2, size/byte = 4]
  store { i64, i8* } %condition_arg, { i64, i8* }* %condition, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %condition, align 8 ; [#uses = 1]
  %2 = call i32 @_D4core8internal5array10comparison__T5__cmpTaZQjFNaNbNiNeMxAaMxQeZi({ i64, i8* } %1, { i64, i8* } { i64 37, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i32 0, i32 0) }) #0 ; [#uses = 1]
  %3 = icmp eq i32 %2, 0                          ; [#uses = 1]
  br i1 %3, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  store i32 0, i32* %.makelvaluetmp, align 4
  store i32* %.makelvaluetmp, i32** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  store i32 -2147483648, i32* %.makelvaluetmp1, align 4
  store i32* %.makelvaluetmp1, i32** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %4 = load i32*, i32** %condtmp, align 8         ; [#uses = 1]
  %5 = load i32, i32* %4, align 4                 ; [#uses = 0]
  %6 = load i32*, i32** %condtmp, align 8         ; [#uses = 1]
  %7 = load i32, i32* %6, align 4                 ; [#uses = 1]
  ret i32 %7
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D4core8internal7switch___T8__switchTyaVxAyaa4_6563686fZQBdFNaNbNiNfMxQBdZi({ i64, i8* } %condition_arg) #0 {
  %condition = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %condtmp = alloca i32*, align 8                 ; [#uses = 4, size/byte = 8]
  %.makelvaluetmp = alloca i32, align 4           ; [#uses = 2, size/byte = 4]
  %.makelvaluetmp1 = alloca i32, align 4          ; [#uses = 2, size/byte = 4]
  store { i64, i8* } %condition_arg, { i64, i8* }* %condition, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %condition, align 8 ; [#uses = 1]
  %2 = call i32 @_D4core8internal5array10comparison__T5__cmpTaZQjFNaNbNiNeMxAaMxQeZi({ i64, i8* } %1, { i64, i8* } { i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0) }) #0 ; [#uses = 1]
  %3 = icmp eq i32 %2, 0                          ; [#uses = 1]
  br i1 %3, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  store i32 0, i32* %.makelvaluetmp, align 4
  store i32* %.makelvaluetmp, i32** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  store i32 -2147483648, i32* %.makelvaluetmp1, align 4
  store i32* %.makelvaluetmp1, i32** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %4 = load i32*, i32** %condtmp, align 8         ; [#uses = 1]
  %5 = load i32, i32* %4, align 4                 ; [#uses = 0]
  %6 = load i32*, i32** %condtmp, align 8         ; [#uses = 1]
  %7 = load i32, i32* %6, align 4                 ; [#uses = 1]
  ret i32 %7
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D4core8internal7switch___T8__switchTyaZQnFNaNbNiNfMxAyaZi({ i64, i8* } %condition_arg) #0 {
  %condition = alloca { i64, i8* }, align 8       ; [#uses = 1, size/byte = 16]
  store { i64, i8* } %condition_arg, { i64, i8* }* %condition, align 8
  ret i32 -2147483648
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D4hunt9framework10controller10Controller__T16__createRouteMapTC3appQBz13ApiControllerQpVAyaa28_6170702e636f6e74726f6c6c65722e417069436f6e74726f6c6c6572ZQEfFNaNbNfZQCx() #0 {
  %str = alloca { i64, i8* }, align 8             ; [#uses = 8, size/byte = 16]
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %str, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0), i8** %2, align 8
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %0
  br label %unrolledstmt53

unrolledstmt53:                                   ; preds = %unrolledstmt
  br label %unrolledend52

unrolledend52:                                    ; preds = %unrolledstmt53
  br label %unrolledstmt1

unrolledstmt1:                                    ; preds = %unrolledend52
  br label %unrolledstmt55

unrolledstmt55:                                   ; preds = %unrolledstmt1
  br label %unrolledend54

unrolledend54:                                    ; preds = %unrolledstmt55
  br label %unrolledstmt2

unrolledstmt2:                                    ; preds = %unrolledend54
  br label %unrolledstmt57

unrolledstmt57:                                   ; preds = %unrolledstmt2
  br label %unrolledend56

unrolledend56:                                    ; preds = %unrolledstmt57
  br label %unrolledstmt3

unrolledstmt3:                                    ; preds = %unrolledend56
  br label %unrolledstmt59

unrolledstmt59:                                   ; preds = %unrolledstmt3
  %3 = call { i64, i8* }* @_D4core8internal5array9appending__T15_d_arrayappendTHTAyaTyaZQBaFNaNbNcNeMNkKQxMQBaZQBe({ i64, i8* }* dereferenceable(16) %str, { i64, i8* } { i64 239, i8* getelementptr inbounds ([240 x i8], [240 x i8]* @.str.42, i32 0, i32 0) }) #1 ; [#uses = 0]
  br label %unrolledend58

unrolledend58:                                    ; preds = %unrolledstmt59
  br label %unrolledstmt4

unrolledstmt4:                                    ; preds = %unrolledend58
  br label %unrolledstmt61

unrolledstmt61:                                   ; preds = %unrolledstmt4
  %4 = call { i64, i8* }* @_D4core8internal5array9appending__T15_d_arrayappendTHTAyaTyaZQBaFNaNbNcNeMNkKQxMQBaZQBe({ i64, i8* }* dereferenceable(16) %str, { i64, i8* } { i64 233, i8* getelementptr inbounds ([234 x i8], [234 x i8]* @.str.43, i32 0, i32 0) }) #1 ; [#uses = 0]
  br label %unrolledend60

unrolledend60:                                    ; preds = %unrolledstmt61
  br label %unrolledstmt5

unrolledstmt5:                                    ; preds = %unrolledend60
  br label %unrolledstmt63

unrolledstmt63:                                   ; preds = %unrolledstmt5
  %5 = call { i64, i8* }* @_D4core8internal5array9appending__T15_d_arrayappendTHTAyaTyaZQBaFNaNbNcNeMNkKQxMQBaZQBe({ i64, i8* }* dereferenceable(16) %str, { i64, i8* } { i64 233, i8* getelementptr inbounds ([234 x i8], [234 x i8]* @.str.44, i32 0, i32 0) }) #1 ; [#uses = 0]
  br label %unrolledstmt64

unrolledstmt64:                                   ; preds = %unrolledstmt63
  br label %unrolledend62

unrolledend62:                                    ; preds = %unrolledstmt64
  br label %unrolledstmt6

unrolledstmt6:                                    ; preds = %unrolledend62
  br label %unrolledstmt66

unrolledstmt66:                                   ; preds = %unrolledstmt6
  br label %unrolledend65

unrolledend65:                                    ; preds = %unrolledstmt66
  br label %unrolledstmt7

unrolledstmt7:                                    ; preds = %unrolledend65
  br label %unrolledstmt8

unrolledstmt8:                                    ; preds = %unrolledstmt7
  br label %unrolledstmt9

unrolledstmt9:                                    ; preds = %unrolledstmt8
  br label %unrolledstmt10

unrolledstmt10:                                   ; preds = %unrolledstmt9
  br label %unrolledstmt11

unrolledstmt11:                                   ; preds = %unrolledstmt10
  br label %unrolledstmt12

unrolledstmt12:                                   ; preds = %unrolledstmt11
  br label %unrolledstmt13

unrolledstmt13:                                   ; preds = %unrolledstmt12
  br label %unrolledstmt14

unrolledstmt14:                                   ; preds = %unrolledstmt13
  br label %unrolledstmt68

unrolledstmt68:                                   ; preds = %unrolledstmt14
  br label %unrolledend67

unrolledend67:                                    ; preds = %unrolledstmt68
  br label %unrolledstmt15

unrolledstmt15:                                   ; preds = %unrolledend67
  br label %unrolledstmt70

unrolledstmt70:                                   ; preds = %unrolledstmt15
  br label %unrolledend69

unrolledend69:                                    ; preds = %unrolledstmt70
  br label %unrolledstmt16

unrolledstmt16:                                   ; preds = %unrolledend69
  br label %unrolledstmt72

unrolledstmt72:                                   ; preds = %unrolledstmt16
  br label %unrolledend71

unrolledend71:                                    ; preds = %unrolledstmt72
  br label %unrolledstmt17

unrolledstmt17:                                   ; preds = %unrolledend71
  br label %unrolledstmt18

unrolledstmt18:                                   ; preds = %unrolledstmt17
  br label %unrolledstmt74

unrolledstmt74:                                   ; preds = %unrolledstmt18
  br label %unrolledend73

unrolledend73:                                    ; preds = %unrolledstmt74
  br label %unrolledstmt19

unrolledstmt19:                                   ; preds = %unrolledend73
  br label %unrolledstmt76

unrolledstmt76:                                   ; preds = %unrolledstmt19
  br label %unrolledend75

unrolledend75:                                    ; preds = %unrolledstmt76
  br label %unrolledstmt20

unrolledstmt20:                                   ; preds = %unrolledend75
  br label %unrolledstmt21

unrolledstmt21:                                   ; preds = %unrolledstmt20
  br label %unrolledstmt78

unrolledstmt78:                                   ; preds = %unrolledstmt21
  br label %unrolledend77

unrolledend77:                                    ; preds = %unrolledstmt78
  br label %unrolledstmt22

unrolledstmt22:                                   ; preds = %unrolledend77
  br label %unrolledstmt80

unrolledstmt80:                                   ; preds = %unrolledstmt22
  br label %unrolledend79

unrolledend79:                                    ; preds = %unrolledstmt80
  br label %unrolledstmt23

unrolledstmt23:                                   ; preds = %unrolledend79
  br label %unrolledstmt82

unrolledstmt82:                                   ; preds = %unrolledstmt23
  br label %unrolledend81

unrolledend81:                                    ; preds = %unrolledstmt82
  br label %unrolledstmt24

unrolledstmt24:                                   ; preds = %unrolledend81
  br label %unrolledstmt84

unrolledstmt84:                                   ; preds = %unrolledstmt24
  br label %unrolledend83

unrolledend83:                                    ; preds = %unrolledstmt84
  br label %unrolledstmt25

unrolledstmt25:                                   ; preds = %unrolledend83
  br label %unrolledstmt86

unrolledstmt86:                                   ; preds = %unrolledstmt25
  br label %unrolledend85

unrolledend85:                                    ; preds = %unrolledstmt86
  br label %unrolledstmt26

unrolledstmt26:                                   ; preds = %unrolledend85
  br label %unrolledstmt88

unrolledstmt88:                                   ; preds = %unrolledstmt26
  br label %unrolledend87

unrolledend87:                                    ; preds = %unrolledstmt88
  br label %unrolledstmt27

unrolledstmt27:                                   ; preds = %unrolledend87
  br label %unrolledstmt90

unrolledstmt90:                                   ; preds = %unrolledstmt27
  br label %unrolledend89

unrolledend89:                                    ; preds = %unrolledstmt90
  br label %unrolledstmt28

unrolledstmt28:                                   ; preds = %unrolledend89
  br label %unrolledstmt92

unrolledstmt92:                                   ; preds = %unrolledstmt28
  br label %unrolledend91

unrolledend91:                                    ; preds = %unrolledstmt92
  br label %unrolledstmt29

unrolledstmt29:                                   ; preds = %unrolledend91
  br label %unrolledstmt94

unrolledstmt94:                                   ; preds = %unrolledstmt29
  br label %unrolledend93

unrolledend93:                                    ; preds = %unrolledstmt94
  br label %unrolledstmt30

unrolledstmt30:                                   ; preds = %unrolledend93
  br label %unrolledstmt96

unrolledstmt96:                                   ; preds = %unrolledstmt30
  br label %unrolledend95

unrolledend95:                                    ; preds = %unrolledstmt96
  br label %unrolledstmt31

unrolledstmt31:                                   ; preds = %unrolledend95
  br label %unrolledstmt98

unrolledstmt98:                                   ; preds = %unrolledstmt31
  br label %unrolledend97

unrolledend97:                                    ; preds = %unrolledstmt98
  br label %unrolledstmt32

unrolledstmt32:                                   ; preds = %unrolledend97
  br label %unrolledstmt100

unrolledstmt100:                                  ; preds = %unrolledstmt32
  %6 = call { i64, i8* }* @_D4core8internal5array9appending__T15_d_arrayappendTHTAyaTyaZQBaFNaNbNcNeMNkKQxMQBaZQBe({ i64, i8* }* dereferenceable(16) %str, { i64, i8* } { i64 293, i8* getelementptr inbounds ([294 x i8], [294 x i8]* @.str.45, i32 0, i32 0) }) #1 ; [#uses = 0]
  br label %unrolledend99

unrolledend99:                                    ; preds = %unrolledstmt100
  br label %unrolledstmt33

unrolledstmt33:                                   ; preds = %unrolledend99
  br label %unrolledstmt102

unrolledstmt102:                                  ; preds = %unrolledstmt33
  br label %unrolledend101

unrolledend101:                                   ; preds = %unrolledstmt102
  br label %unrolledstmt34

unrolledstmt34:                                   ; preds = %unrolledend101
  br label %unrolledstmt104

unrolledstmt104:                                  ; preds = %unrolledstmt34
  br label %unrolledend103

unrolledend103:                                   ; preds = %unrolledstmt104
  br label %unrolledstmt35

unrolledstmt35:                                   ; preds = %unrolledend103
  br label %unrolledstmt106

unrolledstmt106:                                  ; preds = %unrolledstmt35
  br label %unrolledend105

unrolledend105:                                   ; preds = %unrolledstmt106
  br label %unrolledstmt36

unrolledstmt36:                                   ; preds = %unrolledend105
  br label %unrolledstmt108

unrolledstmt108:                                  ; preds = %unrolledstmt36
  br label %unrolledend107

unrolledend107:                                   ; preds = %unrolledstmt108
  br label %unrolledstmt37

unrolledstmt37:                                   ; preds = %unrolledend107
  br label %unrolledstmt38

unrolledstmt38:                                   ; preds = %unrolledstmt37
  br label %unrolledstmt39

unrolledstmt39:                                   ; preds = %unrolledstmt38
  br label %unrolledstmt40

unrolledstmt40:                                   ; preds = %unrolledstmt39
  br label %unrolledstmt110

unrolledstmt110:                                  ; preds = %unrolledstmt40
  br label %unrolledend109

unrolledend109:                                   ; preds = %unrolledstmt110
  br label %unrolledstmt41

unrolledstmt41:                                   ; preds = %unrolledend109
  br label %unrolledstmt112

unrolledstmt112:                                  ; preds = %unrolledstmt41
  br label %unrolledend111

unrolledend111:                                   ; preds = %unrolledstmt112
  br label %unrolledstmt42

unrolledstmt42:                                   ; preds = %unrolledend111
  br label %unrolledstmt114

unrolledstmt114:                                  ; preds = %unrolledstmt42
  br label %unrolledend113

unrolledend113:                                   ; preds = %unrolledstmt114
  br label %unrolledstmt43

unrolledstmt43:                                   ; preds = %unrolledend113
  br label %unrolledstmt116

unrolledstmt116:                                  ; preds = %unrolledstmt43
  br label %unrolledend115

unrolledend115:                                   ; preds = %unrolledstmt116
  br label %unrolledstmt44

unrolledstmt44:                                   ; preds = %unrolledend115
  br label %unrolledstmt118

unrolledstmt118:                                  ; preds = %unrolledstmt44
  br label %unrolledend117

unrolledend117:                                   ; preds = %unrolledstmt118
  br label %unrolledstmt45

unrolledstmt45:                                   ; preds = %unrolledend117
  br label %unrolledstmt120

unrolledstmt120:                                  ; preds = %unrolledstmt45
  br label %unrolledend119

unrolledend119:                                   ; preds = %unrolledstmt120
  br label %unrolledstmt46

unrolledstmt46:                                   ; preds = %unrolledend119
  br label %unrolledstmt122

unrolledstmt122:                                  ; preds = %unrolledstmt46
  br label %unrolledend121

unrolledend121:                                   ; preds = %unrolledstmt122
  br label %unrolledstmt47

unrolledstmt47:                                   ; preds = %unrolledend121
  br label %unrolledstmt124

unrolledstmt124:                                  ; preds = %unrolledstmt47
  br label %unrolledend123

unrolledend123:                                   ; preds = %unrolledstmt124
  br label %unrolledstmt48

unrolledstmt48:                                   ; preds = %unrolledend123
  br label %unrolledstmt126

unrolledstmt126:                                  ; preds = %unrolledstmt48
  br label %unrolledend125

unrolledend125:                                   ; preds = %unrolledstmt126
  br label %unrolledstmt49

unrolledstmt49:                                   ; preds = %unrolledend125
  br label %unrolledstmt128

unrolledstmt128:                                  ; preds = %unrolledstmt49
  br label %unrolledend127

unrolledend127:                                   ; preds = %unrolledstmt128
  br label %unrolledstmt50

unrolledstmt50:                                   ; preds = %unrolledend127
  br label %unrolledstmt51

unrolledstmt51:                                   ; preds = %unrolledstmt50
  br label %unrolledstmt130

unrolledstmt130:                                  ; preds = %unrolledstmt51
  br label %unrolledend129

unrolledend129:                                   ; preds = %unrolledstmt130
  br label %unrolledend

unrolledend:                                      ; preds = %unrolledend129
  %7 = load { i64, i8* }, { i64, i8* }* %str, align 8 ; [#uses = 0]
  %8 = load { i64, i8* }, { i64, i8* }* %str, align 8 ; [#uses = 1]
  ret { i64, i8* } %8
}

; [#uses = 4]
; Function Attrs: uwtable
define weak_odr { i64, i8* }* @_D4core8internal5array9appending__T15_d_arrayappendTHTAyaTyaZQBaFNaNbNcNeMNkKQxMQBaZQBe({ i64, i8* }* dereferenceable(16) %x, { i64, i8* } %y_arg) #0 {
  %y = alloca { i64, i8* }, align 8               ; [#uses = 6, size/byte = 16]
  %length = alloca i64, align 8                   ; [#uses = 3, size/byte = 8]
  %xptr = alloca i8*, align 8                     ; [#uses = 2, size/byte = 8]
  %size = alloca i64, align 8                     ; [#uses = 1, size/byte = 8]
  store { i64, i8* } %y_arg, { i64, i8* }* %y, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %x, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  store i64 %.len, i64* %length, align 8
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %y, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %2, align 8             ; [#uses = 1]
  %3 = call { i64, i8* }* @_D4core8internal5array9appending__T21_d_arrayappendcTXImplHTAyaTyaZ17_d_arrayappendcTXFNaNbNcNeMNkKQBnmZQBs({ i64, i8* }* dereferenceable(16) %x, i64 %.len1) #0 ; [#uses = 0]
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %y, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len2 = load i64, i64* %4, align 8             ; [#uses = 1]
  %5 = icmp ne i64 %.len2, 0                      ; [#uses = 1]
  br i1 %5, label %if, label %endif

if:                                               ; preds = %0
  %6 = load i64, i64* %length, align 8            ; [#uses = 2]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %x, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len3 = load i64, i64* %7, align 8             ; [#uses = 2]
  %bounds.cmp = icmp ult i64 %6, %.len3           ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %if
  %8 = load i64, i64* %length, align 8            ; [#uses = 1]
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %x, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %9, align 8              ; [#uses = 1]
  %10 = getelementptr inbounds i8, i8* %.ptr, i64 %8 ; [#uses = 1, type = i8*]
  store i8* %10, i8** %xptr, align 8
  store i64 1, i64* %size, align 8
  %11 = load i8*, i8** %xptr, align 8             ; [#uses = 1]
  %12 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %y, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len4 = load i64, i64* %12, align 8            ; [#uses = 2]
  %bounds.cmp5 = icmp ult i64 0, %.len4           ; [#uses = 1]
  br i1 %bounds.cmp5, label %bounds.ok6, label %bounds.fail7

bounds.ok6:                                       ; preds = %bounds.ok
  %13 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %y, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr8 = load i8*, i8** %13, align 8            ; [#uses = 1]
  %14 = getelementptr inbounds i8, i8* %.ptr8, i64 0 ; [#uses = 1, type = i8*]
  %15 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %y, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len9 = load i64, i64* %15, align 8            ; [#uses = 1]
  %16 = mul i64 %.len9, 1                         ; [#uses = 1]
  %17 = call i8* @memcpy(i8* %11, i8* %14, i64 %16) #1 ; [#uses = 0]
  br label %endif

bounds.fail7:                                     ; preds = %bounds.ok
  call void @_d_arraybounds_index({ i64, i8* } { i64 71, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.53, i32 0, i32 0) }, i32 99, i64 0, i64 %.len4) #5
  unreachable

bounds.fail:                                      ; preds = %if
  call void @_d_arraybounds_index({ i64, i8* } { i64 71, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.53, i32 0, i32 0) }, i32 96, i64 %6, i64 %.len3) #5
  unreachable

endif:                                            ; preds = %bounds.ok6, %0
  ret { i64, i8* }* %x
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr { i64, { i64, i8* }* } @_D3std5array__T5splitTAyaTQeZQoFNaNbNfQqQsZAQw({ i64, i8* } %range_arg, { i64, i8* } %sep_arg) #0 {
  %range = alloca { i64, i8* }, align 8           ; [#uses = 2, size/byte = 16]
  %sep = alloca { i64, i8* }, align 8             ; [#uses = 2, size/byte = 16]
  %.sret_tmp = alloca %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", align 8 ; [#uses = 2, size/byte = 40]
  store { i64, i8* } %range_arg, { i64, i8* }* %range, align 8
  store { i64, i8* } %sep_arg, { i64, i8* }* %sep, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %range, align 8 ; [#uses = 1]
  %2 = load { i64, i8* }, { i64, i8* }* %sep, align 8 ; [#uses = 1]
  call void @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFNaNbNiNfQDzQEcZSQFsQFrQFk__TQFdVQExa6_61203d3d2062VQExi0TQFwTQGaZQGoFQGiQGlZ6Result(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* noalias sret(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result") align 8 %.sret_tmp, { i64, i8* } %1, { i64, i8* } %2) #1
  %3 = call { i64, { i64, i8* }* } @_D3std5array__TQjTSQr9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCu8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6ResultZQGcFNaNbNfQGaZAQEv(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* byval(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result") align 8 %.sret_tmp) #1 ; [#uses = 1]
  ret { i64, { i64, i8* }* } %3
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, { i64, i8* }* } @_D3std5array__TQjTSQr9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCu8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6ResultZQGcFNaNbNfQGaZAQEv(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* byval(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result") align 8 %r) #0 {
  %a = alloca %"std.array.Appender!(string[]).Appender", align 8 ; [#uses = 3, size/byte = 8]
  %1 = alloca %"std.array.Appender!(string[]).Appender", align 8 ; [#uses = 2, size/byte = 8]
  %__r2024 = alloca %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", align 8 ; [#uses = 4, size/byte = 40]
  %e = alloca { i64, i8* }, align 8               ; [#uses = 3, size/byte = 16]
  %2 = call %"std.array.Appender!(string[]).Appender" @_D3std5array__T8appenderTAAyaZQpFNaNbNfZSQBnQBm__T8AppenderTQBjZQo() #1 ; [#uses = 1]
  store %"std.array.Appender!(string[]).Appender" %2, %"std.array.Appender!(string[]).Appender"* %1, align 8
  %3 = bitcast %"std.array.Appender!(string[]).Appender"* %a to i8* ; [#uses = 1]
  %4 = bitcast %"std.array.Appender!(string[]).Appender"* %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 8, i1 false)
  %5 = bitcast %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %__r2024 to i8* ; [#uses = 1]
  %6 = bitcast %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %r to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 40, i1 false)
  br label %forcond

forcond:                                          ; preds = %forinc, %0
  %7 = call zeroext i1 @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result5emptyMFNaNbNdNiNfZb(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %__r2024) #0 ; [#uses = 1]
  %8 = icmp eq i1 %7, false                       ; [#uses = 1]
  br i1 %8, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %9 = call { i64, i8* } @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result5frontMFNaNbNdNiNfZQEy(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %__r2024) #0 ; [#uses = 2]
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %e, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = extractvalue { i64, i8* } %9, 0         ; [#uses = 1]
  store i64 %.len, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %e, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = extractvalue { i64, i8* } %9, 1         ; [#uses = 1]
  store i8* %.ptr, i8** %11, align 8
  %12 = load { i64, i8* }, { i64, i8* }* %e, align 8 ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAAyaZQp__T3putTQoZQiMFNaNbNfQBbZv(%"std.array.Appender!(string[]).Appender"* nonnull %a, { i64, i8* } %12) #1
  br label %forinc

forinc:                                           ; preds = %forbody
  call void @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result8popFrontMFNaNbNiNfZv(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %__r2024) #0
  br label %forcond

endfor:                                           ; preds = %forcond
  %13 = call { i64, { i64, i8* }* } @_D3std5array__T8AppenderTAAyaZQp4dataMNgFNaNbNdNiNeZANgAya(%"std.array.Appender!(string[]).Appender"* nonnull %a) #1 ; [#uses = 1]
  ret { i64, { i64, i8* }* } %13
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFNaNbNiNfQDzQEcZSQFsQFrQFk__TQFdVQExa6_61203d3d2062VQExi0TQFwTQGaZQGoFQGiQGlZ6Result(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* noalias sret(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result") align 8 %.sret_arg, { i64, i8* } %r_arg, { i64, i8* } %s_arg) #0 {
  %r = alloca { i64, i8* }, align 8               ; [#uses = 2, size/byte = 16]
  %s = alloca { i64, i8* }, align 8               ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %r_arg, { i64, i8* }* %r, align 8
  store { i64, i8* } %s_arg, { i64, i8* }* %s, align 8
  %1 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.sret_arg, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  store { i64, i8* } zeroinitializer, { i64, i8* }* %1, align 8
  %2 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.sret_arg, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }*]
  store { i64, i8* } zeroinitializer, { i64, i8* }* %2, align 8
  %3 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.sret_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  store i64 -1, i64* %3, align 8
  %4 = load { i64, i8* }, { i64, i8* }* %r, align 8 ; [#uses = 1]
  %5 = load { i64, i8* }, { i64, i8* }* %s, align 8 ; [#uses = 1]
  %6 = call %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result6__ctorMFNaNbNcNiNfQEyQFbZSQGrQGqQGj__TQGcVQFwa6_61203d3d2062VQFwi0TQGvTQGzZQHnFQHhQHkZQDq(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull returned %.sret_arg, { i64, i8* } %4, { i64, i8* } %5) #0 ; [#uses = 0]
  ret void
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr i64 @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result15separatorLengthMFNaNbNdNiNfZm(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %.this_arg) #0 {
  %1 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }*]
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %1, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %2, align 8              ; [#uses = 1]
  ret i64 %.len
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr void @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result17ensureFrontLengthMFNaNbNiNfZv(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %.this_arg) #0 {
  %condtmp = alloca i64*, align 8                 ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp = alloca i64, align 8           ; [#uses = 2, size/byte = 8]
  %.makelvaluetmp2 = alloca i64, align 8          ; [#uses = 2, size/byte = 8]
  %1 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  %2 = load i64, i64* %1, align 8                 ; [#uses = 1]
  %3 = icmp ne i64 %2, -1                         ; [#uses = 1]
  br i1 %3, label %if, label %endif

if:                                               ; preds = %0
  ret void

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %0
  %4 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %5 = call zeroext i1 @_D3std5range10primitives__T5emptyTAyaZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %4) #0 ; [#uses = 1]
  %6 = icmp eq i1 %5, false                       ; [#uses = 1]
  br i1 %6, label %assertPassed, label %assertFailed

assertPassed:                                     ; preds = %endif
  %7 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  %8 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }*]
  %9 = call zeroext i1 @_D3std5range10primitives__T5emptyTAyaZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %8) #0 ; [#uses = 1]
  br i1 %9, label %condtrue, label %condfalse

condtrue:                                         ; preds = %assertPassed
  store i64 1, i64* %.makelvaluetmp, align 8
  store i64* %.makelvaluetmp, i64** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %assertPassed
  %10 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %10, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %11, align 8             ; [#uses = 1]
  %12 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %13 = load { i64, i8* }, { i64, i8* }* %12, align 8 ; [#uses = 1]
  %14 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }*]
  %15 = load { i64, i8* }, { i64, i8* }* %14, align 8 ; [#uses = 1]
  %16 = call { i64, i8* } @_D3std9algorithm9searching__T4findVAyaa6_61203d3d2062TQtTQwZQBfFNaNbNiNfQBlMQBpZQBt({ i64, i8* } %13, { i64, i8* } %15) #1 ; [#uses = 1]
  %.len1 = extractvalue { i64, i8* } %16, 0       ; [#uses = 1]
  %17 = sub i64 %.len, %.len1                     ; [#uses = 1]
  store i64 %17, i64* %.makelvaluetmp2, align 8
  store i64* %.makelvaluetmp2, i64** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %18 = load i64*, i64** %condtmp, align 8        ; [#uses = 1]
  %19 = load i64, i64* %18, align 8               ; [#uses = 1]
  store i64 %19, i64* %7, align 8
  ret void

assertFailed:                                     ; preds = %endif
  call void @_d_assert_msg({ i64, i8* } { i64 27, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.46, i32 0, i32 0) }, { i64, i8* } { i64 65, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.47, i32 0, i32 0) }, i32 5951) #5
  unreachable
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std9algorithm9searching__T4findVAyaa6_61203d3d2062TQtTQwZQBfFNaNbNiNfQBlMQBpZQBt({ i64, i8* } %haystack_arg, { i64, i8* } %needle_arg) #0 {
  %haystack = alloca { i64, i8* }, align 8        ; [#uses = 2, size/byte = 16]
  %needle = alloca { i64, i8* }, align 8          ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %haystack_arg, { i64, i8* }* %haystack, align 8
  store { i64, i8* } %needle_arg, { i64, i8* }* %needle, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %haystack, align 8 ; [#uses = 1]
  %2 = call { i64, i8* } @_D3std9algorithm9searching__T4findVAyaa6_61203d3d2062TQtTQwZQBfFQBdMQBhZ__T5forceTAhTAaZQnFNaNbNiNeNgAaZQw({ i64, i8* } %1) #1 ; [#uses = 1]
  %3 = load { i64, i8* }, { i64, i8* }* %needle, align 8 ; [#uses = 1]
  %4 = call { i64, i8* } @_D3std9algorithm9searching__T4findVAyaa6_61203d3d2062TQtTQwZQBfFQBdMQBhZ__T5forceTAhTAaZQnFNaNbNiNeNgAaZQw({ i64, i8* } %3) #1 ; [#uses = 1]
  %5 = call { i64, i8* } @_D3std9algorithm9searching__T4findVAyaa6_61203d3d2062TAhTQdZQBfFNaNbNiNfQsMQvZQy({ i64, i8* } %2, { i64, i8* } %4) #1 ; [#uses = 1]
  %6 = call { i64, i8* } @_D3std9algorithm9searching__T4findVAyaa6_61203d3d2062TQtTQwZQBfFQBdMQBhZ__T5forceTQBvTAhZQoFNaNbNiNeNgAhZQCs({ i64, i8* } %5) #1 ; [#uses = 1]
  ret { i64, i8* } %6
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result6__ctorMFNaNbNcNiNfQEyQFbZSQGrQGqQGj__TQGcVQFwa6_61203d3d2062VQFwi0TQGvTQGzZQHnFQHhQHkZQDq(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull returned %.this_arg, { i64, i8* } %input_arg, { i64, i8* } %separator_arg) #0 {
  %input = alloca { i64, i8* }, align 8           ; [#uses = 3, size/byte = 16]
  %separator = alloca { i64, i8* }, align 8       ; [#uses = 3, size/byte = 16]
  store { i64, i8* } %input_arg, { i64, i8* }* %input, align 8
  store { i64, i8* } %separator_arg, { i64, i8* }* %separator, align 8
  %1 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 2, type = { i64, i8* }*]
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %1, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %input, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %3, align 8              ; [#uses = 1]
  store i64 %.len, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %1, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %input, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %5, align 8              ; [#uses = 1]
  store i8* %.ptr, i8** %4, align 8
  %6 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 1 ; [#uses = 2, type = { i64, i8* }*]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %6, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %separator, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %8, align 8             ; [#uses = 1]
  store i64 %.len1, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %6, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %separator, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr2 = load i8*, i8** %10, align 8            ; [#uses = 1]
  store i8* %.ptr2, i8** %9, align 8
  ret %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result5frontMFNaNbNdNiNfZQEy(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %.this_arg) #0 {
  %1 = call zeroext i1 @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result5emptyMFNaNbNdNiNfZb(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %.this_arg) #1 ; [#uses = 1]
  %2 = icmp eq i1 %1, false                       ; [#uses = 1]
  br i1 %2, label %assertPassed, label %assertFailed

assertPassed:                                     ; preds = %0
  call void @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result17ensureFrontLengthMFNaNbNiNfZv(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %.this_arg) #0
  %3 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 2, type = { i64, i8* }*]
  %4 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  %5 = load i64, i64* %4, align 8                 ; [#uses = 3]
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %6, align 8              ; [#uses = 2]
  %bounds.cmp.up = icmp ule i64 %5, %.len         ; [#uses = 1]
  br i1 %bounds.cmp.up, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %assertPassed
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %7, align 8              ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr, i64 0 ; [#uses = 1, type = i8*]
  %8 = sub i64 %5, 0                              ; [#uses = 1]
  %9 = insertvalue { i64, i8* } undef, i64 %8, 0  ; [#uses = 1]
  %10 = insertvalue { i64, i8* } %9, i8* %lowerbound, 1 ; [#uses = 1]
  ret { i64, i8* } %10

bounds.fail:                                      ; preds = %assertPassed
  call void @_d_arraybounds_slice({ i64, i8* } { i64 65, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.47, i32 0, i32 0) }, i32 5969, i64 0, i64 %5, i64 %.len) #5
  unreachable

assertFailed:                                     ; preds = %0
  call void @_d_assert_msg({ i64, i8* } { i64 51, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.48, i32 0, i32 0) }, { i64, i8* } { i64 65, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.47, i32 0, i32 0) }, i32 5967) #5
  unreachable
}

; [#uses = 3]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result5emptyMFNaNbNdNiNfZb(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %.this_arg) #0 {
  %1 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  %2 = load i64, i64* %1, align 8                 ; [#uses = 1]
  %3 = icmp eq i64 %2, -1                         ; [#uses = 1]
  br i1 %3, label %andand, label %andandend

andand:                                           ; preds = %0
  %4 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %5 = call zeroext i1 @_D3std5range10primitives__T5emptyTAyaZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %4) #0 ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %0
  %andandval = phi i1 [ false, %0 ], [ %5, %andand ] ; [#uses = 1, type = i1]
  ret i1 %andandval
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result8popFrontMFNaNbNiNfZv(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %.this_arg) #0 {
  %1 = call zeroext i1 @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result5emptyMFNaNbNdNiNfZb(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %.this_arg) #0 ; [#uses = 1]
  %2 = icmp eq i1 %1, false                       ; [#uses = 1]
  br i1 %2, label %assertPassed, label %assertFailed

assertPassed:                                     ; preds = %0
  call void @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result17ensureFrontLengthMFNaNbNiNfZv(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %.this_arg) #0
  %3 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  %4 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %4, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %5, align 8              ; [#uses = 1]
  %6 = load i64, i64* %3, align 8                 ; [#uses = 1]
  %7 = icmp eq i64 %6, %.len                      ; [#uses = 1]
  br i1 %7, label %if, label %endif

if:                                               ; preds = %assertPassed
  %8 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 2, type = { i64, i8* }*]
  %9 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 2, type = { i64, i8* }*]
  %10 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  %11 = load i64, i64* %10, align 8               ; [#uses = 4]
  %12 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  %13 = load i64, i64* %12, align 8               ; [#uses = 4]
  %14 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %9, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %14, align 8            ; [#uses = 2]
  %bounds.cmp.up = icmp ule i64 %13, %.len1       ; [#uses = 1]
  %bounds.cmp.lo = icmp ule i64 %11, %13          ; [#uses = 1]
  %15 = and i1 %bounds.cmp.up, %bounds.cmp.lo     ; [#uses = 1]
  br i1 %15, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %if
  %16 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %9, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %16, align 8             ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr, i64 %11 ; [#uses = 2, type = i8*]
  %17 = sub i64 %13, %11                          ; [#uses = 2]
  %18 = insertvalue { i64, i8* } undef, i64 %17, 0 ; [#uses = 1]
  %19 = insertvalue { i64, i8* } %18, i8* %lowerbound, 1 ; [#uses = 0]
  %20 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %8, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %17, i64* %20, align 8
  %21 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %8, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound, i8** %21, align 8
  %22 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  store i64 -1, i64* %22, align 8
  ret void

dummy.afterreturn:                                ; No predecessors!
  br label %endif

bounds.fail:                                      ; preds = %if
  call void @_d_arraybounds_slice({ i64, i8* } { i64 65, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.47, i32 0, i32 0) }, i32 6005, i64 %11, i64 %13, i64 %.len1) #5
  unreachable

endif:                                            ; preds = %dummy.afterreturn, %assertPassed
  %23 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  %24 = load i64, i64* %23, align 8               ; [#uses = 1]
  %25 = call i64 @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result15separatorLengthMFNaNbNdNiNfZm(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %.this_arg) #0 ; [#uses = 1]
  %26 = add i64 %24, %25                          ; [#uses = 1]
  %27 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %28 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %27, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len2 = load i64, i64* %28, align 8            ; [#uses = 1]
  %29 = icmp eq i64 %26, %.len2                   ; [#uses = 1]
  br i1 %29, label %if3, label %endif4

if3:                                              ; preds = %endif
  %30 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 2, type = { i64, i8* }*]
  %31 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 2, type = { i64, i8* }*]
  %32 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %33 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %32, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len5 = load i64, i64* %33, align 8            ; [#uses = 4]
  %34 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %35 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %34, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len6 = load i64, i64* %35, align 8            ; [#uses = 4]
  %36 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %31, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len9 = load i64, i64* %36, align 8            ; [#uses = 2]
  %bounds.cmp.up10 = icmp ule i64 %.len6, %.len9  ; [#uses = 1]
  %bounds.cmp.lo11 = icmp ule i64 %.len5, %.len6  ; [#uses = 1]
  %37 = and i1 %bounds.cmp.up10, %bounds.cmp.lo11 ; [#uses = 1]
  br i1 %37, label %bounds.ok7, label %bounds.fail8

bounds.ok7:                                       ; preds = %if3
  %38 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %31, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr12 = load i8*, i8** %38, align 8           ; [#uses = 1]
  %lowerbound13 = getelementptr inbounds i8, i8* %.ptr12, i64 %.len5 ; [#uses = 2, type = i8*]
  %39 = sub i64 %.len6, %.len5                    ; [#uses = 2]
  %40 = insertvalue { i64, i8* } undef, i64 %39, 0 ; [#uses = 1]
  %41 = insertvalue { i64, i8* } %40, i8* %lowerbound13, 1 ; [#uses = 0]
  %42 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %30, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %39, i64* %42, align 8
  %43 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %30, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound13, i8** %43, align 8
  %44 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  store i64 0, i64* %44, align 8
  ret void

dummy.afterreturn14:                              ; No predecessors!
  br label %endif4

bounds.fail8:                                     ; preds = %if3
  call void @_d_arraybounds_slice({ i64, i8* } { i64 65, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.47, i32 0, i32 0) }, i32 6013, i64 %.len5, i64 %.len6, i64 %.len9) #5
  unreachable

endif4:                                           ; preds = %dummy.afterreturn14, %endif
  %45 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 2, type = { i64, i8* }*]
  %46 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 2, type = { i64, i8* }*]
  %47 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  %48 = load i64, i64* %47, align 8               ; [#uses = 1]
  %49 = call i64 @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result15separatorLengthMFNaNbNdNiNfZm(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %.this_arg) #0 ; [#uses = 1]
  %50 = add i64 %48, %49                          ; [#uses = 4]
  %51 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %52 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %51, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len15 = load i64, i64* %52, align 8           ; [#uses = 4]
  %53 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %46, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len18 = load i64, i64* %53, align 8           ; [#uses = 2]
  %bounds.cmp.up19 = icmp ule i64 %.len15, %.len18 ; [#uses = 1]
  %bounds.cmp.lo20 = icmp ule i64 %50, %.len15    ; [#uses = 1]
  %54 = and i1 %bounds.cmp.up19, %bounds.cmp.lo20 ; [#uses = 1]
  br i1 %54, label %bounds.ok16, label %bounds.fail17

bounds.ok16:                                      ; preds = %endif4
  %55 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %46, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr21 = load i8*, i8** %55, align 8           ; [#uses = 1]
  %lowerbound22 = getelementptr inbounds i8, i8* %.ptr21, i64 %50 ; [#uses = 2, type = i8*]
  %56 = sub i64 %.len15, %50                      ; [#uses = 2]
  %57 = insertvalue { i64, i8* } undef, i64 %56, 0 ; [#uses = 1]
  %58 = insertvalue { i64, i8* } %57, i8* %lowerbound22, 1 ; [#uses = 0]
  %59 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %45, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %56, i64* %59, align 8
  %60 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %45, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound22, i8** %60, align 8
  %61 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  store i64 -1, i64* %61, align 8
  ret void

bounds.fail17:                                    ; preds = %endif4
  call void @_d_arraybounds_slice({ i64, i8* } { i64 65, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.47, i32 0, i32 0) }, i32 6019, i64 %50, i64 %.len15, i64 %.len18) #5
  unreachable

assertFailed:                                     ; preds = %0
  call void @_d_assert_msg({ i64, i8* } { i64 41, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.49, i32 0, i32 0) }, { i64, i8* } { i64 65, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.47, i32 0, i32 0) }, i32 5993) #5
  unreachable
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr void @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result4saveMFNaNbNdNiNfZSQGjQGiQGb__TQFuVQFoa6_61203d3d2062VQFoi0TQGnTQGrZQHfFQGzQHcZQDi(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* noalias sret(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result") align 8 %.sret_arg, %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %.this_arg) #0 {
  %1 = bitcast %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.sret_arg to i8* ; [#uses = 1]
  %2 = bitcast %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 40, i1 false)
  %3 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.sret_arg, i32 0, i32 0 ; [#uses = 2, type = { i64, i8* }*]
  %4 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %5 = load { i64, i8* }, { i64, i8* }* %4, align 8 ; [#uses = 1]
  %6 = call { i64, i8* } @_D3std5range10primitives__T4saveTaZQiFNaNbNdNiNfNkMANgaZQf({ i64, i8* } %5) #0 ; [#uses = 2]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = extractvalue { i64, i8* } %6, 0         ; [#uses = 1]
  store i64 %.len, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = extractvalue { i64, i8* } %6, 1         ; [#uses = 1]
  store i8* %.ptr, i8** %8, align 8
  ret void
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result11__xopEqualsMxFKxSQGjQGiQGb__TQFuVQFoa6_61203d3d2062VQFoi0TQGnTQGrZQHfFQGzQHcZQDiZb(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* nonnull %.this_arg, %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* dereferenceable(40) %p) #0 {
  %1 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %2 = load { i64, i8* }, { i64, i8* }* %1, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %p, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %4 = load { i64, i8* }, { i64, i8* }* %3, align 8 ; [#uses = 1]
  %5 = call zeroext i1 @_D4core8internal5array8equality__T8__equalsTaTaZQoFNaNbNiNeMxAaMxQeZb({ i64, i8* } %2, { i64, i8* } %4) #1 ; [#uses = 1]
  br i1 %5, label %andand, label %andandend

andand:                                           ; preds = %0
  %6 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }*]
  %7 = load { i64, i8* }, { i64, i8* }* %6, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %p, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }*]
  %9 = load { i64, i8* }, { i64, i8* }* %8, align 8 ; [#uses = 1]
  %10 = call zeroext i1 @_D4core8internal5array8equality__T8__equalsTaTaZQoFNaNbNiNeMxAaMxQeZb({ i64, i8* } %7, { i64, i8* } %9) #1 ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %0
  %andandval = phi i1 [ false, %0 ], [ %10, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand1, label %andandend2

andand1:                                          ; preds = %andandend
  %11 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i64*]
  %12 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %p, i32 0, i32 2 ; [#uses = 1, type = i64*]
  %13 = load i64, i64* %11, align 8               ; [#uses = 1]
  %14 = load i64, i64* %12, align 8               ; [#uses = 1]
  %15 = icmp eq i64 %13, %14                      ; [#uses = 1]
  br label %andandend2

andandend2:                                       ; preds = %andand1, %andandend
  %andandval3 = phi i1 [ false, %andandend ], [ %15, %andand1 ] ; [#uses = 1, type = i1]
  ret i1 %andandval3
}

; [#uses = 9]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D4core8internal5array8equality__T8__equalsTaTaZQoFNaNbNiNeMxAaMxQeZb({ i64, i8* } %lhs_arg, { i64, i8* } %rhs_arg) #0 {
  %lhs = alloca { i64, i8* }, align 8             ; [#uses = 3, size/byte = 16]
  %rhs = alloca { i64, i8* }, align 8             ; [#uses = 3, size/byte = 16]
  %length = alloca i64, align 8                   ; [#uses = 4, size/byte = 8]
  store { i64, i8* } %lhs_arg, { i64, i8* }* %lhs, align 8
  store { i64, i8* } %rhs_arg, { i64, i8* }* %rhs, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %lhs, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  store i64 %.len, i64* %length, align 8
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %rhs, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %2, align 8             ; [#uses = 1]
  %3 = load i64, i64* %length, align 8            ; [#uses = 1]
  %4 = icmp eq i64 %3, %.len1                     ; [#uses = 1]
  br i1 %4, label %andand, label %andandend

andand:                                           ; preds = %0
  %5 = load i64, i64* %length, align 8            ; [#uses = 1]
  %6 = icmp ne i64 %5, 0                          ; [#uses = 1]
  %7 = icmp eq i1 %6, false                       ; [#uses = 1]
  br i1 %7, label %ororend, label %oror

oror:                                             ; preds = %andand
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %lhs, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %8, align 8              ; [#uses = 1]
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %rhs, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr2 = load i8*, i8** %9, align 8             ; [#uses = 1]
  %10 = load i64, i64* %length, align 8           ; [#uses = 1]
  %11 = mul i64 %10, 1                            ; [#uses = 1]
  %12 = call i32 @memcmp(i8* %.ptr, i8* %.ptr2, i64 %11) #1 ; [#uses = 1]
  %13 = icmp eq i32 0, %12                        ; [#uses = 1]
  br label %ororend

ororend:                                          ; preds = %oror, %andand
  %ororval = phi i1 [ true, %andand ], [ %13, %oror ] ; [#uses = 1, type = i1]
  br label %andandend

andandend:                                        ; preds = %ororend, %0
  %andandval = phi i1 [ false, %0 ], [ %ororval, %ororend ] ; [#uses = 1, type = i1]
  ret i1 %andandval
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr i64 @_D3std9algorithm9iteration__T8splitterVAyaa6_61203d3d2062VEQCf8typecons__T4FlagVQBpa14_6b656570536570617261746f7273ZQBqi0TQDfTQDjZQDxFQDrQDuZ6Result9__xtoHashFNbNeKxSQGiQGhQGa__TQFtVQFna6_61203d3d2062VQFni0TQGmTQGqZQHeFQGyQHbZQDhZm(%"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* dereferenceable(40) %p) #0 {
  %h = alloca i64, align 8                        ; [#uses = 9, size/byte = 8]
  store i64 0, i64* %h, align 8
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %0
  %1 = load i64, i64* %h, align 8                 ; [#uses = 1]
  %2 = mul i64 %1, 33                             ; [#uses = 1]
  %3 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D13TypeInfo_xAya6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %4 = load [20 x i8*]*, [20 x i8*]** %3, align 8 ; [#uses = 1]
  %"getHash@vtbl" = getelementptr inbounds [20 x i8*], [20 x i8*]* %4, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %5 = load i8*, i8** %"getHash@vtbl", align 8    ; [#uses = 1]
  %getHash = bitcast i8* %5 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %6 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %p, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %7 = bitcast { i64, i8* }* %6 to i8*            ; [#uses = 1]
  %8 = call i64 %getHash(%object.TypeInfo_Const* nonnull @_D13TypeInfo_xAya6__initZ, i8* %7) ; [#uses = 1]
  %9 = add i64 %2, %8                             ; [#uses = 1]
  store i64 %9, i64* %h, align 8
  br label %unrolledstmt1

unrolledstmt1:                                    ; preds = %unrolledstmt
  %10 = load i64, i64* %h, align 8                ; [#uses = 1]
  %11 = mul i64 %10, 33                           ; [#uses = 1]
  %12 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D13TypeInfo_xAya6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %13 = load [20 x i8*]*, [20 x i8*]** %12, align 8 ; [#uses = 1]
  %"getHash@vtbl3" = getelementptr inbounds [20 x i8*], [20 x i8*]* %13, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %14 = load i8*, i8** %"getHash@vtbl3", align 8  ; [#uses = 1]
  %getHash4 = bitcast i8* %14 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %15 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %p, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }*]
  %16 = bitcast { i64, i8* }* %15 to i8*          ; [#uses = 1]
  %17 = call i64 %getHash4(%object.TypeInfo_Const* nonnull @_D13TypeInfo_xAya6__initZ, i8* %16) ; [#uses = 1]
  %18 = add i64 %11, %17                          ; [#uses = 1]
  store i64 %18, i64* %h, align 8
  br label %unrolledstmt2

unrolledstmt2:                                    ; preds = %unrolledstmt1
  %19 = load i64, i64* %h, align 8                ; [#uses = 1]
  %20 = mul i64 %19, 33                           ; [#uses = 1]
  %21 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D11TypeInfo_xm6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %22 = load [20 x i8*]*, [20 x i8*]** %21, align 8 ; [#uses = 1]
  %"getHash@vtbl5" = getelementptr inbounds [20 x i8*], [20 x i8*]* %22, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %23 = load i8*, i8** %"getHash@vtbl5", align 8  ; [#uses = 1]
  %getHash6 = bitcast i8* %23 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %24 = getelementptr inbounds %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result", %"std.algorithm.iteration.splitter!(\22a == b\22, Flag.no, string, string).splitter.Result"* %p, i32 0, i32 2 ; [#uses = 1, type = i64*]
  %25 = bitcast i64* %24 to i8*                   ; [#uses = 1]
  %26 = call i64 %getHash6(%object.TypeInfo_Const* nonnull @_D11TypeInfo_xm6__initZ, i8* %25) ; [#uses = 1]
  %27 = add i64 %20, %26                          ; [#uses = 1]
  store i64 %27, i64* %h, align 8
  br label %unrolledend

unrolledend:                                      ; preds = %unrolledstmt2
  %28 = load i64, i64* %h, align 8                ; [#uses = 0]
  %29 = load i64, i64* %h, align 8                ; [#uses = 1]
  ret i64 %29
}

; [#uses = 0]
declare i64 @_D6object14TypeInfo_Const7getHashMxFNbNfMxPvZm(%object.TypeInfo_Const* nonnull, i8*) #1

; [#uses = 1]
declare { i64, i8* } @_D3std9algorithm9searching__T4findVAyaa6_61203d3d2062TQtTQwZQBfFQBdMQBhZ__T5forceTQBvTAhZQoFNaNbNiNeNgAhZQCs({ i64, i8* }) #1

; [#uses = 1]
declare { i64, i8* } @_D3std9algorithm9searching__T4findVAyaa6_61203d3d2062TAhTQdZQBfFNaNbNiNfQsMQvZQy({ i64, i8* }, { i64, i8* }) #1

; [#uses = 2]
declare { i64, i8* } @_D3std9algorithm9searching__T4findVAyaa6_61203d3d2062TQtTQwZQBfFQBdMQBhZ__T5forceTAhTAaZQnFNaNbNiNeNgAaZQw({ i64, i8* }) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr %"std.array.Appender!(string[]).Appender" @_D3std5array__T8appenderTAAyaZQpFNaNbNfZSQBnQBm__T8AppenderTQBjZQo() #0 {
  %.structliteral = alloca %"std.array.Appender!(string[]).Appender", align 8 ; [#uses = 3, size/byte = 8]
  %1 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.structliteral, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  store %"std.array.Appender!(string[]).Appender.Data"* null, %"std.array.Appender!(string[]).Appender.Data"** %1, align 8
  %2 = call %"std.array.Appender!(string[]).Appender"* @_D3std5array__T8AppenderTAAyaZQp6__ctorMFNaNbNcNeQyZSQBzQBy__TQBvTQBpZQCd(%"std.array.Appender!(string[]).Appender"* nonnull returned %.structliteral, { i64, { i64, i8* }* } zeroinitializer) #1 ; [#uses = 0]
  %3 = load %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.structliteral, align 8 ; [#uses = 1]
  ret %"std.array.Appender!(string[]).Appender" %3
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std5array__T8AppenderTAAyaZQp__T3putTQoZQiMFNaNbNfQBbZv(%"std.array.Appender!(string[]).Appender"* nonnull %.this_arg, { i64, i8* } %item_arg) #0 {
  %1 = alloca { i64, i8* }, align 8               ; [#uses = 2, size/byte = 16]
  %.frame = alloca %nest.put.1, align 8           ; [#uses = 5, size/byte = 32]
  %bigData = alloca { i64, { i64, i8* }* }, align 8 ; [#uses = 6, size/byte = 16]
  %itemUnqual = alloca { i64, i8* }*, align 8     ; [#uses = 2, size/byte = 8]
  store { i64, i8* } %item_arg, { i64, i8* }* %1, align 8
  %this = getelementptr inbounds %nest.put.1, %nest.put.1* %.frame, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender"**]
  store %"std.array.Appender!(string[]).Appender"* %.this_arg, %"std.array.Appender!(string[]).Appender"** %this, align 8
  %len = getelementptr inbounds %nest.put.1, %nest.put.1* %.frame, i32 0, i32 1 ; [#uses = 3, type = i64*]
  %item = getelementptr inbounds %nest.put.1, %nest.put.1* %.frame, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %2 = bitcast { i64, i8* }* %item to i8*         ; [#uses = 1]
  %3 = bitcast { i64, i8* }* %1 to i8*            ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false)
  call void @_D3std5array__T8AppenderTAAyaZQp13ensureAddableMFNaNbNfmZv(%"std.array.Appender!(string[]).Appender"* nonnull %.this_arg, i64 1) #0
  %4 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %5 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %4, align 8 ; [#uses = 1]
  %6 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %5, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  %7 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %6, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %7, align 8              ; [#uses = 1]
  store i64 %.len, i64* %len, align 8
  %8 = bitcast %nest.put.1* %.frame to i8*        ; [#uses = 1]
  %9 = insertvalue { i8*, { i64, { i64, i8* }* } (i8*)* } undef, i8* %8, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, { i64, i8* }* } (i8*)* } %9, { i64, { i64, i8* }* } (i8*)* @_D3std5array__T8AppenderTAAyaZQp__T3putTQoZQiMFQvZ9__lambda3MFNaNbNiNeZQBu, 1 ; [#uses = 2]
  %.funcptr = extractvalue { i8*, { i64, { i64, i8* }* } (i8*)* } %.func, 1 ; [#uses = 1]
  %.ptr = extractvalue { i8*, { i64, { i64, i8* }* } (i8*)* } %.func, 0 ; [#uses = 1]
  %10 = call { i64, { i64, i8* }* } %.funcptr(i8* nonnull %.ptr) ; [#uses = 2]
  %11 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %bigData, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len2 = extractvalue { i64, { i64, i8* }* } %10, 0 ; [#uses = 1]
  store i64 %.len2, i64* %11, align 8
  %12 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %bigData, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %.ptr3 = extractvalue { i64, { i64, i8* }* } %10, 1 ; [#uses = 1]
  store { i64, i8* }* %.ptr3, { i64, i8* }** %12, align 8
  %13 = bitcast %nest.put.1* %.frame to i8*       ; [#uses = 1]
  %14 = insertvalue { i8*, { i64, i8* }* (i8*)* } undef, i8* %13, 0 ; [#uses = 1]
  %.func4 = insertvalue { i8*, { i64, i8* }* (i8*)* } %14, { i64, i8* }* (i8*)* @_D3std5array__T8AppenderTAAyaZQp__T3putTQoZQiMFQvZ9__lambda5MFNaNbNiNeZPQBu, 1 ; [#uses = 2]
  %.funcptr5 = extractvalue { i8*, { i64, i8* }* (i8*)* } %.func4, 1 ; [#uses = 1]
  %.ptr6 = extractvalue { i8*, { i64, i8* }* (i8*)* } %.func4, 0 ; [#uses = 1]
  %15 = call { i64, i8* }* %.funcptr5(i8* nonnull %.ptr6) ; [#uses = 1]
  store { i64, i8* }* %15, { i64, i8* }** %itemUnqual, align 8
  %16 = load i64, i64* %len, align 8              ; [#uses = 2]
  %17 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %bigData, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len7 = load i64, i64* %17, align 8            ; [#uses = 2]
  %bounds.cmp = icmp ult i64 %16, %.len7          ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %0
  %18 = load i64, i64* %len, align 8              ; [#uses = 1]
  %19 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %bigData, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %.ptr8 = load { i64, i8* }*, { i64, i8* }** %19, align 8 ; [#uses = 1]
  %20 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.ptr8, i64 %18 ; [#uses = 1, type = { i64, i8* }*]
  %21 = load { i64, i8* }*, { i64, i8* }** %itemUnqual, align 8 ; [#uses = 1]
  %22 = call { i64, i8* }* @_D4core8lifetime__T7emplaceTAyaTQeZQqFNaNbNiNfPQtKQwZQh({ i64, i8* }* %20, { i64, i8* }* dereferenceable(16) %21) #1 ; [#uses = 0]
  %23 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %24 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %23, align 8 ; [#uses = 1]
  %25 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %24, i32 0, i32 1 ; [#uses = 2, type = { i64, { i64, i8* }* }*]
  %26 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %25, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %27 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %bigData, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len9 = load i64, i64* %27, align 8            ; [#uses = 1]
  store i64 %.len9, i64* %26, align 8
  %28 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %25, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %29 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %bigData, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %.ptr10 = load { i64, i8* }*, { i64, i8* }** %29, align 8 ; [#uses = 1]
  store { i64, i8* }* %.ptr10, { i64, i8* }** %28, align 8
  ret void

bounds.fail:                                      ; preds = %0
  call void @_d_arraybounds_index({ i64, i8* } { i64 51, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.30, i32 0, i32 0) }, i32 3694, i64 %16, i64 %.len7) #5
  unreachable
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, { i64, i8* }* } @_D3std5array__T8AppenderTAAyaZQp4dataMNgFNaNbNdNiNeZANgAya(%"std.array.Appender!(string[]).Appender"* nonnull %.this_arg) #0 {
  %1 = call { i64, { i64, i8* }* } @_D3std5array__T8AppenderTAAyaZQp7opSliceMNgFNaNbNdNiNeZANgAya(%"std.array.Appender!(string[]).Appender"* nonnull %.this_arg) #1 ; [#uses = 1]
  ret { i64, { i64, i8* }* } %1
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr %"std.array.Appender!(string[]).Appender"* @_D3std5array__T8AppenderTAAyaZQp6__ctorMFNaNbNcNeQyZSQBzQBy__TQBvTQBpZQCd(%"std.array.Appender!(string[]).Appender"* nonnull returned %.this_arg, { i64, { i64, i8* }* } %arr_arg) #0 {
  %arr = alloca { i64, { i64, i8* }* }, align 8   ; [#uses = 7, size/byte = 16]
  %cap = alloca i64, align 8                      ; [#uses = 3, size/byte = 8]
  store { i64, { i64, i8* }* } %arr_arg, { i64, { i64, i8* }* }* %arr, align 8
  %1 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %2 = call %"std.array.Appender!(string[]).Appender.Data"* @_D4core8lifetime__T11_d_newitemTTS3std5array__T8AppenderTAAyaZQp4DataZQBzFNaNbNeZPQBx() #1 ; [#uses = 5]
  %3 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %2, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %2, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  store { i64, { i64, i8* }* } zeroinitializer, { i64, { i64, i8* }* }* %4, align 8
  %5 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %2, i32 0, i32 2 ; [#uses = 1, type = i8*]
  store i8 0, i8* %5, align 1
  %6 = bitcast %"std.array.Appender!(string[]).Appender.Data"* %2 to i8* ; [#uses = 1]
  %.padding = getelementptr inbounds i8, i8* %6, i32 25 ; [#uses = 1, type = i8*]
  call void @llvm.memset.p0i8.i64(i8* align 1 %.padding, i8 0, i64 7, i1 false)
  store %"std.array.Appender!(string[]).Appender.Data"* %2, %"std.array.Appender!(string[]).Appender.Data"** %1, align 8
  %7 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %8 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %7, align 8 ; [#uses = 1]
  %9 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %8, i32 0, i32 1 ; [#uses = 2, type = { i64, { i64, i8* }* }*]
  %10 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %9, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %11 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %arr, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %11, align 8             ; [#uses = 1]
  store i64 %.len, i64* %10, align 8
  %12 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %9, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %13 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %arr, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %.ptr = load { i64, i8* }*, { i64, i8* }** %13, align 8 ; [#uses = 1]
  store { i64, i8* }* %.ptr, { i64, i8* }** %12, align 8
  %14 = load { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %arr, align 8 ; [#uses = 1]
  %15 = call i64 @_D6object__T8capacityTAyaZQoFNaNbNdNeAQqZm({ i64, { i64, i8* }* } %14) #1 ; [#uses = 1]
  store i64 %15, i64* %cap, align 8
  %16 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %arr, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %16, align 8            ; [#uses = 1]
  %17 = load i64, i64* %cap, align 8              ; [#uses = 1]
  %18 = icmp ugt i64 %17, %.len1                  ; [#uses = 1]
  br i1 %18, label %if, label %endif

if:                                               ; preds = %0
  %19 = load i64, i64* %cap, align 8              ; [#uses = 1]
  %20 = call i64 @_D4core8internal5array8capacity__T22_d_arraysetlengthTImplHTAAyaTQeZ18_d_arraysetlengthTFNaNbNeNkMKQBnmZm({ i64, { i64, i8* }* }* dereferenceable(16) %arr, i64 %19) #1 ; [#uses = 0]
  br label %endif

endif:                                            ; preds = %if, %0
  %21 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %22 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %21, align 8 ; [#uses = 1]
  %23 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %22, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %24 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %arr, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len2 = load i64, i64* %24, align 8            ; [#uses = 1]
  store i64 %.len2, i64* %23, align 8
  ret %"std.array.Appender!(string[]).Appender"* %.this_arg
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std5array__T8AppenderTAAyaZQp4Data11__xopEqualsMxFKxSQCcQCb__TQByTQBsZQCgQBsZb(%"std.array.Appender!(string[]).Appender.Data"* nonnull %.this_arg, %"std.array.Appender!(string[]).Appender.Data"* dereferenceable(32) %p) #0 {
  %1 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %2 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %p, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %3 = load i64, i64* %1, align 8                 ; [#uses = 1]
  %4 = load i64, i64* %2, align 8                 ; [#uses = 1]
  %5 = icmp eq i64 %3, %4                         ; [#uses = 1]
  br i1 %5, label %andand, label %andandend

andand:                                           ; preds = %0
  %6 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  %7 = load { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %6, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %p, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  %9 = load { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %8, align 8 ; [#uses = 1]
  %10 = call zeroext i1 @_D4core8internal5array8equality__T8__equalsTxAyaTxQfZQtFNaNbNiNfMAxQwMQfZb({ i64, { i64, i8* }* } %7, { i64, { i64, i8* }* } %9) #1 ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %0
  %andandval = phi i1 [ false, %0 ], [ %10, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand1, label %andandend2

andand1:                                          ; preds = %andandend
  %11 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i8*]
  %12 = load i8, i8* %11, align 1                 ; [#uses = 1]
  %13 = trunc i8 %12 to i1                        ; [#uses = 1]
  %14 = zext i1 %13 to i32                        ; [#uses = 1]
  %15 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %p, i32 0, i32 2 ; [#uses = 1, type = i8*]
  %16 = load i8, i8* %15, align 1                 ; [#uses = 1]
  %17 = trunc i8 %16 to i1                        ; [#uses = 1]
  %18 = zext i1 %17 to i32                        ; [#uses = 1]
  %19 = icmp eq i32 %14, %18                      ; [#uses = 1]
  br label %andandend2

andandend2:                                       ; preds = %andand1, %andandend
  %andandval3 = phi i1 [ false, %andandend ], [ %19, %andand1 ] ; [#uses = 1, type = i1]
  ret i1 %andandval3
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D4core8internal5array8equality__T8__equalsTxAyaTxQfZQtFNaNbNiNfMAxQwMQfZb({ i64, { i64, i8* }* } %lhs_arg, { i64, { i64, i8* }* } %rhs_arg) #0 {
  %r.i11 = alloca { i64, { i64, i8* }* }, align 8 ; [#uses = 2, size/byte = 16]
  %i.i12 = alloca i64, align 8                    ; [#uses = 2, size/byte = 8]
  %r.i = alloca { i64, { i64, i8* }* }, align 8   ; [#uses = 2, size/byte = 16]
  %i.i = alloca i64, align 8                      ; [#uses = 2, size/byte = 8]
  %lhs = alloca { i64, { i64, i8* }* }, align 8   ; [#uses = 5, size/byte = 16]
  %rhs = alloca { i64, { i64, i8* }* }, align 8   ; [#uses = 3, size/byte = 16]
  %__key2026 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %__limit2027 = alloca i64, align 8              ; [#uses = 2, size/byte = 8]
  %i = alloca i64, align 8                        ; [#uses = 3, size/byte = 8]
  store { i64, { i64, i8* }* } %lhs_arg, { i64, { i64, i8* }* }* %lhs, align 8
  store { i64, { i64, i8* }* } %rhs_arg, { i64, { i64, i8* }* }* %rhs, align 8
  %1 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %lhs, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %rhs, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %2, align 8             ; [#uses = 1]
  %3 = icmp ne i64 %.len, %.len1                  ; [#uses = 1]
  br i1 %3, label %if, label %endif

if:                                               ; preds = %0
  ret i1 false

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %0
  %4 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %lhs, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len2 = load i64, i64* %4, align 8             ; [#uses = 1]
  %5 = icmp eq i64 %.len2, 0                      ; [#uses = 1]
  br i1 %5, label %if3, label %endif4

if3:                                              ; preds = %endif
  ret i1 true

dummy.afterreturn5:                               ; No predecessors!
  br label %endif4

endif4:                                           ; preds = %dummy.afterreturn5, %endif
  store i64 0, i64* %__key2026, align 8
  %6 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %lhs, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len6 = load i64, i64* %6, align 8             ; [#uses = 1]
  store i64 %.len6, i64* %__limit2027, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %endif4
  %7 = load i64, i64* %__key2026, align 8         ; [#uses = 1]
  %8 = load i64, i64* %__limit2027, align 8       ; [#uses = 1]
  %9 = icmp ult i64 %7, %8                        ; [#uses = 1]
  br i1 %9, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %10 = load i64, i64* %__key2026, align 8        ; [#uses = 1]
  store i64 %10, i64* %i, align 8
  %11 = load { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %lhs, align 8 ; [#uses = 1]
  %12 = load i64, i64* %i, align 8                ; [#uses = 1]
  store { i64, { i64, i8* }* } %11, { i64, { i64, i8* }* }* %r.i11, align 8
  store i64 %12, i64* %i.i12, align 8
  %13 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %r.i11, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %.ptr.i13 = load { i64, i8* }*, { i64, i8* }** %13, align 8 ; [#uses = 1]
  %14 = load i64, i64* %i.i12, align 8            ; [#uses = 1]
  %15 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.ptr.i13, i64 %14 ; [#uses = 1, type = { i64, i8* }*]
  %16 = load { i64, i8* }, { i64, i8* }* %15, align 8 ; [#uses = 1]
  %17 = load { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %rhs, align 8 ; [#uses = 1]
  %18 = load i64, i64* %i, align 8                ; [#uses = 1]
  store { i64, { i64, i8* }* } %17, { i64, { i64, i8* }* }* %r.i, align 8
  store i64 %18, i64* %i.i, align 8
  %19 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %r.i, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %.ptr.i = load { i64, i8* }*, { i64, i8* }** %19, align 8 ; [#uses = 1]
  %20 = load i64, i64* %i.i, align 8              ; [#uses = 1]
  %21 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.ptr.i, i64 %20 ; [#uses = 1, type = { i64, i8* }*]
  %22 = load { i64, i8* }, { i64, i8* }* %21, align 8 ; [#uses = 1]
  %23 = call zeroext i1 @_D4core8internal5array8equality__T8__equalsTaTaZQoFNaNbNiNeMxAaMxQeZb({ i64, i8* } %16, { i64, i8* } %22) #0 ; [#uses = 1]
  %24 = icmp eq i1 %23, false                     ; [#uses = 1]
  br i1 %24, label %if7, label %endif8

if7:                                              ; preds = %forbody
  ret i1 false

dummy.afterreturn9:                               ; No predecessors!
  br label %endif8

endif8:                                           ; preds = %dummy.afterreturn9, %forbody
  br label %forinc

forinc:                                           ; preds = %endif8
  %25 = load i64, i64* %__key2026, align 8        ; [#uses = 1]
  %26 = add i64 %25, 1                            ; [#uses = 1]
  store i64 %26, i64* %__key2026, align 8
  br label %forcond

endfor:                                           ; preds = %forcond
  ret i1 true
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr i64 @_D3std5array__T8AppenderTAAyaZQp4Data9__xtoHashFNbNeKxSQCbQCa__TQBxTQBrZQCfQBrZm(%"std.array.Appender!(string[]).Appender.Data"* dereferenceable(32) %p) #0 {
  %h = alloca i64, align 8                        ; [#uses = 9, size/byte = 8]
  store i64 0, i64* %h, align 8
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %0
  %1 = load i64, i64* %h, align 8                 ; [#uses = 1]
  %2 = mul i64 %1, 33                             ; [#uses = 1]
  %3 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D11TypeInfo_xm6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %4 = load [20 x i8*]*, [20 x i8*]** %3, align 8 ; [#uses = 1]
  %"getHash@vtbl" = getelementptr inbounds [20 x i8*], [20 x i8*]* %4, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %5 = load i8*, i8** %"getHash@vtbl", align 8    ; [#uses = 1]
  %getHash = bitcast i8* %5 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %6 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %p, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %7 = bitcast i64* %6 to i8*                     ; [#uses = 1]
  %8 = call i64 %getHash(%object.TypeInfo_Const* nonnull @_D11TypeInfo_xm6__initZ, i8* %7) ; [#uses = 1]
  %9 = add i64 %2, %8                             ; [#uses = 1]
  store i64 %9, i64* %h, align 8
  br label %unrolledstmt1

unrolledstmt1:                                    ; preds = %unrolledstmt
  %10 = load i64, i64* %h, align 8                ; [#uses = 1]
  %11 = mul i64 %10, 33                           ; [#uses = 1]
  %12 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D14TypeInfo_xAAya6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %13 = load [20 x i8*]*, [20 x i8*]** %12, align 8 ; [#uses = 1]
  %"getHash@vtbl3" = getelementptr inbounds [20 x i8*], [20 x i8*]* %13, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %14 = load i8*, i8** %"getHash@vtbl3", align 8  ; [#uses = 1]
  %getHash4 = bitcast i8* %14 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %15 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %p, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  %16 = bitcast { i64, { i64, i8* }* }* %15 to i8* ; [#uses = 1]
  %17 = call i64 %getHash4(%object.TypeInfo_Const* nonnull @_D14TypeInfo_xAAya6__initZ, i8* %16) ; [#uses = 1]
  %18 = add i64 %11, %17                          ; [#uses = 1]
  store i64 %18, i64* %h, align 8
  br label %unrolledstmt2

unrolledstmt2:                                    ; preds = %unrolledstmt1
  %19 = load i64, i64* %h, align 8                ; [#uses = 1]
  %20 = mul i64 %19, 33                           ; [#uses = 1]
  %21 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D11TypeInfo_xb6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %22 = load [20 x i8*]*, [20 x i8*]** %21, align 8 ; [#uses = 1]
  %"getHash@vtbl5" = getelementptr inbounds [20 x i8*], [20 x i8*]* %22, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %23 = load i8*, i8** %"getHash@vtbl5", align 8  ; [#uses = 1]
  %getHash6 = bitcast i8* %23 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %24 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %p, i32 0, i32 2 ; [#uses = 1, type = i8*]
  %25 = call i64 %getHash6(%object.TypeInfo_Const* nonnull @_D11TypeInfo_xb6__initZ, i8* %24) ; [#uses = 1]
  %26 = add i64 %20, %25                          ; [#uses = 1]
  store i64 %26, i64* %h, align 8
  br label %unrolledend

unrolledend:                                      ; preds = %unrolledstmt2
  %27 = load i64, i64* %h, align 8                ; [#uses = 0]
  %28 = load i64, i64* %h, align 8                ; [#uses = 1]
  ret i64 %28
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr %"std.array.Appender!(string[]).Appender.Data"* @_D4core8lifetime__T11_d_newitemTTS3std5array__T8AppenderTAAyaZQp4DataZQBzFNaNbNeZPQBx() #0 {
  %flags = alloca i32, align 4                    ; [#uses = 2, size/byte = 4]
  %tiSize = alloca i64, align 8                   ; [#uses = 1, size/byte = 8]
  %itemSize = alloca i64, align 8                 ; [#uses = 1, size/byte = 8]
  %totalSize = alloca i64, align 8                ; [#uses = 1, size/byte = 8]
  %blkInfo = alloca %core.memory.BlkInfo_, align 8 ; [#uses = 2, size/byte = 24]
  %p = alloca i8*, align 8                        ; [#uses = 3, size/byte = 8]
  store i32 0, i32* %flags, align 4
  store i64 0, i64* %tiSize, align 8
  store i64 32, i64* %itemSize, align 8
  store i64 32, i64* %totalSize, align 8
  %1 = load i32, i32* %flags, align 4             ; [#uses = 1]
  call void @gc_qalloc(%core.memory.BlkInfo_* noalias sret(%core.memory.BlkInfo_) align 8 %blkInfo, i64 32, i32 %1, %object.TypeInfo* null) #1
  %2 = getelementptr inbounds %core.memory.BlkInfo_, %core.memory.BlkInfo_* %blkInfo, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %3 = load i8*, i8** %2, align 8                 ; [#uses = 1]
  store i8* %3, i8** %p, align 8
  %4 = load i8*, i8** %p, align 8                 ; [#uses = 1]
  %5 = bitcast i8* %4 to %"std.array.Appender!(string[]).Appender.Data"* ; [#uses = 1]
  call void @_D4core8internal8lifetime__T18emplaceInitializerTS3std5array__T8AppenderTAAyaZQp4DataZQCgFNaNbNiNeMKQBzZv(%"std.array.Appender!(string[]).Appender.Data"* dereferenceable(32) %5) #1
  %6 = load i8*, i8** %p, align 8                 ; [#uses = 1]
  %7 = bitcast i8* %6 to %"std.array.Appender!(string[]).Appender.Data"* ; [#uses = 1]
  ret %"std.array.Appender!(string[]).Appender.Data"* %7
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i64 @_D6object__T8capacityTAyaZQoFNaNbNdNeAQqZm({ i64, { i64, i8* }* } %arr_arg) #0 {
  %arr = alloca { i64, { i64, i8* }* }, align 8   ; [#uses = 2, size/byte = 16]
  store { i64, { i64, i8* }* } %arr_arg, { i64, { i64, i8* }* }* %arr, align 8
  %1 = bitcast { i64, { i64, i8* }* }* %arr to { i64, i8* }* ; [#uses = 1]
  %2 = call i64 @_d_arraysetcapacity(%object.TypeInfo* bitcast (%object.TypeInfo_Array* @_D13TypeInfo_AAya6__initZ to %object.TypeInfo*), i64 0, { i64, i8* }* %1) #1 ; [#uses = 1]
  ret i64 %2
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i64 @_D4core8internal5array8capacity__T22_d_arraysetlengthTImplHTAAyaTQeZ18_d_arraysetlengthTFNaNbNeNkMKQBnmZm({ i64, { i64, i8* }* }* dereferenceable(16) %arr, i64 %newlength_arg) #0 {
  %newlength = alloca i64, align 8                ; [#uses = 2, size/byte = 8]
  %ti = alloca %object.TypeInfo_Array*, align 8   ; [#uses = 2, size/byte = 8]
  store i64 %newlength_arg, i64* %newlength, align 8
  store %object.TypeInfo_Array* @_D13TypeInfo_AAya6__initZ, %object.TypeInfo_Array** %ti, align 8
  %1 = bitcast %object.TypeInfo_Array** %ti to %object.TypeInfo** ; [#uses = 1]
  %2 = load %object.TypeInfo*, %object.TypeInfo** %1, align 8 ; [#uses = 1]
  %3 = load i64, i64* %newlength, align 8         ; [#uses = 1]
  %4 = bitcast { i64, { i64, i8* }* }* %arr to { i64, i8* }* ; [#uses = 1]
  %5 = call { i64, i8* } @_d_arraysetlengthT(%object.TypeInfo* %2, i64 %3, { i64, i8* }* %4) #1 ; [#uses = 0]
  %6 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %arr, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %6, align 8              ; [#uses = 1]
  ret i64 %.len
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr void @_D3std5array__T8AppenderTAAyaZQp7reserveMFNaNbNfmZv(%"std.array.Appender!(string[]).Appender"* nonnull %.this_arg, i64 %newCapacity_arg) #0 {
  %newCapacity = alloca i64, align 8              ; [#uses = 4, size/byte = 8]
  store i64 %newCapacity_arg, i64* %newCapacity, align 8
  %1 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 2, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %2 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %1, align 8 ; [#uses = 0]
  %3 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %1, align 8 ; [#uses = 1]
  %4 = icmp ne %"std.array.Appender!(string[]).Appender.Data"* %3, null ; [#uses = 1]
  br i1 %4, label %if, label %else

if:                                               ; preds = %0
  %5 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %6 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %5, align 8 ; [#uses = 1]
  %7 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %6, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %8 = load i64, i64* %newCapacity, align 8       ; [#uses = 1]
  %9 = load i64, i64* %7, align 8                 ; [#uses = 1]
  %10 = icmp ugt i64 %8, %9                       ; [#uses = 1]
  br i1 %10, label %if1, label %endif2

if1:                                              ; preds = %if
  %11 = load i64, i64* %newCapacity, align 8      ; [#uses = 1]
  %12 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %13 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %12, align 8 ; [#uses = 1]
  %14 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %13, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  %15 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %14, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %15, align 8             ; [#uses = 1]
  %16 = sub i64 %11, %.len                        ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAAyaZQp13ensureAddableMFNaNbNfmZv(%"std.array.Appender!(string[]).Appender"* nonnull %.this_arg, i64 %16) #1
  br label %endif2

endif2:                                           ; preds = %if1, %if
  br label %endif

else:                                             ; preds = %0
  %17 = load i64, i64* %newCapacity, align 8      ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAAyaZQp13ensureAddableMFNaNbNfmZv(%"std.array.Appender!(string[]).Appender"* nonnull %.this_arg, i64 %17) #1
  br label %endif

endif:                                            ; preds = %else, %endif2
  ret void
}

; [#uses = 3]
; Function Attrs: uwtable
define weak_odr void @_D3std5array__T8AppenderTAAyaZQp13ensureAddableMFNaNbNfmZv(%"std.array.Appender!(string[]).Appender"* nonnull %.this_arg, i64 %nelems_arg) #0 {
  %x.i = alloca i64, align 8                      ; [#uses = 2, size/byte = 8]
  %y.i = alloca i64, align 8                      ; [#uses = 2, size/byte = 8]
  %res.i = alloca %"ldc.intrinsics.OverflowRet!ulong.OverflowRet", align 8 ; [#uses = 3, size/byte = 16]
  %.RemoveStructPadding_dump.i = alloca %"ldc.intrinsics.OverflowRet!ulong.OverflowRet", align 8 ; [#uses = 4, size/byte = 16]
  %1 = alloca i64, align 8                        ; [#uses = 2, size/byte = 8]
  %.frame = alloca %nest.ensureAddable, align 8   ; [#uses = 10, size/byte = 64]
  %reqlen = alloca i64, align 8                   ; [#uses = 3, size/byte = 8]
  %u = alloca i64, align 8                        ; [#uses = 4, size/byte = 8]
  %overflow = alloca i8, align 1                  ; [#uses = 4, size/byte = 1]
  %.sret_tmp = alloca %core.memory.BlkInfo_, align 8 ; [#uses = 2, size/byte = 24]
  store i64 %nelems_arg, i64* %1, align 8
  %this = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %.frame, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender"**]
  store %"std.array.Appender!(string[]).Appender"* %.this_arg, %"std.array.Appender!(string[]).Appender"** %this, align 8
  %nelems = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %.frame, i32 0, i32 1 ; [#uses = 2, type = i64*]
  %2 = bitcast i64* %nelems to i8*                ; [#uses = 1]
  %3 = bitcast i64* %1 to i8*                     ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 8, i1 false)
  %newlen = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %.frame, i32 0, i32 2 ; [#uses = 2, type = i64*]
  %len = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %.frame, i32 0, i32 3 ; [#uses = 4, type = i64*]
  %nbytes = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %.frame, i32 0, i32 4 ; [#uses = 1, type = i64*]
  %bi = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %.frame, i32 0, i32 5 ; [#uses = 2, type = %core.memory.BlkInfo_*]
  %4 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %5 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %4, align 8 ; [#uses = 1]
  %6 = icmp ne %"std.array.Appender!(string[]).Appender.Data"* %5, null ; [#uses = 1]
  %7 = icmp eq i1 %6, false                       ; [#uses = 1]
  br i1 %7, label %if, label %endif

if:                                               ; preds = %0
  %8 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %9 = call %"std.array.Appender!(string[]).Appender.Data"* @_D4core8lifetime__T11_d_newitemTTS3std5array__T8AppenderTAAyaZQp4DataZQBzFNaNbNeZPQBx() #1 ; [#uses = 5]
  %10 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %9, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %9, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  store { i64, { i64, i8* }* } zeroinitializer, { i64, { i64, i8* }* }* %11, align 8
  %12 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %9, i32 0, i32 2 ; [#uses = 1, type = i8*]
  store i8 0, i8* %12, align 1
  %13 = bitcast %"std.array.Appender!(string[]).Appender.Data"* %9 to i8* ; [#uses = 1]
  %.padding = getelementptr inbounds i8, i8* %13, i32 25 ; [#uses = 1, type = i8*]
  call void @llvm.memset.p0i8.i64(i8* align 1 %.padding, i8 0, i64 7, i1 false)
  store %"std.array.Appender!(string[]).Appender.Data"* %9, %"std.array.Appender!(string[]).Appender.Data"** %8, align 8
  br label %endif

endif:                                            ; preds = %if, %0
  %14 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %15 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %14, align 8 ; [#uses = 1]
  %16 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %15, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  %17 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %16, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %17, align 8             ; [#uses = 1]
  store i64 %.len, i64* %len, align 8
  %18 = load i64, i64* %len, align 8              ; [#uses = 1]
  %19 = load i64, i64* %nelems, align 8           ; [#uses = 1]
  %20 = add i64 %18, %19                          ; [#uses = 1]
  store i64 %20, i64* %reqlen, align 8
  %21 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %22 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %21, align 8 ; [#uses = 1]
  %23 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %22, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %24 = load i64, i64* %23, align 8               ; [#uses = 1]
  %25 = load i64, i64* %reqlen, align 8           ; [#uses = 1]
  %26 = icmp uge i64 %24, %25                     ; [#uses = 1]
  br i1 %26, label %if2, label %endif3

if2:                                              ; preds = %endif
  ret void

dummy.afterreturn:                                ; No predecessors!
  br label %endif3

endif3:                                           ; preds = %dummy.afterreturn, %endif
  %27 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %28 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %27, align 8 ; [#uses = 1]
  %29 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %28, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %30 = load i64, i64* %29, align 8               ; [#uses = 1]
  %31 = load i64, i64* %reqlen, align 8           ; [#uses = 1]
  %32 = call i64 @_D3std5array__T19appenderNewCapacityVmi16ZQBbFNaNbNiNfmmZm(i64 %30, i64 %31) #1 ; [#uses = 1]
  store i64 %32, i64* %newlen, align 8
  %33 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %34 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %33, align 8 ; [#uses = 1]
  %35 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %34, i32 0, i32 2 ; [#uses = 1, type = i8*]
  %36 = load i8, i8* %35, align 1                 ; [#uses = 1]
  %37 = trunc i8 %36 to i1                        ; [#uses = 1]
  br i1 %37, label %if4, label %endif5

if4:                                              ; preds = %endif3
  %38 = bitcast %nest.ensureAddable* %.frame to i8* ; [#uses = 1]
  %39 = insertvalue { i8*, i64 (i8*)* } undef, i8* %38, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, i64 (i8*)* } %39, i64 (i8*)* @_D3std5array__T8AppenderTAAyaZQp13ensureAddableMFmZ9__lambda5MFNaNbNeZm, 1 ; [#uses = 2]
  %.funcptr = extractvalue { i8*, i64 (i8*)* } %.func, 1 ; [#uses = 1]
  %.ptr = extractvalue { i8*, i64 (i8*)* } %.func, 0 ; [#uses = 1]
  %40 = call i64 %.funcptr(i8* nonnull %.ptr)     ; [#uses = 1]
  store i64 %40, i64* %u, align 8
  %41 = load i64, i64* %u, align 8                ; [#uses = 0]
  %42 = load i64, i64* %u, align 8                ; [#uses = 1]
  %43 = icmp ne i64 %42, 0                        ; [#uses = 1]
  br i1 %43, label %if6, label %endif7

if6:                                              ; preds = %if4
  %44 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %45 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %44, align 8 ; [#uses = 1]
  %46 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %45, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %47 = load i64, i64* %u, align 8                ; [#uses = 1]
  %48 = udiv i64 %47, 16                          ; [#uses = 1]
  store i64 %48, i64* %46, align 8
  ret void

dummy.afterreturn8:                               ; No predecessors!
  br label %endif7

endif7:                                           ; preds = %dummy.afterreturn8, %if4
  br label %endif5

endif5:                                           ; preds = %endif7, %endif3
  store i8 0, i8* %overflow, align 1
  %49 = load i64, i64* %newlen, align 8           ; [#uses = 1]
  store i64 %49, i64* %x.i, align 8
  store i64 16, i64* %y.i, align 8
  %50 = load i64, i64* %x.i, align 8              ; [#uses = 1]
  %51 = load i64, i64* %y.i, align 8              ; [#uses = 1]
  %52 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %50, i64 %51) #9 ; [#uses = 2]
  %53 = bitcast %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %.RemoveStructPadding_dump.i to i8* ; [#uses = 1]
  call void @llvm.memset.p0i8.i64(i8* align 1 %53, i8 0, i64 16, i1 false)
  %54 = getelementptr inbounds %"ldc.intrinsics.OverflowRet!ulong.OverflowRet", %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %.RemoveStructPadding_dump.i, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %55 = extractvalue { i64, i1 } %52, 0           ; [#uses = 1]
  store i64 %55, i64* %54, align 8
  %56 = getelementptr inbounds %"ldc.intrinsics.OverflowRet!ulong.OverflowRet", %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %.RemoveStructPadding_dump.i, i32 0, i32 1 ; [#uses = 1, type = i8*]
  %57 = extractvalue { i64, i1 } %52, 1           ; [#uses = 1]
  %58 = zext i1 %57 to i8                         ; [#uses = 1]
  store i8 %58, i8* %56, align 1
  %59 = bitcast %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %res.i to i8* ; [#uses = 1]
  %60 = bitcast %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %.RemoveStructPadding_dump.i to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %60, i64 16, i1 false)
  %61 = getelementptr inbounds %"ldc.intrinsics.OverflowRet!ulong.OverflowRet", %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %res.i, i32 0, i32 1 ; [#uses = 1, type = i8*]
  %62 = load i8, i8* %61, align 1                 ; [#uses = 1]
  %63 = trunc i8 %62 to i1                        ; [#uses = 1]
  %64 = zext i1 %63 to i32                        ; [#uses = 1]
  %65 = load i8, i8* %overflow, align 1           ; [#uses = 1]
  %66 = trunc i8 %65 to i1                        ; [#uses = 1]
  %67 = zext i1 %66 to i32                        ; [#uses = 1]
  %68 = or i32 %67, %64                           ; [#uses = 1]
  %69 = icmp ne i32 %68, 0                        ; [#uses = 1]
  %70 = zext i1 %69 to i8                         ; [#uses = 1]
  store i8 %70, i8* %overflow, align 1
  %71 = getelementptr inbounds %"ldc.intrinsics.OverflowRet!ulong.OverflowRet", %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %res.i, i32 0, i32 0 ; [#uses = 2, type = i64*]
  %72 = load i64, i64* %71, align 8               ; [#uses = 0]
  %73 = load i64, i64* %71, align 8               ; [#uses = 1]
  store i64 %73, i64* %nbytes, align 8
  %74 = load i8, i8* %overflow, align 1           ; [#uses = 1]
  %75 = trunc i8 %74 to i1                        ; [#uses = 1]
  br i1 %75, label %if9, label %endif10

if9:                                              ; preds = %endif5
  br i1 false, label %assertPassed, label %assertFailed

assertPassed:                                     ; preds = %if9
  br label %endif10

assertFailed:                                     ; preds = %if9
  call void @_d_assert_msg({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.50, i32 0, i32 0) }, { i64, i8* } { i64 51, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.30, i32 0, i32 0) }, i32 3631) #5
  unreachable

endif10:                                          ; preds = %assertPassed, %endif5
  %76 = bitcast %nest.ensureAddable* %.frame to i8* ; [#uses = 1]
  %77 = insertvalue { i8*, void (%core.memory.BlkInfo_*, i8*)* } undef, i8* %76, 0 ; [#uses = 1]
  %.func11 = insertvalue { i8*, void (%core.memory.BlkInfo_*, i8*)* } %77, void (%core.memory.BlkInfo_*, i8*)* @_D3std5array__T8AppenderTAAyaZQp13ensureAddableMFmZ9__lambda9MFNaNbNeZS4core6memory8BlkInfo_, 1 ; [#uses = 2]
  %.funcptr12 = extractvalue { i8*, void (%core.memory.BlkInfo_*, i8*)* } %.func11, 1 ; [#uses = 1]
  %.ptr13 = extractvalue { i8*, void (%core.memory.BlkInfo_*, i8*)* } %.func11, 0 ; [#uses = 1]
  call void %.funcptr12(%core.memory.BlkInfo_* noalias sret(%core.memory.BlkInfo_) align 8 %.sret_tmp, i8* nonnull %.ptr13)
  %78 = bitcast %core.memory.BlkInfo_* %bi to i8* ; [#uses = 1]
  %79 = bitcast %core.memory.BlkInfo_* %.sret_tmp to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %78, i8* align 1 %79, i64 24, i1 false)
  %80 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %81 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %80, align 8 ; [#uses = 1]
  %82 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %81, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %83 = getelementptr inbounds %core.memory.BlkInfo_, %core.memory.BlkInfo_* %bi, i32 0, i32 1 ; [#uses = 1, type = i64*]
  %84 = load i64, i64* %83, align 8               ; [#uses = 1]
  %85 = udiv i64 %84, 16                          ; [#uses = 1]
  store i64 %85, i64* %82, align 8
  %86 = load i64, i64* %len, align 8              ; [#uses = 0]
  %87 = load i64, i64* %len, align 8              ; [#uses = 1]
  %88 = icmp ne i64 %87, 0                        ; [#uses = 1]
  br i1 %88, label %if14, label %endif15

if14:                                             ; preds = %endif10
  %89 = bitcast %nest.ensureAddable* %.frame to i8* ; [#uses = 1]
  %90 = insertvalue { i8*, void (i8*)* } undef, i8* %89, 0 ; [#uses = 1]
  %.func16 = insertvalue { i8*, void (i8*)* } %90, void (i8*)* @_D3std5array__T8AppenderTAAyaZQp13ensureAddableMFmZ10__lambda11MFNaNbNiNeZv, 1 ; [#uses = 2]
  %.funcptr17 = extractvalue { i8*, void (i8*)* } %.func16, 1 ; [#uses = 1]
  %.ptr18 = extractvalue { i8*, void (i8*)* } %.func16, 0 ; [#uses = 1]
  call void %.funcptr17(i8* nonnull %.ptr18)
  br label %endif15

endif15:                                          ; preds = %if14, %endif10
  %91 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %92 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %91, align 8 ; [#uses = 1]
  %93 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %92, i32 0, i32 1 ; [#uses = 2, type = { i64, { i64, i8* }* }*]
  %94 = bitcast %nest.ensureAddable* %.frame to i8* ; [#uses = 1]
  %95 = insertvalue { i8*, { i64, { i64, i8* }* } (i8*)* } undef, i8* %94, 0 ; [#uses = 1]
  %.func19 = insertvalue { i8*, { i64, { i64, i8* }* } (i8*)* } %95, { i64, { i64, i8* }* } (i8*)* @_D3std5array__T8AppenderTAAyaZQp13ensureAddableMFmZ10__lambda12MFNaNbNiNeZQBx, 1 ; [#uses = 2]
  %.funcptr20 = extractvalue { i8*, { i64, { i64, i8* }* } (i8*)* } %.func19, 1 ; [#uses = 1]
  %.ptr21 = extractvalue { i8*, { i64, { i64, i8* }* } (i8*)* } %.func19, 0 ; [#uses = 1]
  %96 = call { i64, { i64, i8* }* } %.funcptr20(i8* nonnull %.ptr21) ; [#uses = 2]
  %97 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %93, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len22 = extractvalue { i64, { i64, i8* }* } %96, 0 ; [#uses = 1]
  store i64 %.len22, i64* %97, align 8
  %98 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %93, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %.ptr23 = extractvalue { i64, { i64, i8* }* } %96, 1 ; [#uses = 1]
  store { i64, i8* }* %.ptr23, { i64, i8* }** %98, align 8
  %99 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %100 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %99, align 8 ; [#uses = 1]
  %101 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %100, i32 0, i32 2 ; [#uses = 1, type = i8*]
  store i8 1, i8* %101, align 1
  ret void
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr i64 @_D3std5array__T8AppenderTAAyaZQp8capacityMxFNaNbNdNiNfZm(%"std.array.Appender!(string[]).Appender"* nonnull %.this_arg) #0 {
  %condtmp = alloca i64*, align 8                 ; [#uses = 4, size/byte = 8]
  %.makelvaluetmp = alloca i64, align 8           ; [#uses = 2, size/byte = 8]
  %1 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %2 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %1, align 8 ; [#uses = 1]
  %3 = icmp ne %"std.array.Appender!(string[]).Appender.Data"* %2, null ; [#uses = 1]
  br i1 %3, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  %4 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %5 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %4, align 8 ; [#uses = 1]
  %6 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %5, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64* %6, i64** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  store i64 0, i64* %.makelvaluetmp, align 8
  store i64* %.makelvaluetmp, i64** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %7 = load i64*, i64** %condtmp, align 8         ; [#uses = 1]
  %8 = load i64, i64* %7, align 8                 ; [#uses = 0]
  %9 = load i64*, i64** %condtmp, align 8         ; [#uses = 1]
  %10 = load i64, i64* %9, align 8                ; [#uses = 1]
  ret i64 %10
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, { i64, i8* }* } @_D3std5array__T8AppenderTAAyaZQp7opSliceMNgFNaNbNdNiNeZANgAya(%"std.array.Appender!(string[]).Appender"* nonnull %.this_arg) #0 {
  %condtmp = alloca { i64, { i64, i8* }* }*, align 8 ; [#uses = 4, size/byte = 8]
  %.makelvaluetmp = alloca { i64, { i64, i8* }* }, align 8 ; [#uses = 2, size/byte = 16]
  %1 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %2 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %1, align 8 ; [#uses = 1]
  %3 = icmp ne %"std.array.Appender!(string[]).Appender.Data"* %2, null ; [#uses = 1]
  br i1 %3, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  %4 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %5 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %4, align 8 ; [#uses = 1]
  %6 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %5, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  store { i64, { i64, i8* }* }* %6, { i64, { i64, i8* }* }** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  store { i64, { i64, i8* }* } zeroinitializer, { i64, { i64, i8* }* }* %.makelvaluetmp, align 8
  store { i64, { i64, i8* }* }* %.makelvaluetmp, { i64, { i64, i8* }* }** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %7 = load { i64, { i64, i8* }* }*, { i64, { i64, i8* }* }** %condtmp, align 8 ; [#uses = 1]
  %8 = load { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %7, align 8 ; [#uses = 0]
  %9 = load { i64, { i64, i8* }* }*, { i64, { i64, i8* }* }** %condtmp, align 8 ; [#uses = 1]
  %10 = load { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %9, align 8 ; [#uses = 1]
  ret { i64, { i64, i8* }* } %10
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i64 @_D3std5array__T19appenderNewCapacityVmi16ZQBbFNaNbNiNfmmZm(i64 %curLen_arg, i64 %reqLen_arg) #0 {
  %v.i = alloca i64, align 8                      ; [#uses = 2, size/byte = 8]
  %curLen = alloca i64, align 8                   ; [#uses = 4, size/byte = 8]
  %reqLen = alloca i64, align 8                   ; [#uses = 3, size/byte = 8]
  %mult = alloca i64, align 8                     ; [#uses = 4, size/byte = 8]
  %sugLen = alloca i64, align 8                   ; [#uses = 2, size/byte = 8]
  store i64 %curLen_arg, i64* %curLen, align 8
  store i64 %reqLen_arg, i64* %reqLen, align 8
  %1 = load i64, i64* %curLen, align 8            ; [#uses = 1]
  %2 = icmp eq i64 %1, 0                          ; [#uses = 1]
  br i1 %2, label %if, label %endif

if:                                               ; preds = %0
  %3 = load i64, i64* %reqLen, align 8            ; [#uses = 1]
  %4 = call i64 @_D3std9algorithm10comparison__T3maxTmTiZQjFNaNbNiNfmiZm(i64 %3, i32 8) #1 ; [#uses = 1]
  ret i64 %4

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %0
  %5 = load i64, i64* %curLen, align 8            ; [#uses = 1]
  %6 = mul i64 %5, 16                             ; [#uses = 1]
  store i64 %6, i64* %v.i, align 8
  %7 = load i64, i64* %v.i, align 8               ; [#uses = 1]
  %8 = call i64 @llvm.ctlz.i64(i64 %7, i1 immarg true) #9 ; [#uses = 1]
  %9 = sub i64 63, %8                             ; [#uses = 1]
  %10 = trunc i64 %9 to i32                       ; [#uses = 1]
  %11 = add i32 %10, 1                            ; [#uses = 1]
  %12 = sext i32 %11 to i64                       ; [#uses = 1]
  %13 = udiv i64 1000, %12                        ; [#uses = 1]
  %14 = add i64 100, %13                          ; [#uses = 1]
  store i64 %14, i64* %mult, align 8
  %15 = load i64, i64* %mult, align 8             ; [#uses = 1]
  %16 = icmp ugt i64 %15, 200                     ; [#uses = 1]
  br i1 %16, label %if1, label %endif2

if1:                                              ; preds = %endif
  store i64 200, i64* %mult, align 8
  br label %endif2

endif2:                                           ; preds = %if1, %endif
  %17 = load i64, i64* %curLen, align 8           ; [#uses = 1]
  %18 = load i64, i64* %mult, align 8             ; [#uses = 1]
  %19 = mul i64 %17, %18                          ; [#uses = 1]
  %20 = add i64 %19, 99                           ; [#uses = 1]
  %21 = udiv i64 %20, 100                         ; [#uses = 1]
  store i64 %21, i64* %sugLen, align 8
  %22 = load i64, i64* %reqLen, align 8           ; [#uses = 1]
  %23 = load i64, i64* %sugLen, align 8           ; [#uses = 1]
  %24 = call i64 @_D3std9algorithm10comparison__T3maxTmTmZQjFNaNbNiNfmmZm(i64 %22, i64 %23) #1 ; [#uses = 1]
  ret i64 %24
}

; [#uses = 1]
; Function Attrs: uwtable
define internal i64 @_D3std5array__T8AppenderTAAyaZQp13ensureAddableMFmZ9__lambda5MFNaNbNeZm(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.ensureAddable* ; [#uses = 1]
  %this = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %1, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender"**]
  %2 = load %"std.array.Appender!(string[]).Appender"*, %"std.array.Appender!(string[]).Appender"** %this, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %2, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %4 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %3, align 8 ; [#uses = 1]
  %5 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %4, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  %6 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %5, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %.ptr = load { i64, i8* }*, { i64, i8* }** %6, align 8 ; [#uses = 1]
  %7 = bitcast { i64, i8* }* %.ptr to i8*         ; [#uses = 1]
  %8 = bitcast i8* %.nest_arg to %nest.ensureAddable* ; [#uses = 1]
  %nelems = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %8, i32 0, i32 1 ; [#uses = 1, type = i64*]
  %9 = load i64, i64* %nelems, align 8            ; [#uses = 1]
  %10 = mul i64 %9, 16                            ; [#uses = 1]
  %11 = bitcast i8* %.nest_arg to %nest.ensureAddable* ; [#uses = 1]
  %newlen = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %11, i32 0, i32 2 ; [#uses = 1, type = i64*]
  %12 = load i64, i64* %newlen, align 8           ; [#uses = 1]
  %13 = bitcast i8* %.nest_arg to %nest.ensureAddable* ; [#uses = 1]
  %len = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %13, i32 0, i32 3 ; [#uses = 1, type = i64*]
  %14 = load i64, i64* %len, align 8              ; [#uses = 1]
  %15 = sub i64 %12, %14                          ; [#uses = 1]
  %16 = mul i64 %15, 16                           ; [#uses = 1]
  %17 = call i64 @gc_extend(i8* %7, i64 %10, i64 %16, %object.TypeInfo* null) #1 ; [#uses = 1]
  ret i64 %17
}

; [#uses = 1]
declare i64 @gc_extend(i8*, i64, i64, %object.TypeInfo*) #1

; [#uses = 0]
; Function Attrs: alwaysinline uwtable
define weak_odr i64 @_D4core10checkedint__T4muluZQgFNaNbNiNfmmKbZm(i64 %x_arg, i64 %y_arg, i8* dereferenceable(1) %overflow) #8 {
  %x = alloca i64, align 8                        ; [#uses = 6, size/byte = 8]
  %y = alloca i64, align 8                        ; [#uses = 5, size/byte = 8]
  %res = alloca %"ldc.intrinsics.OverflowRet!ulong.OverflowRet", align 8 ; [#uses = 3, size/byte = 16]
  %.RemoveStructPadding_dump = alloca %"ldc.intrinsics.OverflowRet!ulong.OverflowRet", align 8 ; [#uses = 4, size/byte = 16]
  %r = alloca i64, align 8                        ; [#uses = 4, size/byte = 8]
  store i64 %x_arg, i64* %x, align 8
  store i64 %y_arg, i64* %y, align 8
  %1 = load i64, i64* %x, align 8                 ; [#uses = 1]
  %2 = load i64, i64* %y, align 8                 ; [#uses = 1]
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %1, i64 %2) #9 ; [#uses = 2]
  %4 = bitcast %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %.RemoveStructPadding_dump to i8* ; [#uses = 1]
  call void @llvm.memset.p0i8.i64(i8* align 1 %4, i8 0, i64 16, i1 false)
  %5 = getelementptr inbounds %"ldc.intrinsics.OverflowRet!ulong.OverflowRet", %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %.RemoveStructPadding_dump, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %6 = extractvalue { i64, i1 } %3, 0             ; [#uses = 1]
  store i64 %6, i64* %5, align 8
  %7 = getelementptr inbounds %"ldc.intrinsics.OverflowRet!ulong.OverflowRet", %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %.RemoveStructPadding_dump, i32 0, i32 1 ; [#uses = 1, type = i8*]
  %8 = extractvalue { i64, i1 } %3, 1             ; [#uses = 1]
  %9 = zext i1 %8 to i8                           ; [#uses = 1]
  store i8 %9, i8* %7, align 1
  %10 = bitcast %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %res to i8* ; [#uses = 1]
  %11 = bitcast %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %.RemoveStructPadding_dump to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %11, i64 16, i1 false)
  %12 = getelementptr inbounds %"ldc.intrinsics.OverflowRet!ulong.OverflowRet", %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %res, i32 0, i32 1 ; [#uses = 1, type = i8*]
  %13 = load i8, i8* %12, align 1                 ; [#uses = 1]
  %14 = trunc i8 %13 to i1                        ; [#uses = 1]
  %15 = zext i1 %14 to i32                        ; [#uses = 1]
  %16 = load i8, i8* %overflow, align 1           ; [#uses = 1]
  %17 = trunc i8 %16 to i1                        ; [#uses = 1]
  %18 = zext i1 %17 to i32                        ; [#uses = 1]
  %19 = or i32 %18, %15                           ; [#uses = 1]
  %20 = icmp ne i32 %19, 0                        ; [#uses = 1]
  %21 = zext i1 %20 to i8                         ; [#uses = 1]
  store i8 %21, i8* %overflow, align 1
  %22 = getelementptr inbounds %"ldc.intrinsics.OverflowRet!ulong.OverflowRet", %"ldc.intrinsics.OverflowRet!ulong.OverflowRet"* %res, i32 0, i32 0 ; [#uses = 2, type = i64*]
  %23 = load i64, i64* %22, align 8               ; [#uses = 0]
  %24 = load i64, i64* %22, align 8               ; [#uses = 1]
  ret i64 %24

dummy.afterreturn:                                ; No predecessors!
  %25 = load i64, i64* %x, align 8                ; [#uses = 1]
  %26 = load i64, i64* %y, align 8                ; [#uses = 1]
  %27 = mul i64 %25, %26                          ; [#uses = 1]
  store i64 %27, i64* %r, align 8
  %28 = load i64, i64* %x, align 8                ; [#uses = 1]
  %29 = load i64, i64* %y, align 8                ; [#uses = 1]
  %30 = or i64 %28, %29                           ; [#uses = 1]
  %31 = sext i32 32 to i64                        ; [#uses = 1]
  %32 = lshr i64 %30, %31                         ; [#uses = 1]
  %33 = icmp ne i64 %32, 0                        ; [#uses = 1]
  br i1 %33, label %andand, label %andandend

andand:                                           ; preds = %dummy.afterreturn
  %34 = load i64, i64* %x, align 8                ; [#uses = 1]
  %35 = icmp ne i64 %34, 0                        ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %dummy.afterreturn
  %andandval = phi i1 [ false, %dummy.afterreturn ], [ %35, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand1, label %andandend2

andand1:                                          ; preds = %andandend
  %36 = load i64, i64* %r, align 8                ; [#uses = 1]
  %37 = load i64, i64* %x, align 8                ; [#uses = 1]
  %38 = udiv i64 %36, %37                         ; [#uses = 1]
  %39 = load i64, i64* %y, align 8                ; [#uses = 1]
  %40 = icmp ne i64 %38, %39                      ; [#uses = 1]
  br label %andandend2

andandend2:                                       ; preds = %andand1, %andandend
  %andandval3 = phi i1 [ false, %andandend ], [ %40, %andand1 ] ; [#uses = 1, type = i1]
  br i1 %andandval3, label %if, label %endif

if:                                               ; preds = %andandend2
  store i8 1, i8* %overflow, align 1
  br label %endif

endif:                                            ; preds = %if, %andandend2
  %41 = load i64, i64* %r, align 8                ; [#uses = 0]
  %42 = load i64, i64* %r, align 8                ; [#uses = 1]
  ret i64 %42
}

; [#uses = 2]
; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

; [#uses = 1]
; Function Attrs: uwtable
define internal void @_D3std5array__T8AppenderTAAyaZQp13ensureAddableMFmZ9__lambda9MFNaNbNeZS4core6memory8BlkInfo_(%core.memory.BlkInfo_* noalias sret(%core.memory.BlkInfo_) align 8 %.sret_arg, i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.ensureAddable* ; [#uses = 1]
  %nbytes = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %1, i32 0, i32 4 ; [#uses = 1, type = i64*]
  %2 = load i64, i64* %nbytes, align 8            ; [#uses = 1]
  call void @gc_qalloc(%core.memory.BlkInfo_* noalias sret(%core.memory.BlkInfo_) align 8 %.sret_arg, i64 %2, i32 0, %object.TypeInfo* null) #1
  ret void
}

; [#uses = 2]
declare void @gc_qalloc(%core.memory.BlkInfo_* noalias sret(%core.memory.BlkInfo_) align 8, i64, i32, %object.TypeInfo*) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal void @_D3std5array__T8AppenderTAAyaZQp13ensureAddableMFmZ10__lambda11MFNaNbNiNeZv(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.ensureAddable* ; [#uses = 1]
  %bi = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %1, i32 0, i32 5 ; [#uses = 1, type = %core.memory.BlkInfo_*]
  %2 = getelementptr inbounds %core.memory.BlkInfo_, %core.memory.BlkInfo_* %bi, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %3 = load i8*, i8** %2, align 8                 ; [#uses = 1]
  %4 = bitcast i8* %.nest_arg to %nest.ensureAddable* ; [#uses = 1]
  %this = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %4, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender"**]
  %5 = load %"std.array.Appender!(string[]).Appender"*, %"std.array.Appender!(string[]).Appender"** %this, align 8 ; [#uses = 1]
  %6 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %5, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %7 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %6, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %7, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  %9 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %8, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %.ptr = load { i64, i8* }*, { i64, i8* }** %9, align 8 ; [#uses = 1]
  %10 = bitcast { i64, i8* }* %.ptr to i8*        ; [#uses = 1]
  %11 = bitcast i8* %.nest_arg to %nest.ensureAddable* ; [#uses = 1]
  %len = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %11, i32 0, i32 3 ; [#uses = 1, type = i64*]
  %12 = load i64, i64* %len, align 8              ; [#uses = 1]
  %13 = mul i64 %12, 16                           ; [#uses = 1]
  %14 = call i8* @memcpy(i8* %3, i8* %10, i64 %13) #1 ; [#uses = 0]
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, { i64, i8* }* } @_D3std5array__T8AppenderTAAyaZQp13ensureAddableMFmZ10__lambda12MFNaNbNiNeZQBx(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.ensureAddable* ; [#uses = 1]
  %bi = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %1, i32 0, i32 5 ; [#uses = 1, type = %core.memory.BlkInfo_*]
  %2 = getelementptr inbounds %core.memory.BlkInfo_, %core.memory.BlkInfo_* %bi, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %3 = load i8*, i8** %2, align 8                 ; [#uses = 1]
  %4 = bitcast i8* %3 to { i64, i8* }*            ; [#uses = 1]
  %5 = bitcast i8* %.nest_arg to %nest.ensureAddable* ; [#uses = 1]
  %len = getelementptr inbounds %nest.ensureAddable, %nest.ensureAddable* %5, i32 0, i32 3 ; [#uses = 1, type = i64*]
  %6 = load i64, i64* %len, align 8               ; [#uses = 1]
  %lowerbound = getelementptr inbounds { i64, i8* }, { i64, i8* }* %4, i64 0 ; [#uses = 1, type = { i64, i8* }*]
  %7 = sub i64 %6, 0                              ; [#uses = 1]
  %8 = insertvalue { i64, { i64, i8* }* } undef, i64 %7, 0 ; [#uses = 1]
  %9 = insertvalue { i64, { i64, i8* }* } %8, { i64, i8* }* %lowerbound, 1 ; [#uses = 1]
  ret { i64, { i64, i8* }* } %9
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr void @_D3std5array__T8AppenderTAAyaZQp5clearMFNaNbNiNeZv(%"std.array.Appender!(string[]).Appender"* nonnull %.this_arg) #0 {
  %1 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 2, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %2 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %1, align 8 ; [#uses = 0]
  %3 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %1, align 8 ; [#uses = 1]
  %4 = icmp ne %"std.array.Appender!(string[]).Appender.Data"* %3, null ; [#uses = 1]
  br i1 %4, label %if, label %endif

if:                                               ; preds = %0
  %5 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %6 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %5, align 8 ; [#uses = 1]
  %7 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %6, i32 0, i32 1 ; [#uses = 2, type = { i64, { i64, i8* }* }*]
  %8 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %9 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %8, align 8 ; [#uses = 1]
  %10 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %9, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  %11 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %10, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %.ptr = load { i64, i8* }*, { i64, i8* }** %11, align 8 ; [#uses = 1]
  %lowerbound = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.ptr, i64 0 ; [#uses = 2, type = { i64, i8* }*]
  %12 = insertvalue { i64, { i64, i8* }* } { i64 0, { i64, i8* }* undef }, { i64, i8* }* %lowerbound, 1 ; [#uses = 0]
  %13 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %7, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %7, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  store { i64, i8* }* %lowerbound, { i64, i8* }** %14, align 8
  br label %endif

endif:                                            ; preds = %if, %0
  ret void
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr void @_D3std5array__T8AppenderTAAyaZQp8shrinkToMFNaNemZv(%"std.array.Appender!(string[]).Appender"* nonnull %.this_arg, i64 %newlength_arg) #0 {
  %newlength = alloca i64, align 8                ; [#uses = 4, size/byte = 8]
  store i64 %newlength_arg, i64* %newlength, align 8
  %1 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 2, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %2 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %1, align 8 ; [#uses = 0]
  %3 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %1, align 8 ; [#uses = 1]
  %4 = icmp ne %"std.array.Appender!(string[]).Appender.Data"* %3, null ; [#uses = 1]
  br i1 %4, label %if, label %else

if:                                               ; preds = %0
  %5 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %6 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %5, align 8 ; [#uses = 1]
  %7 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %6, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  %8 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %7, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %8, align 8              ; [#uses = 1]
  %9 = load i64, i64* %newlength, align 8         ; [#uses = 1]
  %10 = icmp ule i64 %9, %.len                    ; [#uses = 1]
  %11 = call zeroext i1 @_D3std9exception__T7enforceZ__TQmTbZQrFNaNfbLAxaAyamZb(i1 zeroext %10, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std5array__T8AppenderTAAyaZQp8shrinkToMFNaNemZ12__dgliteral2MFNaNbNiNfZAxa }, { i64, i8* } { i64 51, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.30, i32 0, i32 0) }, i64 3823) #0 ; [#uses = 0]
  %12 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %13 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %12, align 8 ; [#uses = 1]
  %14 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %13, i32 0, i32 1 ; [#uses = 2, type = { i64, { i64, i8* }* }*]
  %15 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %16 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %15, align 8 ; [#uses = 1]
  %17 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %16, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  %18 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %17, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %.ptr = load { i64, i8* }*, { i64, i8* }** %18, align 8 ; [#uses = 1]
  %19 = load i64, i64* %newlength, align 8        ; [#uses = 1]
  %lowerbound = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.ptr, i64 0 ; [#uses = 2, type = { i64, i8* }*]
  %20 = sub i64 %19, 0                            ; [#uses = 2]
  %21 = insertvalue { i64, { i64, i8* }* } undef, i64 %20, 0 ; [#uses = 1]
  %22 = insertvalue { i64, { i64, i8* }* } %21, { i64, i8* }* %lowerbound, 1 ; [#uses = 0]
  %23 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %14, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %14, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  store { i64, i8* }* %lowerbound, { i64, i8* }** %24, align 8
  br label %endif

else:                                             ; preds = %0
  %25 = load i64, i64* %newlength, align 8        ; [#uses = 1]
  %26 = icmp eq i64 %25, 0                        ; [#uses = 1]
  %27 = call zeroext i1 @_D3std9exception__T7enforceZ__TQmTbZQrFNaNfbLAxaAyamZb(i1 zeroext %26, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std5array__T8AppenderTAAyaZQp8shrinkToMFNaNemZ12__dgliteral3MFNaNbNiNfZAxa }, { i64, i8* } { i64 51, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.30, i32 0, i32 0) }, i64 3827) #0 ; [#uses = 0]
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std5array__T8AppenderTAAyaZQp8shrinkToMFNaNemZ12__dgliteral2MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 53, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.51, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std5array__T8AppenderTAAyaZQp8shrinkToMFNaNemZ12__dgliteral3MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 59, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.52, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4core8internal8lifetime__T18emplaceInitializerTS3std5array__T8AppenderTAAyaZQp4DataZQCgFNaNbNiNeMKQBzZv(%"std.array.Appender!(string[]).Appender.Data"* dereferenceable(32) %chunk) #0 {
  %1 = bitcast %"std.array.Appender!(string[]).Appender.Data"* %chunk to i8* ; [#uses = 1]
  %2 = call i8* @memset(i8* %1, i32 0, i64 32) #1 ; [#uses = 0]
  ret void
}

; [#uses = 2]
declare i8* @memset(i8*, i32, i64) #1

; [#uses = 1]
declare i64 @_d_arraysetcapacity(%object.TypeInfo*, i64, { i64, i8* }*) #1

; [#uses = 1]
declare { i64, i8* } @_d_arraysetlengthT(%object.TypeInfo*, i64, { i64, i8* }*) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, { i64, i8* }* } @_D3std5array__T8AppenderTAAyaZQp__T3putTQoZQiMFQvZ9__lambda3MFNaNbNiNeZQBu(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.put.1*     ; [#uses = 1]
  %this = getelementptr inbounds %nest.put.1, %nest.put.1* %1, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender"**]
  %2 = load %"std.array.Appender!(string[]).Appender"*, %"std.array.Appender!(string[]).Appender"** %this, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds %"std.array.Appender!(string[]).Appender", %"std.array.Appender!(string[]).Appender"* %2, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!(string[]).Appender.Data"**]
  %4 = load %"std.array.Appender!(string[]).Appender.Data"*, %"std.array.Appender!(string[]).Appender.Data"** %3, align 8 ; [#uses = 1]
  %5 = getelementptr inbounds %"std.array.Appender!(string[]).Appender.Data", %"std.array.Appender!(string[]).Appender.Data"* %4, i32 0, i32 1 ; [#uses = 1, type = { i64, { i64, i8* }* }*]
  %6 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %5, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %.ptr = load { i64, i8* }*, { i64, i8* }** %6, align 8 ; [#uses = 1]
  %7 = bitcast i8* %.nest_arg to %nest.put.1*     ; [#uses = 1]
  %len = getelementptr inbounds %nest.put.1, %nest.put.1* %7, i32 0, i32 1 ; [#uses = 1, type = i64*]
  %8 = load i64, i64* %len, align 8               ; [#uses = 1]
  %9 = add i64 %8, 1                              ; [#uses = 1]
  %lowerbound = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.ptr, i64 0 ; [#uses = 1, type = { i64, i8* }*]
  %10 = sub i64 %9, 0                             ; [#uses = 1]
  %11 = insertvalue { i64, { i64, i8* }* } undef, i64 %10, 0 ; [#uses = 1]
  %12 = insertvalue { i64, { i64, i8* }* } %11, { i64, i8* }* %lowerbound, 1 ; [#uses = 1]
  ret { i64, { i64, i8* }* } %12
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* }* @_D3std5array__T8AppenderTAAyaZQp__T3putTQoZQiMFQvZ9__lambda5MFNaNbNiNeZPQBu(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.put.1*     ; [#uses = 1]
  %item = getelementptr inbounds %nest.put.1, %nest.put.1* %1, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  ret { i64, i8* }* %item
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* }* @_D4core8lifetime__T7emplaceTAyaTQeZQqFNaNbNiNfPQtKQwZQh({ i64, i8* }* %chunk_arg, { i64, i8* }* dereferenceable(16) %__param_1) #0 {
  %chunk = alloca { i64, i8* }*, align 8          ; [#uses = 4, size/byte = 8]
  store { i64, i8* }* %chunk_arg, { i64, i8* }** %chunk, align 8
  %1 = load { i64, i8* }*, { i64, i8* }** %chunk, align 8 ; [#uses = 1]
  call void @_D4core8internal8lifetime__T10emplaceRefTAyaTQeTQhZQxFNaNbNiNfKQwKQzZv({ i64, i8* }* dereferenceable(16) %1, { i64, i8* }* dereferenceable(16) %__param_1) #1
  %2 = load { i64, i8* }*, { i64, i8* }** %chunk, align 8 ; [#uses = 0]
  %3 = load { i64, i8* }*, { i64, i8* }** %chunk, align 8 ; [#uses = 1]
  ret { i64, i8* }* %3
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i64 @_D3std9algorithm10comparison__T3maxTmTiZQjFNaNbNiNfmiZm(i64 %__param_0_arg, i32 %__param_1_arg) #0 {
  %__param_0 = alloca i64, align 8                ; [#uses = 3, size/byte = 8]
  %__param_1 = alloca i32, align 4                ; [#uses = 3, size/byte = 4]
  %chooseB = alloca i8, align 1                   ; [#uses = 2, size/byte = 1]
  %condtmp = alloca i64*, align 8                 ; [#uses = 4, size/byte = 8]
  %.makelvaluetmp = alloca i64, align 8           ; [#uses = 2, size/byte = 8]
  store i64 %__param_0_arg, i64* %__param_0, align 8
  store i32 %__param_1_arg, i32* %__param_1, align 4
  %1 = call zeroext i1 @_D3std10functional__T6safeOpVAyaa1_3cZ__TQuTmTiZQBbFNaNbNiNfKmKiZb(i64* dereferenceable(8) %__param_0, i32* dereferenceable(4) %__param_1) #1 ; [#uses = 1]
  %2 = zext i1 %1 to i8                           ; [#uses = 1]
  store i8 %2, i8* %chooseB, align 1
  %3 = load i8, i8* %chooseB, align 1             ; [#uses = 1]
  %4 = trunc i8 %3 to i1                          ; [#uses = 1]
  br i1 %4, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  %5 = load i32, i32* %__param_1, align 4         ; [#uses = 1]
  %6 = sext i32 %5 to i64                         ; [#uses = 1]
  store i64 %6, i64* %.makelvaluetmp, align 8
  store i64* %.makelvaluetmp, i64** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  store i64* %__param_0, i64** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %7 = load i64*, i64** %condtmp, align 8         ; [#uses = 1]
  %8 = load i64, i64* %7, align 8                 ; [#uses = 0]
  %9 = load i64*, i64** %condtmp, align 8         ; [#uses = 1]
  %10 = load i64, i64* %9, align 8                ; [#uses = 1]
  ret i64 %10
}

; [#uses = 1]
; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; [#uses = 0]
declare i32 @_D4core5bitop__T8softScanTmVbi0ZQqFNaNbNiNfmZi(i64) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i64 @_D3std9algorithm10comparison__T3maxTmTmZQjFNaNbNiNfmmZm(i64 %a_arg, i64 %b_arg) #0 {
  %a = alloca i64, align 8                        ; [#uses = 3, size/byte = 8]
  %b = alloca i64, align 8                        ; [#uses = 3, size/byte = 8]
  %condtmp = alloca i64*, align 8                 ; [#uses = 4, size/byte = 8]
  store i64 %a_arg, i64* %a, align 8
  store i64 %b_arg, i64* %b, align 8
  %1 = load i64, i64* %a, align 8                 ; [#uses = 1]
  %2 = load i64, i64* %b, align 8                 ; [#uses = 1]
  %3 = icmp ult i64 %1, %2                        ; [#uses = 1]
  br i1 %3, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  store i64* %b, i64** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  store i64* %a, i64** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %4 = load i64*, i64** %condtmp, align 8         ; [#uses = 1]
  %5 = load i64, i64* %4, align 8                 ; [#uses = 0]
  %6 = load i64*, i64** %condtmp, align 8         ; [#uses = 1]
  %7 = load i64, i64* %6, align 8                 ; [#uses = 1]
  ret i64 %7
}

; [#uses = 1]
declare zeroext i1 @_D3std10functional__T6safeOpVAyaa1_3cZ__TQuTmTiZQBbFNaNbNiNfKmKiZb(i64* dereferenceable(8), i32* dereferenceable(4)) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4core8internal8lifetime__T10emplaceRefTAyaTQeTQhZQxFNaNbNiNfKQwKQzZv({ i64, i8* }* dereferenceable(16) %chunk, { i64, i8* }* dereferenceable(16) %__param_1) #0 {
  %.frame = alloca %nest.emplaceRef, align 8      ; [#uses = 2, size/byte = 8]
  %p = alloca %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"*, align 8 ; [#uses = 3, size/byte = 8]
  %chunk1 = getelementptr inbounds %nest.emplaceRef, %nest.emplaceRef* %.frame, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }**]
  store { i64, i8* }* %chunk, { i64, i8* }** %chunk1, align 8
  %1 = bitcast %nest.emplaceRef* %.frame to i8*   ; [#uses = 1]
  %2 = insertvalue { i8*, %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* (i8*)* } undef, i8* %1, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* (i8*)* } %2, %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* (i8*)* @_D4core8internal8lifetime__T10emplaceRefTAyaTQeTQhZQxFKQoKQrZ9__lambda5MFNaNbNiNeZPSQDeQDcQCw__TQCqTQChTQClTQCpZQDgFKQCyKQDcZ1S, 1 ; [#uses = 2]
  %.funcptr = extractvalue { i8*, %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* (i8*)* } %.func, 1 ; [#uses = 1]
  %.ptr = extractvalue { i8*, %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* (i8*)* } %.func, 0 ; [#uses = 1]
  %3 = call %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  store %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* %3, %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"** %p, align 8
  %4 = load %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"*, %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"** %p, align 8 ; [#uses = 1]
  call void @_D4core8internal8lifetime__T18emplaceInitializerTSQBwQBuQBo__T10emplaceRefTAyaTQeTQhZQxFKQoKQrZ1SZQCsFNaNbNiNeMKQClZv(%"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* dereferenceable(16) %4) #1
  %5 = load %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"*, %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"** %p, align 8 ; [#uses = 1]
  %6 = call %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* @_D4core8internal8lifetime__T10emplaceRefTAyaTQeTQhZQxFKQoKQrZ1S__T6__ctorZQiMFNaNbNcNiNfKQBwZSQDoQDmQDg__TQDaTQCrTQCvTQCzZQDqFKQDiKQDmZQCw(%"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* nonnull returned %5, { i64, i8* }* dereferenceable(16) %__param_1) #1 ; [#uses = 0]
  ret void
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D4core8internal8lifetime__T10emplaceRefTAyaTQeTQhZQxFKQoKQrZ1S11__xopEqualsMxFKxSQDcQDaQCu__TQCoTQCfTQCjTQCnZQDeFKQCwKQDaZQCkZb(%"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* nonnull %.this_arg, %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* dereferenceable(16) %p) #0 {
  %1 = getelementptr inbounds %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S", %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %2 = load { i64, i8* }, { i64, i8* }* %1, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S", %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* %p, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %4 = load { i64, i8* }, { i64, i8* }* %3, align 8 ; [#uses = 1]
  %5 = call zeroext i1 @_D4core8internal5array8equality__T8__equalsTaTaZQoFNaNbNiNeMxAaMxQeZb({ i64, i8* } %2, { i64, i8* } %4) #0 ; [#uses = 1]
  ret i1 %5
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr i64 @_D4core8internal8lifetime__T10emplaceRefTAyaTQeTQhZQxFKQoKQrZ1S9__xtoHashFNbNeKxSQDbQCzQCt__TQCnTQCeTQCiTQCmZQDdFKQCvKQCzZQCjZm(%"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* dereferenceable(16) %p) #0 {
  %h = alloca i64, align 8                        ; [#uses = 5, size/byte = 8]
  store i64 0, i64* %h, align 8
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %0
  %1 = load i64, i64* %h, align 8                 ; [#uses = 1]
  %2 = mul i64 %1, 33                             ; [#uses = 1]
  %3 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D13TypeInfo_xAya6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %4 = load [20 x i8*]*, [20 x i8*]** %3, align 8 ; [#uses = 1]
  %"getHash@vtbl" = getelementptr inbounds [20 x i8*], [20 x i8*]* %4, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %5 = load i8*, i8** %"getHash@vtbl", align 8    ; [#uses = 1]
  %getHash = bitcast i8* %5 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %6 = getelementptr inbounds %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S", %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* %p, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }*]
  %7 = bitcast { i64, i8* }* %6 to i8*            ; [#uses = 1]
  %8 = call i64 %getHash(%object.TypeInfo_Const* nonnull @_D13TypeInfo_xAya6__initZ, i8* %7) ; [#uses = 1]
  %9 = add i64 %2, %8                             ; [#uses = 1]
  store i64 %9, i64* %h, align 8
  br label %unrolledend

unrolledend:                                      ; preds = %unrolledstmt
  %10 = load i64, i64* %h, align 8                ; [#uses = 0]
  %11 = load i64, i64* %h, align 8                ; [#uses = 1]
  ret i64 %11
}

; [#uses = 1]
; Function Attrs: uwtable
define internal %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* @_D4core8internal8lifetime__T10emplaceRefTAyaTQeTQhZQxFKQoKQrZ9__lambda5MFNaNbNiNeZPSQDeQDcQCw__TQCqTQChTQClTQCpZQDgFKQCyKQDcZ1S(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.emplaceRef* ; [#uses = 1]
  %chunk = getelementptr inbounds %nest.emplaceRef, %nest.emplaceRef* %1, i32 0, i32 0 ; [#uses = 1, type = { i64, i8* }**]
  %2 = load { i64, i8* }*, { i64, i8* }** %chunk, align 8 ; [#uses = 1]
  %3 = bitcast { i64, i8* }* %2 to %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* ; [#uses = 1]
  ret %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* %3
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4core8internal8lifetime__T18emplaceInitializerTSQBwQBuQBo__T10emplaceRefTAyaTQeTQhZQxFKQoKQrZ1SZQCsFNaNbNiNeMKQClZv(%"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* dereferenceable(16) %chunk) #0 {
  %1 = bitcast %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* %chunk to i8* ; [#uses = 1]
  %2 = call i8* @memset(i8* %1, i32 0, i64 16) #1 ; [#uses = 0]
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* @_D4core8internal8lifetime__T10emplaceRefTAyaTQeTQhZQxFKQoKQrZ1S__T6__ctorZQiMFNaNbNcNiNfKQBwZSQDoQDmQDg__TQDaTQCrTQCvTQCzZQDqFKQDiKQDmZQCw(%"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* nonnull returned %.this_arg, { i64, i8* }* dereferenceable(16) %__param_0) #0 {
  %1 = getelementptr inbounds %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S", %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* %.this_arg, i32 0, i32 0 ; [#uses = 2, type = { i64, i8* }*]
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %1, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %3, align 8              ; [#uses = 1]
  store i64 %.len, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %1, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %5, align 8              ; [#uses = 1]
  store i8* %.ptr, i8** %4, align 8
  ret %"core.internal.lifetime.emplaceRef!(string, string, string).emplaceRef.S"* %.this_arg
}

; [#uses = 0]
; Function Attrs: alwaysinline uwtable
define weak_odr { i64, i8* }* @_D4core8internal5array8equality__T2atTxAyaZQjFNaNbNcNiNeAxQtmZxQy({ i64, { i64, i8* }* } %r_arg, i64 %i_arg) #8 {
  %r = alloca { i64, { i64, i8* }* }, align 8     ; [#uses = 2, size/byte = 16]
  %i = alloca i64, align 8                        ; [#uses = 2, size/byte = 8]
  store { i64, { i64, i8* }* } %r_arg, { i64, { i64, i8* }* }* %r, align 8
  store i64 %i_arg, i64* %i, align 8
  %1 = getelementptr inbounds { i64, { i64, i8* }* }, { i64, { i64, i8* }* }* %r, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* }**]
  %.ptr = load { i64, i8* }*, { i64, i8* }** %1, align 8 ; [#uses = 1]
  %2 = load i64, i64* %i, align 8                 ; [#uses = 1]
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.ptr, i64 %2 ; [#uses = 1, type = { i64, i8* }*]
  ret { i64, i8* }* %3
}

; [#uses = 8]
declare %hunt.framework.application.Application.Application* @_D4hunt9framework11application11Application3appFZCQBwQBuQBnQBdQBg() #1

; [#uses = 4]
declare %hunt.framework.config.ApplicationConfig.ApplicationConfig* @_D4hunt9framework11application11ApplicationQn6configMFZCQCcQCaQr17ApplicationConfigQt(%hunt.framework.application.Application.Application* nonnull) #1

; [#uses = 4]
declare void @_D4hunt4util14ResoureManager14collectResoureFNbZv() #1

; [#uses = 5]
; Function Attrs: nounwind uwtable
declare %object.Throwable* @_d_eh_enter_catch(i8*) #10

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka87_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20227465737441706922292e63616c6c48616e646c6572TC6object9ThrowableZQQnFNbLQBaZv({ i8*, %object.Throwable* (i8*)* } %__param_0_arg) #0 {
  %1 = alloca { i8*, %object.Throwable* (i8*)* }, align 8 ; [#uses = 2, size/byte = 16]
  %.frame = alloca %nest.logError, align 8        ; [#uses = 3, size/byte = 16]
  store { i8*, %object.Throwable* (i8*)* } %__param_0_arg, { i8*, %object.Throwable* (i8*)* }* %1, align 8
  %__param_0 = getelementptr inbounds %nest.logError, %nest.logError* %.frame, i32 0, i32 0 ; [#uses = 1, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = bitcast { i8*, %object.Throwable* (i8*)* }* %__param_0 to i8* ; [#uses = 1]
  %3 = bitcast { i8*, %object.Throwable* (i8*)* }* %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false)
  %4 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %5 = icmp eq %hunt.logging.Logger.Logger* %4, null ; [#uses = 1]
  br i1 %5, label %if, label %else

if:                                               ; preds = %0
  %6 = bitcast %nest.logError* %.frame to i8*     ; [#uses = 1]
  %7 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %6, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %7, { i64, i8* } (i8*)* @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka87_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20227465737441706922292e63616c6c48616e646c6572TC6object9ThrowableZQQnFNbLQBaZ12__dgliteral3MFNaNiNfZQRl, 1 ; [#uses = 1]
  call void @_D4hunt7logging6LoggerQh16writeFormatColorFNbEQBsQBqQBl8LogLevelLAyaZv(i32 3, { i8*, { i64, i8* } (i8*)* } %.func) #1
  br label %endif

else:                                             ; preds = %0
  %8 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %9 = getelementptr inbounds %hunt.logging.Logger.Logger, %hunt.logging.Logger.Logger* %8, i32 0, i32 0 ; [#uses = 1, type = [11 x i8*]**]
  %10 = load [11 x i8*]*, [11 x i8*]** %9, align 8 ; [#uses = 1]
  %"doWrite@vtbl" = getelementptr inbounds [11 x i8*], [11 x i8*]* %10, i32 0, i32 9 ; [#uses = 1, type = i8**]
  %11 = load i8*, i8** %"doWrite@vtbl", align 8   ; [#uses = 1]
  %doWrite = bitcast i8* %11 to void (%hunt.logging.Logger.Logger*, i32, { i8*, { i64, i8* } (i8*)* })* ; [#uses = 1]
  %12 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %13 = bitcast %nest.logError* %.frame to i8*    ; [#uses = 1]
  %14 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %13, 0 ; [#uses = 1]
  %.func2 = insertvalue { i8*, { i64, i8* } (i8*)* } %14, { i64, i8* } (i8*)* @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka87_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20227465737441706922292e63616c6c48616e646c6572TC6object9ThrowableZQQnFNbLQBaZ12__dgliteral4MFNaNiNfZQRl, 1 ; [#uses = 1]
  call void %doWrite(%hunt.logging.Logger.Logger* nonnull %12, i32 3, { i8*, { i64, i8* } (i8*)* } %.func2)
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal %object.Throwable* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa7_74657374417069ZQCjFCQEe4http7routing14RoutingContextQqZ12__dgliteral4MFNaNbNiNfZC6object9Throwable(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.callHandler* ; [#uses = 1]
  %t = getelementptr inbounds %nest.callHandler, %nest.callHandler* %1, i32 0, i32 0 ; [#uses = 2, type = %object.Throwable**]
  %2 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 0]
  %3 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 1]
  ret %object.Throwable* %3
}

; [#uses = 5]
; Function Attrs: uwtable
declare i32 @_d_eh_personality(i32, i32, i64, i8*, i8*) #2

; [#uses = 5]
; Function Attrs: cold noreturn uwtable
declare void @_Unwind_Resume(i8*) #5

; [#uses = 4]
declare %hunt.logging.Logger.Logger* @_D4hunt9framework11application11ApplicationQn6loggerMFZCQCc7logging6LoggerQh(%hunt.framework.application.Application.Application* nonnull) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka87_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20227465737441706922292e63616c6c48616e646c6572TC6object9ThrowableZQQkMFNbLQBbZv(%hunt.logging.Logger.Logger* nonnull %.this_arg, { i8*, %object.Throwable* (i8*)* } %__param_0_arg) #0 {
  %1 = alloca %hunt.logging.Logger.Logger*, align 8 ; [#uses = 4, size/byte = 8]
  %2 = alloca { i8*, %object.Throwable* (i8*)* }, align 8 ; [#uses = 2, size/byte = 16]
  %.frame = alloca %nest.error, align 8           ; [#uses = 3, size/byte = 24]
  store %hunt.logging.Logger.Logger* %.this_arg, %hunt.logging.Logger.Logger** %1, align 8
  store { i8*, %object.Throwable* (i8*)* } %__param_0_arg, { i8*, %object.Throwable* (i8*)* }* %2, align 8
  %__param_0 = getelementptr inbounds %nest.error, %nest.error* %.frame, i32 0, i32 0 ; [#uses = 1, type = { i8*, %object.Throwable* (i8*)* }*]
  %3 = bitcast { i8*, %object.Throwable* (i8*)* }* %__param_0 to i8* ; [#uses = 1]
  %4 = bitcast { i8*, %object.Throwable* (i8*)* }* %2 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false)
  %this = getelementptr inbounds %nest.error, %nest.error* %.frame, i32 0, i32 1 ; [#uses = 1, type = %hunt.logging.Logger.Logger**]
  %5 = bitcast %hunt.logging.Logger.Logger** %this to i8* ; [#uses = 1]
  %6 = bitcast %hunt.logging.Logger.Logger** %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 8, i1 false)
  %7 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** %1, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds %hunt.logging.Logger.Logger, %hunt.logging.Logger.Logger* %7, i32 0, i32 0 ; [#uses = 1, type = [11 x i8*]**]
  %9 = load [11 x i8*]*, [11 x i8*]** %8, align 8 ; [#uses = 1]
  %"doWrite@vtbl" = getelementptr inbounds [11 x i8*], [11 x i8*]* %9, i32 0, i32 9 ; [#uses = 1, type = i8**]
  %10 = load i8*, i8** %"doWrite@vtbl", align 8   ; [#uses = 1]
  %doWrite = bitcast i8* %10 to void (%hunt.logging.Logger.Logger*, i32, { i8*, { i64, i8* } (i8*)* })* ; [#uses = 1]
  %11 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** %1, align 8 ; [#uses = 1]
  %12 = bitcast %nest.error* %.frame to i8*       ; [#uses = 1]
  %13 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %12, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %13, { i64, i8* } (i8*)* @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka87_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20227465737441706922292e63616c6c48616e646c6572TC6object9ThrowableZQQkMFLQzZ12__dgliteral4MFNaNiNfZQRj, 1 ; [#uses = 1]
  call void %doWrite(%hunt.logging.Logger.Logger* nonnull %11, i32 3, { i8*, { i64, i8* } (i8*)* } %.func)
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal %object.Throwable* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa7_74657374417069ZQCjFCQEe4http7routing14RoutingContextQqZ12__dgliteral5MFNaNbNiNfZC6object9Throwable(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.callHandler* ; [#uses = 1]
  %t = getelementptr inbounds %nest.callHandler, %nest.callHandler* %1, i32 0, i32 0 ; [#uses = 2, type = %object.Throwable**]
  %2 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 0]
  %3 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 1]
  ret %object.Throwable* %3
}

; [#uses = 5]
declare %hunt.framework.http.Response.Response* @_D4hunt9framework4http8ResponseQj6__ctorMFZCQBqQBoQBhQBfQBi(%hunt.framework.http.Response.Response* nonnull returned) #1

; [#uses = 0]
declare void @_D4hunt9framework4http8ResponseQj7doErrorMFtC6object9ThrowableAyaZv(%hunt.framework.http.Response.Response* nonnull, i16 zeroext, %object.Throwable*, { i64, i8* }) #1

; [#uses = 5]
; Function Attrs: nounwind memory(none)
declare i32 @llvm.eh.typeid.for(i8*) #11

; [#uses = 0]
declare %hunt.http.routing.RoutingContext.RoutingContext* @_D4hunt4http7routing14RoutingContextQq3endMFZCQBsQBqQBoQBjQBm(%hunt.http.routing.RoutingContext.RoutingContext* nonnull) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka87_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20227465737441706922292e63616c6c48616e646c6572TC6object9ThrowableZQQnFNbLQBaZ12__dgliteral3MFNaNiNfZQRl(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.logError*  ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.logError, %nest.logError* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = %object.Throwable* (i8*)**]
  %.funcptr = load %object.Throwable* (i8*)*, %object.Throwable* (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call %object.Throwable* %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTC6object9ThrowableZQBeFQxZAya(%object.Throwable* %4) #1 ; [#uses = 1]
  %6 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 87, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.55, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 101, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.56, i32 0, i32 0) }, i64 1088, i32 3, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } zeroinitializer) #1 ; [#uses = 1]
  ret { i64, i8* } %6
}

; [#uses = 12]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTC6object9ThrowableZQBeFQxZAya(%object.Throwable* %__param_0_arg) #0 {
  %__param_0 = alloca %object.Throwable*, align 8 ; [#uses = 2, size/byte = 8]
  %w = alloca %"std.array.Appender!string.Appender", align 8 ; [#uses = 3, size/byte = 8]
  %1 = alloca %"std.array.Appender!string.Appender", align 8 ; [#uses = 2, size/byte = 8]
  %arg = alloca %object.Throwable*, align 8       ; [#uses = 2, size/byte = 8]
  store %object.Throwable* %__param_0_arg, %object.Throwable** %__param_0, align 8
  %2 = call %"std.array.Appender!string.Appender" @_D3std5array__T8appenderTAyaZQoFNaNbNfZSQBmQBl__T8AppenderTQBiZQo() #0 ; [#uses = 1]
  store %"std.array.Appender!string.Appender" %2, %"std.array.Appender!string.Appender"* %1, align 8
  %3 = bitcast %"std.array.Appender!string.Appender"* %w to i8* ; [#uses = 1]
  %4 = bitcast %"std.array.Appender!string.Appender"* %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 8, i1 false)
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %0
  %5 = load %object.Throwable*, %object.Throwable** %__param_0, align 8 ; [#uses = 1]
  store %object.Throwable* %5, %object.Throwable** %arg, align 8
  %6 = load %object.Throwable*, %object.Throwable** %arg, align 8 ; [#uses = 1]
  %7 = call i32 @_D3std6format5write__T14formattedWriteTSQBm5array__T8AppenderTAyaZQoTaTC6object9ThrowableZQCqFKQCeMxAaQBfZk(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } { i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0) }, %object.Throwable* %6) #1 ; [#uses = 0]
  br label %unrolledend

unrolledend:                                      ; preds = %unrolledstmt
  %8 = call { i64, i8* } @_D3std5array__T8AppenderTAyaZQo4dataMNgFNaNbNdNiNeZQBa(%"std.array.Appender!string.Appender"* nonnull %w) #1 ; [#uses = 1]
  ret { i64, i8* } %8
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka87_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20227465737441706922292e63616c6c48616e646c6572TC6object9ThrowableZQQnFNbLQBaZ12__dgliteral4MFNaNiNfZQRl(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.logError*  ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.logError, %nest.logError* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = %object.Throwable* (i8*)**]
  %.funcptr = load %object.Throwable* (i8*)*, %object.Throwable* (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call %object.Throwable* %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTC6object9ThrowableZQBeFQxZAya(%object.Throwable* %4) #1 ; [#uses = 1]
  %6 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 87, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.55, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 101, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.56, i32 0, i32 0) }, i64 1088, i32 3, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } zeroinitializer) #1 ; [#uses = 1]
  ret { i64, i8* } %6
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D3std6format5write__T14formattedWriteTSQBm5array__T8AppenderTAyaZQoTaTC6object9ThrowableZQCqFKQCeMxAaQBfZk(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %fmt_arg, %object.Throwable* %__param_2_arg) #0 {
  %fmt = alloca { i64, i8* }, align 8             ; [#uses = 4, size/byte = 16]
  %__param_2 = alloca %object.Throwable*, align 8 ; [#uses = 8, size/byte = 8]
  %.frame = alloca %nest.formattedWrite, align 8  ; [#uses = 3, size/byte = 72]
  %currentArg = alloca i32, align 4               ; [#uses = 26, size/byte = 4]
  %width = alloca i32, align 4                    ; [#uses = 5, size/byte = 4]
  %index = alloca i32, align 4                    ; [#uses = 5, size/byte = 4]
  %width8 = alloca i32, align 4                   ; [#uses = 5, size/byte = 4]
  %precision = alloca i32, align 4                ; [#uses = 3, size/byte = 4]
  %index22 = alloca i32, align 4                  ; [#uses = 5, size/byte = 4]
  %precision26 = alloca i32, align 4              ; [#uses = 3, size/byte = 4]
  %separators = alloca i32, align 4               ; [#uses = 2, size/byte = 4]
  %separatorChar = alloca i32, align 4            ; [#uses = 2, size/byte = 4]
  %index44 = alloca i64, align 8                  ; [#uses = 3, size/byte = 8]
  %.getAddressOf_dump = alloca { i64, i8* }, align 8 ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %fmt_arg, { i64, i8* }* %fmt, align 8
  store %object.Throwable* %__param_2_arg, %object.Throwable** %__param_2, align 8
  %spec = getelementptr inbounds %nest.formattedWrite, %nest.formattedWrite* %.frame, i32 0, i32 0 ; [#uses = 32, type = %"std.format.spec.FormatSpec!char.FormatSpec"*]
  %1 = bitcast %"std.format.spec.FormatSpec!char.FormatSpec"* %spec to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 bitcast (%"std.format.spec.FormatSpec!char.FormatSpec"* @_D3std6format4spec__T10FormatSpecTaZQp6__initZ to i8*), i64 72, i1 false)
  %2 = load { i64, i8* }, { i64, i8* }* %fmt, align 8 ; [#uses = 1]
  %3 = call %"std.format.spec.FormatSpec!char.FormatSpec"* @_D3std6format4spec__T10FormatSpecTaZQp6__ctorMFNaNbNcNiNfIAaZSQCiQChQCd__TQCbTaZQCh(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull returned %spec, { i64, i8* } %2) #1 ; [#uses = 0]
  store i32 0, i32* %currentArg, align 4
  br label %forcond

forcond:                                          ; preds = %forinc, %0
  %4 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp__T17writeUpToNextSpecTSQCi5array__T8AppenderTAyaZQoZQByMFNaNlNfKQBqZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %spec, %"std.array.Appender!string.Appender"* dereferenceable(8) %w) #1 ; [#uses = 1]
  br i1 %4, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %5 = load i32, i32* %currentArg, align 4        ; [#uses = 1]
  %6 = zext i32 %5 to i64                         ; [#uses = 1]
  %7 = icmp eq i64 %6, 1                          ; [#uses = 1]
  br i1 %7, label %andand, label %andandend

andand:                                           ; preds = %forbody
  %8 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 7 ; [#uses = 1, type = i8*]
  %9 = load i8, i8* %8, align 1                   ; [#uses = 1]
  %10 = icmp ne i8 %9, 0                          ; [#uses = 1]
  %11 = icmp eq i1 %10, false                     ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %forbody
  %andandval = phi i1 [ false, %forbody ], [ %11, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %if, label %endif

if:                                               ; preds = %andandend
  %12 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fmt, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %12, align 8             ; [#uses = 1]
  %13 = icmp eq i64 %.len, 0                      ; [#uses = 1]
  %14 = bitcast %nest.formattedWrite* %.frame to i8* ; [#uses = 1]
  %15 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %14, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %15, { i64, i8* } (i8*)* @_D3std6format5write__T14formattedWriteTSQBm5array__T8AppenderTAyaZQoTaTC6object9ThrowableZQCqFKQCeMxAaQBfZ12__dgliteral7MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %16 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %13, { i8*, { i64, i8* } (i8*)* } %.func, { i64, i8* } { i64 58, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0) }, i64 542) #1 ; [#uses = 0]
  br label %endfor

afterbreak:                                       ; No predecessors!
  br label %endif

endif:                                            ; preds = %afterbreak, %andandend
  %17 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %18 = load i32, i32* %17, align 4               ; [#uses = 1]
  %19 = icmp eq i32 %18, 2147483647               ; [#uses = 1]
  br i1 %19, label %if1, label %else

if1:                                              ; preds = %endif
  %20 = load i32, i32* %currentArg, align 4       ; [#uses = 1]
  %21 = load %object.Throwable*, %object.Throwable** %__param_2, align 8 ; [#uses = 1]
  %22 = call i32 @_D3std6format8internal5write__T9getNthIntVAyaa13_696e7465676572207769647468TC6object9ThrowableZQCmFNaNfkQBcZi(i32 %20, %object.Throwable* %21) #1 ; [#uses = 1]
  store i32 %22, i32* %width, align 4
  %23 = load i32, i32* %width, align 4            ; [#uses = 1]
  %24 = icmp slt i32 %23, 0                       ; [#uses = 1]
  br i1 %24, label %if3, label %endif4

if3:                                              ; preds = %if1
  call void @_D3std6format4spec__T10FormatSpecTaZQp6flDashMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %spec, i1 zeroext true) #1
  %25 = load i32, i32* %width, align 4            ; [#uses = 1]
  %negval = sub i32 0, %25                        ; [#uses = 1]
  store i32 %negval, i32* %width, align 4
  br label %endif4

endif4:                                           ; preds = %if3, %if1
  %26 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %27 = load i32, i32* %width, align 4            ; [#uses = 1]
  store i32 %27, i32* %26, align 4
  %28 = load i32, i32* %currentArg, align 4       ; [#uses = 1]
  %29 = add i32 %28, 1                            ; [#uses = 1]
  store i32 %29, i32* %currentArg, align 4
  br label %endif2

else:                                             ; preds = %endif
  %30 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %31 = load i32, i32* %30, align 4               ; [#uses = 1]
  %32 = icmp slt i32 %31, 0                       ; [#uses = 1]
  br i1 %32, label %if5, label %endif6

if5:                                              ; preds = %else
  %33 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %34 = load i32, i32* %33, align 4               ; [#uses = 1]
  %negval7 = sub i32 0, %34                       ; [#uses = 1]
  store i32 %negval7, i32* %index, align 4
  %35 = load i32, i32* %index, align 4            ; [#uses = 1]
  %36 = icmp ugt i32 %35, 0                       ; [#uses = 1]
  br i1 %36, label %assertPassed, label %assertFailed

assertPassed:                                     ; preds = %if5
  %37 = load i32, i32* %index, align 4            ; [#uses = 1]
  %38 = sub i32 %37, 1                            ; [#uses = 1]
  %39 = load %object.Throwable*, %object.Throwable** %__param_2, align 8 ; [#uses = 1]
  %40 = call i32 @_D3std6format8internal5write__T9getNthIntVAyaa13_696e7465676572207769647468TC6object9ThrowableZQCmFNaNfkQBcZi(i32 %38, %object.Throwable* %39) #1 ; [#uses = 1]
  store i32 %40, i32* %width8, align 4
  %41 = load i32, i32* %currentArg, align 4       ; [#uses = 1]
  %42 = load i32, i32* %index, align 4            ; [#uses = 1]
  %43 = icmp ult i32 %41, %42                     ; [#uses = 1]
  br i1 %43, label %if9, label %endif10

if9:                                              ; preds = %assertPassed
  %44 = load i32, i32* %index, align 4            ; [#uses = 1]
  store i32 %44, i32* %currentArg, align 4
  br label %endif10

endif10:                                          ; preds = %if9, %assertPassed
  %45 = load i32, i32* %width8, align 4           ; [#uses = 1]
  %46 = icmp slt i32 %45, 0                       ; [#uses = 1]
  br i1 %46, label %if11, label %endif12

if11:                                             ; preds = %endif10
  call void @_D3std6format4spec__T10FormatSpecTaZQp6flDashMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %spec, i1 zeroext true) #1
  %47 = load i32, i32* %width8, align 4           ; [#uses = 1]
  %negval13 = sub i32 0, %47                      ; [#uses = 1]
  store i32 %negval13, i32* %width8, align 4
  br label %endif12

endif12:                                          ; preds = %if11, %endif10
  %48 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %49 = load i32, i32* %width8, align 4           ; [#uses = 1]
  store i32 %49, i32* %48, align 4
  br label %endif6

assertFailed:                                     ; preds = %if5
  call void @_d_assert_msg({ i64, i8* } { i64 35, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.60, i32 0, i32 0) }, { i64, i8* } { i64 58, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0) }, i32 562) #5
  unreachable

endif6:                                           ; preds = %endif12, %else
  br label %endif2

endif2:                                           ; preds = %endif6, %endif4
  %50 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %51 = load i32, i32* %50, align 4               ; [#uses = 1]
  %52 = icmp eq i32 %51, 2147483647               ; [#uses = 1]
  br i1 %52, label %if14, label %else16

if14:                                             ; preds = %endif2
  %53 = load i32, i32* %currentArg, align 4       ; [#uses = 1]
  %54 = load %object.Throwable*, %object.Throwable** %__param_2, align 8 ; [#uses = 1]
  %55 = call i32 @_D3std6format8internal5write__T9getNthIntVAyaa17_696e746567657220707265636973696f6eTC6object9ThrowableZQCuFNaNfkQBcZi(i32 %53, %object.Throwable* %54) #1 ; [#uses = 1]
  store i32 %55, i32* %precision, align 4
  %56 = load i32, i32* %precision, align 4        ; [#uses = 1]
  %57 = icmp sge i32 %56, 0                       ; [#uses = 1]
  br i1 %57, label %if17, label %else19

if17:                                             ; preds = %if14
  %58 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %59 = load i32, i32* %precision, align 4        ; [#uses = 1]
  store i32 %59, i32* %58, align 4
  br label %endif18

else19:                                           ; preds = %if14
  %60 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 1 ; [#uses = 1, type = i32*]
  store i32 2147483646, i32* %60, align 4
  br label %endif18

endif18:                                          ; preds = %else19, %if17
  %61 = load i32, i32* %currentArg, align 4       ; [#uses = 1]
  %62 = add i32 %61, 1                            ; [#uses = 1]
  store i32 %62, i32* %currentArg, align 4
  br label %endif15

else16:                                           ; preds = %endif2
  %63 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %64 = load i32, i32* %63, align 4               ; [#uses = 1]
  %65 = icmp slt i32 %64, 0                       ; [#uses = 1]
  br i1 %65, label %if20, label %endif21

if20:                                             ; preds = %else16
  %66 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %67 = load i32, i32* %66, align 4               ; [#uses = 1]
  %negval23 = sub i32 0, %67                      ; [#uses = 1]
  store i32 %negval23, i32* %index22, align 4
  %68 = load i32, i32* %index22, align 4          ; [#uses = 1]
  %69 = icmp ugt i32 %68, 0                       ; [#uses = 1]
  br i1 %69, label %assertPassed24, label %assertFailed25

assertPassed24:                                   ; preds = %if20
  %70 = load i32, i32* %index22, align 4          ; [#uses = 1]
  %71 = sub i32 %70, 1                            ; [#uses = 1]
  %72 = load %object.Throwable*, %object.Throwable** %__param_2, align 8 ; [#uses = 1]
  %73 = call i32 @_D3std6format8internal5write__T9getNthIntVAyaa17_696e746567657220707265636973696f6eTC6object9ThrowableZQCuFNaNfkQBcZi(i32 %71, %object.Throwable* %72) #1 ; [#uses = 1]
  store i32 %73, i32* %precision26, align 4
  %74 = load i32, i32* %currentArg, align 4       ; [#uses = 1]
  %75 = load i32, i32* %index22, align 4          ; [#uses = 1]
  %76 = icmp ult i32 %74, %75                     ; [#uses = 1]
  br i1 %76, label %if27, label %endif28

if27:                                             ; preds = %assertPassed24
  %77 = load i32, i32* %index22, align 4          ; [#uses = 1]
  store i32 %77, i32* %currentArg, align 4
  br label %endif28

endif28:                                          ; preds = %if27, %assertPassed24
  %78 = load i32, i32* %precision26, align 4      ; [#uses = 1]
  %79 = icmp sge i32 %78, 0                       ; [#uses = 1]
  br i1 %79, label %if29, label %else31

if29:                                             ; preds = %endif28
  %80 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %81 = load i32, i32* %precision26, align 4      ; [#uses = 1]
  store i32 %81, i32* %80, align 4
  br label %endif30

else31:                                           ; preds = %endif28
  %82 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 1 ; [#uses = 1, type = i32*]
  store i32 2147483646, i32* %82, align 4
  br label %endif30

endif30:                                          ; preds = %else31, %if29
  br label %endif21

assertFailed25:                                   ; preds = %if20
  call void @_d_assert_msg({ i64, i8* } { i64 39, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.61, i32 0, i32 0) }, { i64, i8* } { i64 58, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0) }, i32 585) #5
  unreachable

endif21:                                          ; preds = %endif30, %else16
  br label %endif15

endif15:                                          ; preds = %endif21, %endif18
  %83 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %84 = load i32, i32* %83, align 4               ; [#uses = 1]
  %85 = icmp eq i32 %84, 2147483647               ; [#uses = 1]
  br i1 %85, label %if32, label %endif33

if32:                                             ; preds = %endif15
  %86 = load i32, i32* %currentArg, align 4       ; [#uses = 1]
  %87 = load %object.Throwable*, %object.Throwable** %__param_2, align 8 ; [#uses = 1]
  %88 = call i32 @_D3std6format8internal5write__T9getNthIntVAyaa21_736570617261746f72206469676974207769647468TC6object9ThrowableZQDcFNaNfkQBcZi(i32 %86, %object.Throwable* %87) #1 ; [#uses = 1]
  store i32 %88, i32* %separators, align 4
  %89 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %90 = load i32, i32* %separators, align 4       ; [#uses = 1]
  store i32 %90, i32* %89, align 4
  %91 = load i32, i32* %currentArg, align 4       ; [#uses = 1]
  %92 = add i32 %91, 1                            ; [#uses = 1]
  store i32 %92, i32* %currentArg, align 4
  br label %endif33

endif33:                                          ; preds = %if32, %endif15
  %93 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %94 = load i8, i8* %93, align 1                 ; [#uses = 1]
  %95 = trunc i8 %94 to i1                        ; [#uses = 1]
  br i1 %95, label %if34, label %endif35

if34:                                             ; preds = %endif33
  %96 = load i32, i32* %currentArg, align 4       ; [#uses = 1]
  %97 = load %object.Throwable*, %object.Throwable** %__param_2, align 8 ; [#uses = 1]
  %98 = call i32 @_D3std6format8internal5write__T6getNthVAyaa19_736570617261746f7220636861726163746572SQDf6traits10isSomeCharTwTC6object9ThrowableZQDuFNaNfkQBcZw(i32 %96, %object.Throwable* %97) #1 ; [#uses = 1]
  store i32 %98, i32* %separatorChar, align 4
  %99 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 5 ; [#uses = 1, type = i32*]
  %100 = load i32, i32* %separatorChar, align 4   ; [#uses = 1]
  store i32 %100, i32* %99, align 4
  %101 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 3 ; [#uses = 1, type = i8*]
  store i8 0, i8* %101, align 1
  %102 = load i32, i32* %currentArg, align 4      ; [#uses = 1]
  %103 = add i32 %102, 1                          ; [#uses = 1]
  store i32 %103, i32* %currentArg, align 4
  br label %endif35

endif35:                                          ; preds = %if34, %endif33
  %104 = load i32, i32* %currentArg, align 4      ; [#uses = 1]
  %105 = zext i32 %104 to i64                     ; [#uses = 1]
  %106 = icmp eq i64 %105, 1                      ; [#uses = 1]
  br i1 %106, label %andand36, label %andandend37

andand36:                                         ; preds = %endif35
  %107 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 7 ; [#uses = 1, type = i8*]
  %108 = load i8, i8* %107, align 1               ; [#uses = 1]
  %109 = icmp ne i8 %108, 0                       ; [#uses = 1]
  %110 = icmp eq i1 %109, false                   ; [#uses = 1]
  br label %andandend37

andandend37:                                      ; preds = %andand36, %endif35
  %andandval38 = phi i1 [ false, %endif35 ], [ %110, %andand36 ] ; [#uses = 1, type = i1]
  br i1 %andandval38, label %if39, label %endif40

if39:                                             ; preds = %andandend37
  %111 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fmt, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len41 = load i64, i64* %111, align 8          ; [#uses = 1]
  %112 = icmp eq i64 %.len41, 0                   ; [#uses = 1]
  %113 = bitcast %nest.formattedWrite* %.frame to i8* ; [#uses = 1]
  %114 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %113, 0 ; [#uses = 1]
  %.func42 = insertvalue { i8*, { i64, i8* } (i8*)* } %114, { i64, i8* } (i8*)* @_D3std6format5write__T14formattedWriteTSQBm5array__T8AppenderTAyaZQoTaTC6object9ThrowableZQCqFKQCeMxAaQBfZ13__dgliteral13MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %115 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %112, { i8*, { i64, i8* } (i8*)* } %.func42, { i64, i8* } { i64 58, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0) }, i64 612) #1 ; [#uses = 0]
  br label %endfor

afterbreak43:                                     ; No predecessors!
  br label %endif40

endif40:                                          ; preds = %afterbreak43, %andandend37
  %116 = load i32, i32* %currentArg, align 4      ; [#uses = 1]
  %117 = zext i32 %116 to i64                     ; [#uses = 1]
  store i64 %117, i64* %index44, align 8
  %118 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 7 ; [#uses = 1, type = i8*]
  %119 = load i8, i8* %118, align 1               ; [#uses = 1]
  %120 = zext i8 %119 to i32                      ; [#uses = 1]
  %121 = icmp ne i32 %120, 0                      ; [#uses = 1]
  br i1 %121, label %if45, label %else47

if45:                                             ; preds = %endif40
  %122 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 7 ; [#uses = 1, type = i8*]
  %123 = load i8, i8* %122, align 1               ; [#uses = 1]
  %124 = zext i8 %123 to i32                      ; [#uses = 1]
  %125 = sub i32 %124, 1                          ; [#uses = 1]
  %126 = sext i32 %125 to i64                     ; [#uses = 1]
  store i64 %126, i64* %index44, align 8
  br label %endif46

else47:                                           ; preds = %endif40
  %127 = load i32, i32* %currentArg, align 4      ; [#uses = 1]
  %128 = add i32 %127, 1                          ; [#uses = 1]
  store i32 %128, i32* %currentArg, align 4
  br label %endif46

endif46:                                          ; preds = %else47, %if45
  br label %label.SWITCH

label.SWITCH:                                     ; preds = %endif46
  %129 = load i64, i64* %index44, align 8         ; [#uses = 1]
  switch i64 %129, label %defaultcntr [
    i64 0, label %casecntr
  ]

switchbody:                                       ; No predecessors!
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %switchbody
  br label %case

casecntr:                                         ; preds = %label.SWITCH
  br label %case

case:                                             ; preds = %casecntr, %unrolledstmt
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTC6object9ThrowableTaZQCnFKQCeKQBeMKxSQDxQDw4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, %object.Throwable** dereferenceable(8) %__param_2, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %spec) #1
  %130 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 8 ; [#uses = 1, type = i8*]
  %131 = load i8, i8* %130, align 1               ; [#uses = 1]
  %132 = zext i8 %131 to i32                      ; [#uses = 1]
  %133 = load i32, i32* %currentArg, align 4      ; [#uses = 1]
  %134 = icmp ult i32 %133, %132                  ; [#uses = 1]
  br i1 %134, label %if48, label %endif49

if48:                                             ; preds = %case
  %135 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 8 ; [#uses = 1, type = i8*]
  %136 = load i8, i8* %135, align 1               ; [#uses = 1]
  %137 = zext i8 %136 to i32                      ; [#uses = 1]
  store i32 %137, i32* %currentArg, align 4
  br label %endif49

endif49:                                          ; preds = %if48, %case
  %138 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 8 ; [#uses = 1, type = i8*]
  %139 = load i8, i8* %138, align 1               ; [#uses = 1]
  %140 = zext i8 %139 to i32                      ; [#uses = 1]
  %141 = sext i32 %140 to i64                     ; [#uses = 1]
  %142 = icmp ult i64 1, %141                     ; [#uses = 1]
  br i1 %142, label %if50, label %else52

if50:                                             ; preds = %endif49
  br label %default

aftergotodefault:                                 ; No predecessors!
  br label %endif51

else52:                                           ; preds = %endif49
  br label %switchend

afterbreak53:                                     ; No predecessors!
  br label %endif51

endif51:                                          ; preds = %afterbreak53, %aftergotodefault
  br label %unrolledend

unrolledend:                                      ; preds = %endif51
  br label %default

defaultcntr:                                      ; preds = %label.SWITCH
  br label %default

default:                                          ; preds = %defaultcntr, %unrolledend, %if50
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std6format15FormatException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %std.format.FormatException* ; [#uses = 5]
  %vtbl = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std6format15FormatException6__vtblZ, [10 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %143 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %144 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* @_D3std6format15FormatException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %145 = bitcast { i64, i8* }* %143 to i8*        ; [#uses = 1]
  %146 = bitcast { i64, i8* }* %144 to i8*        ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %145, i8* align 1 %146, i64 68, i1 false)
  %147 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 7 ; [#uses = 1, type = i8*]
  %148 = load i8, i8* %147, align 1               ; [#uses = 1]
  %149 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %150 = load i8, i8* %149, align 1               ; [#uses = 1]
  store { i64, i8* } { i64 15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.63, i32 0, i32 0) }, { i64, i8* }* %.getAddressOf_dump, align 8
  %151 = call { i64, i8* } @_D3std4conv__T4textTAyaThTaTaTQkTmZQvFNaNbNfQyhaaQBdmZQBi({ i64, i8* } { i64 22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.62, i32 0, i32 0) }, i8 zeroext %148, i8 zeroext 36, i8 zeroext %150, { i64, i8* }* byval({ i64, i8* }) align 8 %.getAddressOf_dump, i64 1) #1 ; [#uses = 1]
  %152 = call %std.format.FormatException* @_D3std6format15FormatException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCtQCsQCo(%std.format.FormatException* nonnull returned %.newclass_gc, { i64, i8* } %151, { i64, i8* } { i64 58, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0) }, i64 651, %object.Throwable* null) #1 ; [#uses = 0]
  %153 = bitcast %std.format.FormatException* %.newclass_gc to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %153) #5
  unreachable

afterthrow:                                       ; No predecessors!
  br label %switchend

switchend:                                        ; preds = %afterthrow, %else52
  br label %forinc

forinc:                                           ; preds = %switchend
  br label %forcond

endfor:                                           ; preds = %if39, %if, %forcond
  %154 = load i32, i32* %currentArg, align 4      ; [#uses = 0]
  %155 = load i32, i32* %currentArg, align 4      ; [#uses = 1]
  ret i32 %155
}

; [#uses = 4]
; Function Attrs: uwtable
define weak_odr %"std.format.spec.FormatSpec!char.FormatSpec"* @_D3std6format4spec__T10FormatSpecTaZQp6__ctorMFNaNbNcNiNfIAaZSQCiQChQCd__TQCbTaZQCh(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull returned %.this_arg, { i64, i8* } %fmt_arg) #0 {
  %fmt = alloca { i64, i8* }, align 8             ; [#uses = 3, size/byte = 16]
  store { i64, i8* } %fmt_arg, { i64, i8* }* %fmt, align 8
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %1, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fmt, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %3, align 8              ; [#uses = 1]
  store i64 %.len, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %1, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fmt, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %5, align 8              ; [#uses = 1]
  store i8* %.ptr, i8** %4, align 8
  ret %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp__T17writeUpToNextSpecTSQCi5array__T8AppenderTAyaZQoZQByMFNaNlNfKQBqZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, %"std.array.Appender!string.Appender"* dereferenceable(8) %writer) #0 {
  %i = alloca i64, align 8                        ; [#uses = 9, size/byte = 8]
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %2 = call zeroext i1 @_D3std5range10primitives__T5emptyTAxaZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %1) #0 ; [#uses = 1]
  br i1 %2, label %if, label %endif

if:                                               ; preds = %0
  ret i1 false

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %0
  store i64 0, i64* %i, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %endif
  %3 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %4, align 8              ; [#uses = 1]
  %5 = load i64, i64* %i, align 8                 ; [#uses = 1]
  %6 = icmp ult i64 %5, %.len                     ; [#uses = 1]
  br i1 %6, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %7 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %8 = load i64, i64* %i, align 8                 ; [#uses = 2]
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %7, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %9, align 8             ; [#uses = 2]
  %bounds.cmp = icmp ult i64 %8, %.len1           ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %forbody
  %10 = load i64, i64* %i, align 8                ; [#uses = 1]
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %7, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %11, align 8             ; [#uses = 1]
  %12 = getelementptr inbounds i8, i8* %.ptr, i64 %10 ; [#uses = 1, type = i8*]
  %13 = load i8, i8* %12, align 1                 ; [#uses = 1]
  %14 = zext i8 %13 to i32                        ; [#uses = 1]
  %15 = icmp ne i32 %14, 37                       ; [#uses = 1]
  br i1 %15, label %if2, label %endif3

if2:                                              ; preds = %bounds.ok
  br label %forinc

aftercontinue:                                    ; No predecessors!
  br label %endif3

endif3:                                           ; preds = %aftercontinue, %bounds.ok
  %16 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %17 = load i64, i64* %i, align 8                ; [#uses = 3]
  %18 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %16, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len6 = load i64, i64* %18, align 8            ; [#uses = 2]
  %bounds.cmp.up = icmp ule i64 %17, %.len6       ; [#uses = 1]
  br i1 %bounds.cmp.up, label %bounds.ok4, label %bounds.fail5

bounds.ok4:                                       ; preds = %endif3
  %19 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %16, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr7 = load i8*, i8** %19, align 8            ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr7, i64 0 ; [#uses = 1, type = i8*]
  %20 = sub i64 %17, 0                            ; [#uses = 1]
  %21 = insertvalue { i64, i8* } undef, i64 %20, 0 ; [#uses = 1]
  %22 = insertvalue { i64, i8* } %21, i8* %lowerbound, 1 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTAxaZQBnFNaNbNfKQBtQsZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } %22) #1
  %23 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %24 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %25 = load i64, i64* %i, align 8                ; [#uses = 4]
  %26 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %24, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len8 = load i64, i64* %26, align 8            ; [#uses = 3]
  %27 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %24, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len11 = load i64, i64* %27, align 8           ; [#uses = 1]
  %bounds.cmp.lo = icmp ule i64 %25, %.len8       ; [#uses = 1]
  br i1 %bounds.cmp.lo, label %bounds.ok9, label %bounds.fail10

bounds.ok9:                                       ; preds = %bounds.ok4
  %28 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %24, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr12 = load i8*, i8** %28, align 8           ; [#uses = 1]
  %lowerbound13 = getelementptr inbounds i8, i8* %.ptr12, i64 %25 ; [#uses = 2, type = i8*]
  %29 = sub i64 %.len8, %25                       ; [#uses = 2]
  %30 = insertvalue { i64, i8* } undef, i64 %29, 0 ; [#uses = 1]
  %31 = insertvalue { i64, i8* } %30, i8* %lowerbound13, 1 ; [#uses = 0]
  %32 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %23, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %29, i64* %32, align 8
  %33 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %23, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound13, i8** %33, align 8
  %34 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %35 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %34, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len14 = load i64, i64* %35, align 8           ; [#uses = 1]
  %36 = icmp uge i64 %.len14, 2                   ; [#uses = 1]
  %37 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %36, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std6format4spec__T10FormatSpecTaZQp__T17writeUpToNextSpecTSQCi5array__T8AppenderTAyaZQoZQByMFNlKQBmZ12__dgliteral3MFNaNbNiNfZAxa }, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 260) #1 ; [#uses = 0]
  %38 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %39 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %40 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %39, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len15 = load i64, i64* %40, align 8           ; [#uses = 3]
  %41 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %39, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len18 = load i64, i64* %41, align 8           ; [#uses = 1]
  %bounds.cmp.lo19 = icmp ule i64 1, %.len15      ; [#uses = 1]
  br i1 %bounds.cmp.lo19, label %bounds.ok16, label %bounds.fail17

bounds.ok16:                                      ; preds = %bounds.ok9
  %42 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %39, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr20 = load i8*, i8** %42, align 8           ; [#uses = 1]
  %lowerbound21 = getelementptr inbounds i8, i8* %.ptr20, i64 1 ; [#uses = 2, type = i8*]
  %43 = sub i64 %.len15, 1                        ; [#uses = 2]
  %44 = insertvalue { i64, i8* } undef, i64 %43, 0 ; [#uses = 1]
  %45 = insertvalue { i64, i8* } %44, i8* %lowerbound21, 1 ; [#uses = 0]
  %46 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %38, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %43, i64* %46, align 8
  %47 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %38, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound21, i8** %47, align 8
  %48 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %49 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %48, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len22 = load i64, i64* %49, align 8           ; [#uses = 2]
  %bounds.cmp23 = icmp ult i64 0, %.len22         ; [#uses = 1]
  br i1 %bounds.cmp23, label %bounds.ok24, label %bounds.fail25

bounds.ok24:                                      ; preds = %bounds.ok16
  %50 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %48, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr26 = load i8*, i8** %50, align 8           ; [#uses = 1]
  %51 = getelementptr inbounds i8, i8* %.ptr26, i64 0 ; [#uses = 1, type = i8*]
  %52 = load i8, i8* %51, align 1                 ; [#uses = 1]
  %53 = zext i8 %52 to i32                        ; [#uses = 1]
  %54 = icmp ne i32 %53, 37                       ; [#uses = 1]
  br i1 %54, label %if27, label %endif28

if27:                                             ; preds = %bounds.ok24
  call void @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNaNlNfZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0
  ret i1 true

dummy.afterreturn29:                              ; No predecessors!
  br label %endif28

endif28:                                          ; preds = %dummy.afterreturn29, %bounds.ok24
  store i64 0, i64* %i, align 8
  br label %forinc

bounds.fail25:                                    ; preds = %bounds.ok16
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 263, i64 0, i64 %.len22) #5
  unreachable

bounds.fail17:                                    ; preds = %bounds.ok9
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 261, i64 1, i64 %.len15, i64 %.len18) #5
  unreachable

bounds.fail10:                                    ; preds = %bounds.ok4
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 259, i64 %25, i64 %.len8, i64 %.len11) #5
  unreachable

bounds.fail5:                                     ; preds = %endif3
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 258, i64 0, i64 %17, i64 %.len6) #5
  unreachable

bounds.fail:                                      ; preds = %forbody
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 257, i64 %8, i64 %.len1) #5
  unreachable

forinc:                                           ; preds = %endif28, %if2
  %55 = load i64, i64* %i, align 8                ; [#uses = 1]
  %56 = add i64 %55, 1                            ; [#uses = 1]
  store i64 %56, i64* %i, align 8
  br label %forcond

endfor:                                           ; preds = %forcond
  %57 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %58 = load { i64, i8* }, { i64, i8* }* %57, align 8 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTAxaZQBnFNaNbNfKQBtQsZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } %58) #1
  %59 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  store { i64, i8* } zeroinitializer, { i64, i8* }* %59, align 8
  ret i1 false
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format5write__T14formattedWriteTSQBm5array__T8AppenderTAyaZQoTaTC6object9ThrowableZQCqFKQCeMxAaQBfZ12__dgliteral7MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.formattedWrite* ; [#uses = 1]
  %spec = getelementptr inbounds %nest.formattedWrite, %nest.formattedWrite* %1, i32 0, i32 0 ; [#uses = 1, type = %"std.format.spec.FormatSpec!char.FormatSpec"*]
  %2 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %3 = load i8, i8* %2, align 1                   ; [#uses = 1]
  %4 = call { i64, i8* } @_D3std4conv__T4textTAyaTaZQmFNaNbNfQpaZQt({ i64, i8* } { i64 26, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i32 0, i32 0) }, i8 zeroext %3) #1 ; [#uses = 1]
  ret { i64, i8* } %4
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std4conv__T4textTAyaTaZQmFNaNbNfQpaZQt({ i64, i8* } %__param_0_arg, i8 zeroext %__param_1_arg) #0 {
  %__param_0 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %__param_1 = alloca i8, align 1                 ; [#uses = 2, size/byte = 1]
  store { i64, i8* } %__param_0_arg, { i64, i8* }* %__param_0, align 8
  store i8 %__param_1_arg, i8* %__param_1, align 1
  %1 = load { i64, i8* }, { i64, i8* }* %__param_0, align 8 ; [#uses = 1]
  %2 = load i8, i8* %__param_1, align 1           ; [#uses = 1]
  %3 = call { i64, i8* } @_D3std4conv__T8textImplTAyaTQeTaZQtFNaNbNfQsaZQw({ i64, i8* } %1, i8 zeroext %2) #1 ; [#uses = 1]
  ret { i64, i8* } %3
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr i32 @_D3std6format8internal5write__T9getNthIntVAyaa13_696e7465676572207769647468TC6object9ThrowableZQCmFNaNfkQBcZi(i32 %index_arg, %object.Throwable* %__param_1_arg) #0 {
  %index = alloca i32, align 4                    ; [#uses = 2, size/byte = 4]
  %__param_1 = alloca %object.Throwable*, align 8 ; [#uses = 2, size/byte = 8]
  store i32 %index_arg, i32* %index, align 4
  store %object.Throwable* %__param_1_arg, %object.Throwable** %__param_1, align 8
  %1 = load i32, i32* %index, align 4             ; [#uses = 1]
  %2 = load %object.Throwable*, %object.Throwable** %__param_1, align 8 ; [#uses = 1]
  %3 = call i32 @_D3std6format8internal5write__T6getNthVAyaa13_696e7465676572207769647468SQCt6traits10isIntegralTiTC6object9ThrowableZQDiFNaNfkQBcZi(i32 %1, %object.Throwable* %2) #1 ; [#uses = 1]
  ret i32 %3
}

; [#uses = 3]
; Function Attrs: uwtable
define weak_odr void @_D3std6format4spec__T10FormatSpecTaZQp6flDashMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext %v_arg) #0 {
  %v = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %1 = zext i1 %v_arg to i8                       ; [#uses = 1]
  store i8 %1, i8* %v, align 1
  %2 = load i8, i8* %v, align 1                   ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  br i1 %3, label %if, label %else

if:                                               ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %5 = load i8, i8* %4, align 1                   ; [#uses = 1]
  %6 = zext i8 %5 to i32                          ; [#uses = 1]
  %7 = or i32 %6, 1                               ; [#uses = 1]
  %8 = trunc i32 %7 to i8                         ; [#uses = 1]
  store i8 %8, i8* %4, align 1
  br label %endif

else:                                             ; preds = %0
  %9 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %10 = load i8, i8* %9, align 1                  ; [#uses = 1]
  %11 = zext i8 %10 to i32                        ; [#uses = 1]
  %12 = and i32 %11, 254                          ; [#uses = 1]
  %13 = trunc i32 %12 to i8                       ; [#uses = 1]
  store i8 %13, i8* %9, align 1
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr i32 @_D3std6format8internal5write__T9getNthIntVAyaa17_696e746567657220707265636973696f6eTC6object9ThrowableZQCuFNaNfkQBcZi(i32 %index_arg, %object.Throwable* %__param_1_arg) #0 {
  %index = alloca i32, align 4                    ; [#uses = 2, size/byte = 4]
  %__param_1 = alloca %object.Throwable*, align 8 ; [#uses = 2, size/byte = 8]
  store i32 %index_arg, i32* %index, align 4
  store %object.Throwable* %__param_1_arg, %object.Throwable** %__param_1, align 8
  %1 = load i32, i32* %index, align 4             ; [#uses = 1]
  %2 = load %object.Throwable*, %object.Throwable** %__param_1, align 8 ; [#uses = 1]
  %3 = call i32 @_D3std6format8internal5write__T6getNthVAyaa17_696e746567657220707265636973696f6eSQDb6traits10isIntegralTiTC6object9ThrowableZQDqFNaNfkQBcZi(i32 %1, %object.Throwable* %2) #1 ; [#uses = 1]
  ret i32 %3
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D3std6format8internal5write__T9getNthIntVAyaa21_736570617261746f72206469676974207769647468TC6object9ThrowableZQDcFNaNfkQBcZi(i32 %index_arg, %object.Throwable* %__param_1_arg) #0 {
  %index = alloca i32, align 4                    ; [#uses = 2, size/byte = 4]
  %__param_1 = alloca %object.Throwable*, align 8 ; [#uses = 2, size/byte = 8]
  store i32 %index_arg, i32* %index, align 4
  store %object.Throwable* %__param_1_arg, %object.Throwable** %__param_1, align 8
  %1 = load i32, i32* %index, align 4             ; [#uses = 1]
  %2 = load %object.Throwable*, %object.Throwable** %__param_1, align 8 ; [#uses = 1]
  %3 = call i32 @_D3std6format8internal5write__T6getNthVAyaa21_736570617261746f72206469676974207769647468SQDj6traits10isIntegralTiTC6object9ThrowableZQDyFNaNfkQBcZi(i32 %1, %object.Throwable* %2) #1 ; [#uses = 1]
  ret i32 %3
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D3std6format8internal5write__T6getNthVAyaa19_736570617261746f7220636861726163746572SQDf6traits10isSomeCharTwTC6object9ThrowableZQDuFNaNfkQBcZw(i32 %index_arg, %object.Throwable* %__param_1_arg) #0 {
  %index = alloca i32, align 4                    ; [#uses = 3, size/byte = 4]
  %__param_1 = alloca %object.Throwable*, align 8 ; [#uses = 1, size/byte = 8]
  store i32 %index_arg, i32* %index, align 4
  store %object.Throwable* %__param_1_arg, %object.Throwable** %__param_1, align 8
  %1 = load i32, i32* %index, align 4             ; [#uses = 1]
  switch i32 %1, label %defaultcntr [
    i32 0, label %casecntr
  ]

switchbody:                                       ; No predecessors!
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %switchbody
  br label %case

casecntr:                                         ; preds = %0
  br label %case

case:                                             ; preds = %casecntr, %unrolledstmt
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std6format15FormatException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %std.format.FormatException* ; [#uses = 5]
  %vtbl = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std6format15FormatException6__vtblZ, [10 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %2 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %3 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* @_D3std6format15FormatException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %4 = bitcast { i64, i8* }* %2 to i8*            ; [#uses = 1]
  %5 = bitcast { i64, i8* }* %3 to i8*            ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 68, i1 false)
  %6 = load i32, i32* %index, align 4             ; [#uses = 1]
  %7 = add i32 %6, 1                              ; [#uses = 1]
  %8 = call { i64, i8* } @_D3std4conv__T4textTAyaTQeTQhTQkTkZQvFNaNbNfQyQBaQBdQBgkZQBl({ i64, i8* } { i64 19, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.81, i32 0, i32 0) }, { i64, i8* } { i64 15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i32 0, i32 0) }, { i64, i8* } { i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i32 0, i32 0) }, { i64, i8* } { i64 15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i32 0, i32 0) }, i32 %7) #0 ; [#uses = 1]
  %9 = call %std.format.FormatException* @_D3std6format15FormatException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCtQCsQCo(%std.format.FormatException* nonnull returned %.newclass_gc, { i64, i8* } %8, { i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i64 3244, %object.Throwable* null) #1 ; [#uses = 0]
  %10 = bitcast %std.format.FormatException* %.newclass_gc to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %10) #5
  unreachable

afterthrow:                                       ; No predecessors!
  br label %unrolledend

unrolledend:                                      ; preds = %afterthrow
  br label %default

defaultcntr:                                      ; preds = %0
  br label %default

default:                                          ; preds = %defaultcntr, %unrolledend
  %.newclass_gc_alloc1 = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std6format15FormatException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc2 = bitcast %object.Object* %.newclass_gc_alloc1 to %std.format.FormatException* ; [#uses = 5]
  %vtbl3 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc2, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std6format15FormatException6__vtblZ, [10 x i8*]** %vtbl3, align 8
  %monitor4 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc2, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor4, align 8
  %11 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc2, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %12 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* @_D3std6format15FormatException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %13 = bitcast { i64, i8* }* %11 to i8*          ; [#uses = 1]
  %14 = bitcast { i64, i8* }* %12 to i8*          ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %14, i64 68, i1 false)
  %15 = call { i64, i8* } @_D3std4conv__T4textTAyaTQeTQhZQqFNaNbNfQtQvQxZQBa({ i64, i8* } { i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i32 0, i32 0) }, { i64, i8* } { i64 19, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.81, i32 0, i32 0) }, { i64, i8* } { i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i32 0, i32 0) }) #0 ; [#uses = 1]
  %16 = call %std.format.FormatException* @_D3std6format15FormatException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCtQCsQCo(%std.format.FormatException* nonnull returned %.newclass_gc2, { i64, i8* } %15, { i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i64 3250, %object.Throwable* null) #1 ; [#uses = 0]
  %17 = bitcast %std.format.FormatException* %.newclass_gc2 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %17) #5
  unreachable

afterthrow5:                                      ; No predecessors!
  br label %switchend

switchend:                                        ; preds = %afterthrow5
  ret i32 undef
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format5write__T14formattedWriteTSQBm5array__T8AppenderTAyaZQoTaTC6object9ThrowableZQCqFKQCeMxAaQBfZ13__dgliteral13MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.formattedWrite* ; [#uses = 1]
  %spec = getelementptr inbounds %nest.formattedWrite, %nest.formattedWrite* %1, i32 0, i32 0 ; [#uses = 1, type = %"std.format.spec.FormatSpec!char.FormatSpec"*]
  %2 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %spec, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %3 = load i8, i8* %2, align 1                   ; [#uses = 1]
  %4 = call { i64, i8* } @_D3std4conv__T4textTAyaTaZQmFNaNbNfQpaZQt({ i64, i8* } { i64 26, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i32 0, i32 0) }, i8 zeroext %3) #1 ; [#uses = 1]
  ret { i64, i8* } %4
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTC6object9ThrowableTaZQCnFKQCeKQBeMKxSQDxQDw4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, %object.Throwable** dereferenceable(8) %val, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %2 = load i32, i32* %1, align 4                 ; [#uses = 1]
  %3 = icmp ne i32 %2, 2147483647                 ; [#uses = 1]
  br i1 %3, label %andand, label %andandend

andand:                                           ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %5 = load i32, i32* %4, align 4                 ; [#uses = 1]
  %6 = icmp ne i32 %5, 2147483647                 ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %0
  %andandval = phi i1 [ false, %0 ], [ %6, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand1, label %andandend2

andand1:                                          ; preds = %andandend
  %7 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %8 = load i32, i32* %7, align 4                 ; [#uses = 1]
  %9 = icmp ne i32 %8, 2147483647                 ; [#uses = 1]
  br label %andandend2

andandend2:                                       ; preds = %andand1, %andandend
  %andandval3 = phi i1 [ false, %andandend ], [ %9, %andand1 ] ; [#uses = 1, type = i1]
  br i1 %andandval3, label %andand4, label %andandend5

andand4:                                          ; preds = %andandend2
  %10 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %11 = load i8, i8* %10, align 1                 ; [#uses = 1]
  %12 = trunc i8 %11 to i1                        ; [#uses = 1]
  %13 = icmp eq i1 %12, false                     ; [#uses = 1]
  br label %andandend5

andandend5:                                       ; preds = %andand4, %andandend2
  %andandval6 = phi i1 [ false, %andandend2 ], [ %13, %andand4 ] ; [#uses = 1, type = i1]
  %14 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %andandval6, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTC6object9ThrowableTaZQCnFKQCeKQBeMKxSQDxQDw4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa }, { i64, i8* } { i64 58, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0) }, i64 1235) #0 ; [#uses = 0]
  %15 = load %object.Throwable*, %object.Throwable** %val, align 8 ; [#uses = 1]
  call void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTC6object9ThrowableTaZQCrFKQCeQBdMKxSQEjQEi4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, %object.Throwable* %15, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  ret void
}

; [#uses = 12]
declare %std.format.FormatException* @_D3std6format15FormatException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCtQCsQCo(%std.format.FormatException* nonnull returned, { i64, i8* }, { i64, i8* }, i64, %object.Throwable*) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std4conv__T4textTAyaThTaTaTQkTmZQvFNaNbNfQyhaaQBdmZQBi({ i64, i8* } %__param_0_arg, i8 zeroext %__param_1_arg, i8 zeroext %__param_2_arg, i8 zeroext %__param_3_arg, { i64, i8* }* byval({ i64, i8* }) align 8 %__param_4, i64 %__param_5_arg) #0 {
  %__param_0 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %__param_1 = alloca i8, align 1                 ; [#uses = 2, size/byte = 1]
  %__param_2 = alloca i8, align 1                 ; [#uses = 2, size/byte = 1]
  %__param_3 = alloca i8, align 1                 ; [#uses = 2, size/byte = 1]
  %__param_5 = alloca i64, align 8                ; [#uses = 2, size/byte = 8]
  store { i64, i8* } %__param_0_arg, { i64, i8* }* %__param_0, align 8
  store i8 %__param_1_arg, i8* %__param_1, align 1
  store i8 %__param_2_arg, i8* %__param_2, align 1
  store i8 %__param_3_arg, i8* %__param_3, align 1
  store i64 %__param_5_arg, i64* %__param_5, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %__param_0, align 8 ; [#uses = 1]
  %2 = load i8, i8* %__param_1, align 1           ; [#uses = 1]
  %3 = load i8, i8* %__param_2, align 1           ; [#uses = 1]
  %4 = load i8, i8* %__param_3, align 1           ; [#uses = 1]
  %5 = load i64, i64* %__param_5, align 8         ; [#uses = 1]
  %6 = call { i64, i8* } @_D3std4conv__T8textImplTAyaTQeThTaTaTQnTmZQBcFNaNbNfQBchaaQBimZQBn({ i64, i8* } %1, i8 zeroext %2, i8 zeroext %3, i8 zeroext %4, { i64, i8* }* byval({ i64, i8* }) align 8 %__param_4, i64 %5) #1 ; [#uses = 1]
  ret { i64, i8* } %6
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr i32 @_D3std6format4spec__T10FormatSpecTaZQp16separatorCharPosMFNaNbNiNfZi(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 {
  %condtmp = alloca i32*, align 8                 ; [#uses = 4, size/byte = 8]
  %.makelvaluetmp = alloca i32, align 4           ; [#uses = 2, size/byte = 4]
  %.makelvaluetmp1 = alloca i32, align 4          ; [#uses = 2, size/byte = 4]
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %2 = load i8, i8* %1, align 1                   ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  br i1 %3, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  store i32 2147483647, i32* %.makelvaluetmp, align 4
  store i32* %.makelvaluetmp, i32** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  store i32 2147483646, i32* %.makelvaluetmp1, align 4
  store i32* %.makelvaluetmp1, i32** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %4 = load i32*, i32** %condtmp, align 8         ; [#uses = 1]
  %5 = load i32, i32* %4, align 4                 ; [#uses = 0]
  %6 = load i32*, i32** %condtmp, align 8         ; [#uses = 1]
  %7 = load i32, i32* %6, align 4                 ; [#uses = 1]
  ret i32 %7
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr void @_D3std6format4spec__T10FormatSpecTaZQp16separatorCharPosMFNaNbNiNfiZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i32 %value_arg) #0 {
  %value = alloca i32, align 4                    ; [#uses = 2, size/byte = 4]
  store i32 %value_arg, i32* %value, align 4
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %2 = load i32, i32* %value, align 4             ; [#uses = 1]
  %3 = icmp eq i32 %2, 2147483647                 ; [#uses = 1]
  %4 = zext i1 %3 to i8                           ; [#uses = 1]
  store i8 %4, i8* %1, align 1
  ret void
}

; [#uses = 8]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flDashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 1, type = i8*]
  %2 = load i8, i8* %1, align 1                   ; [#uses = 1]
  %3 = zext i8 %2 to i32                          ; [#uses = 1]
  %4 = and i32 %3, 1                              ; [#uses = 1]
  %5 = icmp ne i32 %4, 0                          ; [#uses = 1]
  ret i1 %5
}

; [#uses = 4]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flZeroMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 1, type = i8*]
  %2 = load i8, i8* %1, align 1                   ; [#uses = 1]
  %3 = zext i8 %2 to i32                          ; [#uses = 1]
  %4 = and i32 %3, 2                              ; [#uses = 1]
  %5 = icmp ne i32 %4, 0                          ; [#uses = 1]
  ret i1 %5
}

; [#uses = 3]
; Function Attrs: uwtable
define weak_odr void @_D3std6format4spec__T10FormatSpecTaZQp6flZeroMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext %v_arg) #0 {
  %v = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %1 = zext i1 %v_arg to i8                       ; [#uses = 1]
  store i8 %1, i8* %v, align 1
  %2 = load i8, i8* %v, align 1                   ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  br i1 %3, label %if, label %else

if:                                               ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %5 = load i8, i8* %4, align 1                   ; [#uses = 1]
  %6 = zext i8 %5 to i32                          ; [#uses = 1]
  %7 = or i32 %6, 2                               ; [#uses = 1]
  %8 = trunc i32 %7 to i8                         ; [#uses = 1]
  store i8 %8, i8* %4, align 1
  br label %endif

else:                                             ; preds = %0
  %9 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %10 = load i8, i8* %9, align 1                  ; [#uses = 1]
  %11 = zext i8 %10 to i32                        ; [#uses = 1]
  %12 = and i32 %11, 253                          ; [#uses = 1]
  %13 = trunc i32 %12 to i8                       ; [#uses = 1]
  store i8 %13, i8* %9, align 1
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 3]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp7flSpaceMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 1, type = i8*]
  %2 = load i8, i8* %1, align 1                   ; [#uses = 1]
  %3 = zext i8 %2 to i32                          ; [#uses = 1]
  %4 = and i32 %3, 4                              ; [#uses = 1]
  %5 = icmp ne i32 %4, 0                          ; [#uses = 1]
  ret i1 %5
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format4spec__T10FormatSpecTaZQp7flSpaceMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext %v_arg) #0 {
  %v = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %1 = zext i1 %v_arg to i8                       ; [#uses = 1]
  store i8 %1, i8* %v, align 1
  %2 = load i8, i8* %v, align 1                   ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  br i1 %3, label %if, label %else

if:                                               ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %5 = load i8, i8* %4, align 1                   ; [#uses = 1]
  %6 = zext i8 %5 to i32                          ; [#uses = 1]
  %7 = or i32 %6, 4                               ; [#uses = 1]
  %8 = trunc i32 %7 to i8                         ; [#uses = 1]
  store i8 %8, i8* %4, align 1
  br label %endif

else:                                             ; preds = %0
  %9 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %10 = load i8, i8* %9, align 1                  ; [#uses = 1]
  %11 = zext i8 %10 to i32                        ; [#uses = 1]
  %12 = and i32 %11, 251                          ; [#uses = 1]
  %13 = trunc i32 %12 to i8                       ; [#uses = 1]
  store i8 %13, i8* %9, align 1
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 4]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flPlusMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 1, type = i8*]
  %2 = load i8, i8* %1, align 1                   ; [#uses = 1]
  %3 = zext i8 %2 to i32                          ; [#uses = 1]
  %4 = and i32 %3, 8                              ; [#uses = 1]
  %5 = icmp ne i32 %4, 0                          ; [#uses = 1]
  ret i1 %5
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format4spec__T10FormatSpecTaZQp6flPlusMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext %v_arg) #0 {
  %v = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %1 = zext i1 %v_arg to i8                       ; [#uses = 1]
  store i8 %1, i8* %v, align 1
  %2 = load i8, i8* %v, align 1                   ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  br i1 %3, label %if, label %else

if:                                               ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %5 = load i8, i8* %4, align 1                   ; [#uses = 1]
  %6 = zext i8 %5 to i32                          ; [#uses = 1]
  %7 = or i32 %6, 8                               ; [#uses = 1]
  %8 = trunc i32 %7 to i8                         ; [#uses = 1]
  store i8 %8, i8* %4, align 1
  br label %endif

else:                                             ; preds = %0
  %9 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %10 = load i8, i8* %9, align 1                  ; [#uses = 1]
  %11 = zext i8 %10 to i32                        ; [#uses = 1]
  %12 = and i32 %11, 247                          ; [#uses = 1]
  %13 = trunc i32 %12 to i8                       ; [#uses = 1]
  store i8 %13, i8* %9, align 1
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 7]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flHashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 1, type = i8*]
  %2 = load i8, i8* %1, align 1                   ; [#uses = 1]
  %3 = zext i8 %2 to i32                          ; [#uses = 1]
  %4 = and i32 %3, 16                             ; [#uses = 1]
  %5 = icmp ne i32 %4, 0                          ; [#uses = 1]
  ret i1 %5
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format4spec__T10FormatSpecTaZQp6flHashMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext %v_arg) #0 {
  %v = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %1 = zext i1 %v_arg to i8                       ; [#uses = 1]
  store i8 %1, i8* %v, align 1
  %2 = load i8, i8* %v, align 1                   ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  br i1 %3, label %if, label %else

if:                                               ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %5 = load i8, i8* %4, align 1                   ; [#uses = 1]
  %6 = zext i8 %5 to i32                          ; [#uses = 1]
  %7 = or i32 %6, 16                              ; [#uses = 1]
  %8 = trunc i32 %7 to i8                         ; [#uses = 1]
  store i8 %8, i8* %4, align 1
  br label %endif

else:                                             ; preds = %0
  %9 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %10 = load i8, i8* %9, align 1                  ; [#uses = 1]
  %11 = zext i8 %10 to i32                        ; [#uses = 1]
  %12 = and i32 %11, 239                          ; [#uses = 1]
  %13 = trunc i32 %12 to i8                       ; [#uses = 1]
  store i8 %13, i8* %9, align 1
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 4]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp7flEqualMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 1, type = i8*]
  %2 = load i8, i8* %1, align 1                   ; [#uses = 1]
  %3 = zext i8 %2 to i32                          ; [#uses = 1]
  %4 = and i32 %3, 32                             ; [#uses = 1]
  %5 = icmp ne i32 %4, 0                          ; [#uses = 1]
  ret i1 %5
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format4spec__T10FormatSpecTaZQp7flEqualMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext %v_arg) #0 {
  %v = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %1 = zext i1 %v_arg to i8                       ; [#uses = 1]
  store i8 %1, i8* %v, align 1
  %2 = load i8, i8* %v, align 1                   ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  br i1 %3, label %if, label %else

if:                                               ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %5 = load i8, i8* %4, align 1                   ; [#uses = 1]
  %6 = zext i8 %5 to i32                          ; [#uses = 1]
  %7 = or i32 %6, 32                              ; [#uses = 1]
  %8 = trunc i32 %7 to i8                         ; [#uses = 1]
  store i8 %8, i8* %4, align 1
  br label %endif

else:                                             ; preds = %0
  %9 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %10 = load i8, i8* %9, align 1                  ; [#uses = 1]
  %11 = zext i8 %10 to i32                        ; [#uses = 1]
  %12 = and i32 %11, 223                          ; [#uses = 1]
  %13 = trunc i32 %12 to i8                       ; [#uses = 1]
  store i8 %13, i8* %9, align 1
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 3]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp11flSeparatorMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 1, type = i8*]
  %2 = load i8, i8* %1, align 1                   ; [#uses = 1]
  %3 = zext i8 %2 to i32                          ; [#uses = 1]
  %4 = and i32 %3, 64                             ; [#uses = 1]
  %5 = icmp ne i32 %4, 0                          ; [#uses = 1]
  ret i1 %5
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format4spec__T10FormatSpecTaZQp11flSeparatorMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext %v_arg) #0 {
  %v = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %1 = zext i1 %v_arg to i8                       ; [#uses = 1]
  store i8 %1, i8* %v, align 1
  %2 = load i8, i8* %v, align 1                   ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  br i1 %3, label %if, label %else

if:                                               ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %5 = load i8, i8* %4, align 1                   ; [#uses = 1]
  %6 = zext i8 %5 to i32                          ; [#uses = 1]
  %7 = or i32 %6, 64                              ; [#uses = 1]
  %8 = trunc i32 %7 to i8                         ; [#uses = 1]
  store i8 %8, i8* %4, align 1
  br label %endif

else:                                             ; preds = %0
  %9 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 2, type = i8*]
  %10 = load i8, i8* %9, align 1                  ; [#uses = 1]
  %11 = zext i8 %10 to i32                        ; [#uses = 1]
  %12 = and i32 %11, 191                          ; [#uses = 1]
  %13 = trunc i32 %12 to i8                       ; [#uses = 1]
  store i8 %13, i8* %9, align 1
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr void @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNaNlNfZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 {
  %.frame = alloca %nest.fillUp, align 8          ; [#uses = 8, size/byte = 16]
  %j = alloca i64, align 8                        ; [#uses = 32, size/byte = 8]
  %innerParens = alloca i32, align 4              ; [#uses = 6, size/byte = 4]
  %k = alloca i64, align 8                        ; [#uses = 3, size/byte = 8]
  %tmp = alloca { i64, i8* }, align 8             ; [#uses = 15, size/byte = 16]
  %widthOrArgIndex = alloca i32, align 4          ; [#uses = 4, size/byte = 4]
  %tmp209 = alloca { i64, i8* }, align 8          ; [#uses = 4, size/byte = 16]
  %tmp266 = alloca { i64, i8* }, align 8          ; [#uses = 4, size/byte = 16]
  %tmp284 = alloca { i64, i8* }, align 8          ; [#uses = 4, size/byte = 16]
  %this = getelementptr inbounds %nest.fillUp, %nest.fillUp* %.frame, i32 0, i32 0 ; [#uses = 1, type = %"std.format.spec.FormatSpec!char.FormatSpec"**]
  store %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, %"std.format.spec.FormatSpec!char.FormatSpec"** %this, align 8
  %i = getelementptr inbounds %nest.fillUp, %nest.fillUp* %.frame, i32 0, i32 1 ; [#uses = 70, type = i64*]
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 1, type = i8*]
  store i8 0, i8* %1, align 1
  %2 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = i32*]
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = i32*]
  store i32 2147483646, i32* %3, align 4
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 10 ; [#uses = 1, type = { i64, i8* }*]
  store { i64, i8* } zeroinitializer, { i64, i8* }* %4, align 8
  store i64 0, i64* %i, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %0
  %5 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %5, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %6, align 8              ; [#uses = 1]
  %7 = load i64, i64* %i, align 8                 ; [#uses = 1]
  %8 = icmp ult i64 %7, %.len                     ; [#uses = 1]
  br i1 %8, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %9 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %10 = load i64, i64* %i, align 8                ; [#uses = 2]
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %9, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len308 = load i64, i64* %11, align 8          ; [#uses = 2]
  %bounds.cmp309 = icmp ult i64 %10, %.len308     ; [#uses = 1]
  br i1 %bounds.cmp309, label %bounds.ok310, label %bounds.fail311

bounds.ok310:                                     ; preds = %forbody
  %12 = load i64, i64* %i, align 8                ; [#uses = 1]
  %13 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %9, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr312 = load i8*, i8** %13, align 8          ; [#uses = 1]
  %14 = getelementptr inbounds i8, i8* %.ptr312, i64 %12 ; [#uses = 1, type = i8*]
  %15 = load i8, i8* %14, align 1                 ; [#uses = 1]
  %16 = zext i8 %15 to i32                        ; [#uses = 1]
  switch i32 %16, label %defaultcntr [
    i32 40, label %casecntr
    i32 45, label %casecntr313
    i32 43, label %casecntr314
    i32 61, label %casecntr315
    i32 35, label %casecntr316
    i32 48, label %casecntr317
    i32 32, label %casecntr318
    i32 42, label %casecntr319
    i32 49, label %casecntr320
    i32 50, label %casecntr321
    i32 51, label %casecntr322
    i32 52, label %casecntr323
    i32 53, label %casecntr324
    i32 54, label %casecntr325
    i32 55, label %casecntr326
    i32 56, label %casecntr327
    i32 57, label %casecntr328
    i32 44, label %casecntr329
    i32 46, label %casecntr330
  ]

bounds.fail311:                                   ; preds = %forbody
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 304, i64 %10, i64 %.len308) #5
  unreachable

switchbody:                                       ; No predecessors!
  br label %case

casecntr:                                         ; preds = %bounds.ok310
  br label %case

case:                                             ; preds = %casecntr, %switchbody
  %17 = load i64, i64* %i, align 8                ; [#uses = 1]
  %18 = add i64 %17, 1                            ; [#uses = 1]
  store i64 %18, i64* %j, align 8
  store i32 0, i32* %innerParens, align 4
  br label %forcond1

forcond1:                                         ; preds = %forinc3, %case
  br i1 true, label %forbody2, label %endfor4

forbody2:                                         ; preds = %forcond1
  %19 = load i64, i64* %j, align 8                ; [#uses = 1]
  %20 = add i64 %19, 1                            ; [#uses = 1]
  %21 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %22 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %21, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len5 = load i64, i64* %22, align 8            ; [#uses = 1]
  %23 = icmp ult i64 %20, %.len5                  ; [#uses = 1]
  %24 = bitcast %nest.fillUp* %.frame to i8*      ; [#uses = 1]
  %25 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %24, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %25, { i64, i8* } (i8*)* @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNlZ12__dgliteral4MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %26 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %23, { i8*, { i64, i8* } (i8*)* } %.func, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 312) #1 ; [#uses = 0]
  %27 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %28 = load i64, i64* %j, align 8                ; [#uses = 4]
  %29 = add i64 %28, 1                            ; [#uses = 1]
  store i64 %29, i64* %j, align 8
  %30 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %27, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len6 = load i64, i64* %30, align 8            ; [#uses = 2]
  %bounds.cmp = icmp ult i64 %28, %.len6          ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %forbody2
  %31 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %27, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %31, align 8             ; [#uses = 1]
  %32 = getelementptr inbounds i8, i8* %.ptr, i64 %28 ; [#uses = 1, type = i8*]
  %33 = load i8, i8* %32, align 1                 ; [#uses = 1]
  %34 = zext i8 %33 to i32                        ; [#uses = 1]
  %35 = icmp ne i32 %34, 37                       ; [#uses = 1]
  br i1 %35, label %if, label %endif

if:                                               ; preds = %bounds.ok
  br label %forinc3

aftercontinue:                                    ; No predecessors!
  br label %endif

endif:                                            ; preds = %aftercontinue, %bounds.ok
  %36 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %37 = load i64, i64* %j, align 8                ; [#uses = 2]
  %38 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %36, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len7 = load i64, i64* %38, align 8            ; [#uses = 2]
  %bounds.cmp8 = icmp ult i64 %37, %.len7         ; [#uses = 1]
  br i1 %bounds.cmp8, label %bounds.ok9, label %bounds.fail10

bounds.ok9:                                       ; preds = %endif
  %39 = load i64, i64* %j, align 8                ; [#uses = 1]
  %40 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %36, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr11 = load i8*, i8** %40, align 8           ; [#uses = 1]
  %41 = getelementptr inbounds i8, i8* %.ptr11, i64 %39 ; [#uses = 1, type = i8*]
  %42 = load i8, i8* %41, align 1                 ; [#uses = 1]
  %43 = zext i8 %42 to i32                        ; [#uses = 1]
  %44 = icmp eq i32 %43, 45                       ; [#uses = 1]
  br i1 %44, label %if12, label %endif13

if12:                                             ; preds = %bounds.ok9
  %45 = load i64, i64* %j, align 8                ; [#uses = 1]
  %46 = add i64 %45, 1                            ; [#uses = 1]
  store i64 %46, i64* %j, align 8
  %47 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %48 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %47, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len14 = load i64, i64* %48, align 8           ; [#uses = 1]
  %49 = load i64, i64* %j, align 8                ; [#uses = 1]
  %50 = icmp ult i64 %49, %.len14                 ; [#uses = 1]
  %51 = bitcast %nest.fillUp* %.frame to i8*      ; [#uses = 1]
  %52 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %51, 0 ; [#uses = 1]
  %.func15 = insertvalue { i8*, { i64, i8* } (i8*)* } %52, { i64, i8* } (i8*)* @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNlZ12__dgliteral5MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %53 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %50, { i8*, { i64, i8* } (i8*)* } %.func15, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 322) #1 ; [#uses = 0]
  br label %endif13

endif13:                                          ; preds = %if12, %bounds.ok9
  %54 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %55 = load i64, i64* %j, align 8                ; [#uses = 2]
  %56 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %54, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len16 = load i64, i64* %56, align 8           ; [#uses = 2]
  %bounds.cmp17 = icmp ult i64 %55, %.len16       ; [#uses = 1]
  br i1 %bounds.cmp17, label %bounds.ok18, label %bounds.fail19

bounds.ok18:                                      ; preds = %endif13
  %57 = load i64, i64* %j, align 8                ; [#uses = 1]
  %58 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %54, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr20 = load i8*, i8** %58, align 8           ; [#uses = 1]
  %59 = getelementptr inbounds i8, i8* %.ptr20, i64 %57 ; [#uses = 1, type = i8*]
  %60 = load i8, i8* %59, align 1                 ; [#uses = 1]
  %61 = zext i8 %60 to i32                        ; [#uses = 1]
  %62 = icmp eq i32 %61, 41                       ; [#uses = 1]
  br i1 %62, label %if21, label %else

if21:                                             ; preds = %bounds.ok18
  %63 = load i32, i32* %innerParens, align 4      ; [#uses = 2]
  %64 = sub i32 %63, 1                            ; [#uses = 1]
  store i32 %64, i32* %innerParens, align 4
  %65 = icmp eq i32 %63, 0                        ; [#uses = 1]
  br i1 %65, label %if23, label %endif24

if23:                                             ; preds = %if21
  br label %endfor4

afterbreak:                                       ; No predecessors!
  br label %endif24

endif24:                                          ; preds = %afterbreak, %if21
  br label %endif22

else:                                             ; preds = %bounds.ok18
  %66 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %67 = load i64, i64* %j, align 8                ; [#uses = 2]
  %68 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %66, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len25 = load i64, i64* %68, align 8           ; [#uses = 2]
  %bounds.cmp26 = icmp ult i64 %67, %.len25       ; [#uses = 1]
  br i1 %bounds.cmp26, label %bounds.ok27, label %bounds.fail28

bounds.ok27:                                      ; preds = %else
  %69 = load i64, i64* %j, align 8                ; [#uses = 1]
  %70 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %66, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr29 = load i8*, i8** %70, align 8           ; [#uses = 1]
  %71 = getelementptr inbounds i8, i8* %.ptr29, i64 %69 ; [#uses = 1, type = i8*]
  %72 = load i8, i8* %71, align 1                 ; [#uses = 1]
  %73 = zext i8 %72 to i32                        ; [#uses = 1]
  %74 = icmp eq i32 %73, 124                      ; [#uses = 1]
  br i1 %74, label %if30, label %else32

if30:                                             ; preds = %bounds.ok27
  %75 = load i32, i32* %innerParens, align 4      ; [#uses = 1]
  %76 = icmp eq i32 %75, 0                        ; [#uses = 1]
  br i1 %76, label %if33, label %endif34

if33:                                             ; preds = %if30
  br label %endfor4

afterbreak35:                                     ; No predecessors!
  br label %endif34

endif34:                                          ; preds = %afterbreak35, %if30
  br label %endif31

else32:                                           ; preds = %bounds.ok27
  %77 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %78 = load i64, i64* %j, align 8                ; [#uses = 2]
  %79 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %77, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len36 = load i64, i64* %79, align 8           ; [#uses = 2]
  %bounds.cmp37 = icmp ult i64 %78, %.len36       ; [#uses = 1]
  br i1 %bounds.cmp37, label %bounds.ok38, label %bounds.fail39

bounds.ok38:                                      ; preds = %else32
  %80 = load i64, i64* %j, align 8                ; [#uses = 1]
  %81 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %77, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr40 = load i8*, i8** %81, align 8           ; [#uses = 1]
  %82 = getelementptr inbounds i8, i8* %.ptr40, i64 %80 ; [#uses = 1, type = i8*]
  %83 = load i8, i8* %82, align 1                 ; [#uses = 1]
  %84 = zext i8 %83 to i32                        ; [#uses = 1]
  %85 = icmp eq i32 %84, 40                       ; [#uses = 1]
  br i1 %85, label %if41, label %endif42

if41:                                             ; preds = %bounds.ok38
  %86 = load i32, i32* %innerParens, align 4      ; [#uses = 1]
  %87 = add i32 %86, 1                            ; [#uses = 1]
  store i32 %87, i32* %innerParens, align 4
  br label %endif42

endif42:                                          ; preds = %if41, %bounds.ok38
  br label %endif31

bounds.fail39:                                    ; preds = %else32
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 333, i64 %78, i64 %.len36) #5
  unreachable

endif31:                                          ; preds = %endif42, %endif34
  br label %endif22

bounds.fail28:                                    ; preds = %else
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 329, i64 %67, i64 %.len25) #5
  unreachable

endif22:                                          ; preds = %endif31, %endif24
  br label %forinc3

bounds.fail19:                                    ; preds = %endif13
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 325, i64 %55, i64 %.len16) #5
  unreachable

bounds.fail10:                                    ; preds = %endif
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 319, i64 %37, i64 %.len7) #5
  unreachable

bounds.fail:                                      ; preds = %forbody2
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 314, i64 %28, i64 %.len6) #5
  unreachable

forinc3:                                          ; preds = %endif22, %if
  br label %forcond1

endfor4:                                          ; preds = %if33, %if23, %forcond1
  %88 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %89 = load i64, i64* %j, align 8                ; [#uses = 2]
  %90 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %88, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len43 = load i64, i64* %90, align 8           ; [#uses = 2]
  %bounds.cmp44 = icmp ult i64 %89, %.len43       ; [#uses = 1]
  br i1 %bounds.cmp44, label %bounds.ok45, label %bounds.fail46

bounds.ok45:                                      ; preds = %endfor4
  %91 = load i64, i64* %j, align 8                ; [#uses = 1]
  %92 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %88, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr47 = load i8*, i8** %92, align 8           ; [#uses = 1]
  %93 = getelementptr inbounds i8, i8* %.ptr47, i64 %91 ; [#uses = 1, type = i8*]
  %94 = load i8, i8* %93, align 1                 ; [#uses = 1]
  %95 = zext i8 %94 to i32                        ; [#uses = 1]
  %96 = icmp eq i32 %95, 124                      ; [#uses = 1]
  br i1 %96, label %if48, label %else50

if48:                                             ; preds = %bounds.ok45
  %97 = load i64, i64* %j, align 8                ; [#uses = 1]
  store i64 %97, i64* %k, align 8
  %98 = load i64, i64* %j, align 8                ; [#uses = 1]
  %99 = add i64 %98, 1                            ; [#uses = 1]
  store i64 %99, i64* %j, align 8
  br label %forcond51

forcond51:                                        ; preds = %forinc53, %if48
  br i1 true, label %forbody52, label %endfor54

forbody52:                                        ; preds = %forcond51
  %100 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %101 = load i64, i64* %j, align 8               ; [#uses = 4]
  %102 = add i64 %101, 1                          ; [#uses = 1]
  store i64 %102, i64* %j, align 8
  %103 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %100, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len55 = load i64, i64* %103, align 8          ; [#uses = 2]
  %bounds.cmp56 = icmp ult i64 %101, %.len55      ; [#uses = 1]
  br i1 %bounds.cmp56, label %bounds.ok57, label %bounds.fail58

bounds.ok57:                                      ; preds = %forbody52
  %104 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %100, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr59 = load i8*, i8** %104, align 8          ; [#uses = 1]
  %105 = getelementptr inbounds i8, i8* %.ptr59, i64 %101 ; [#uses = 1, type = i8*]
  %106 = load i8, i8* %105, align 1               ; [#uses = 1]
  %107 = zext i8 %106 to i32                      ; [#uses = 1]
  %108 = icmp ne i32 %107, 37                     ; [#uses = 1]
  br i1 %108, label %if60, label %endif61

if60:                                             ; preds = %bounds.ok57
  br label %forinc53

aftercontinue62:                                  ; No predecessors!
  br label %endif61

endif61:                                          ; preds = %aftercontinue62, %bounds.ok57
  %109 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %110 = load i64, i64* %j, align 8               ; [#uses = 2]
  %111 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %109, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len63 = load i64, i64* %111, align 8          ; [#uses = 2]
  %bounds.cmp64 = icmp ult i64 %110, %.len63      ; [#uses = 1]
  br i1 %bounds.cmp64, label %bounds.ok65, label %bounds.fail66

bounds.ok65:                                      ; preds = %endif61
  %112 = load i64, i64* %j, align 8               ; [#uses = 1]
  %113 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %109, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr67 = load i8*, i8** %113, align 8          ; [#uses = 1]
  %114 = getelementptr inbounds i8, i8* %.ptr67, i64 %112 ; [#uses = 1, type = i8*]
  %115 = load i8, i8* %114, align 1               ; [#uses = 1]
  %116 = zext i8 %115 to i32                      ; [#uses = 1]
  %117 = icmp eq i32 %116, 37                     ; [#uses = 1]
  br i1 %117, label %if68, label %else70

if68:                                             ; preds = %bounds.ok65
  %118 = load i64, i64* %j, align 8               ; [#uses = 1]
  %119 = add i64 %118, 1                          ; [#uses = 1]
  store i64 %119, i64* %j, align 8
  br label %endif69

else70:                                           ; preds = %bounds.ok65
  %120 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %121 = load i64, i64* %j, align 8               ; [#uses = 2]
  %122 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %120, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len71 = load i64, i64* %122, align 8          ; [#uses = 2]
  %bounds.cmp72 = icmp ult i64 %121, %.len71      ; [#uses = 1]
  br i1 %bounds.cmp72, label %bounds.ok73, label %bounds.fail74

bounds.ok73:                                      ; preds = %else70
  %123 = load i64, i64* %j, align 8               ; [#uses = 1]
  %124 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %120, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr75 = load i8*, i8** %124, align 8          ; [#uses = 1]
  %125 = getelementptr inbounds i8, i8* %.ptr75, i64 %123 ; [#uses = 1, type = i8*]
  %126 = load i8, i8* %125, align 1               ; [#uses = 1]
  %127 = zext i8 %126 to i32                      ; [#uses = 1]
  %128 = icmp eq i32 %127, 41                     ; [#uses = 1]
  br i1 %128, label %if76, label %else78

if76:                                             ; preds = %bounds.ok73
  br label %endfor54

afterbreak79:                                     ; No predecessors!
  br label %endif77

else78:                                           ; preds = %bounds.ok73
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std6format15FormatException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %std.format.FormatException* ; [#uses = 5]
  %vtbl = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std6format15FormatException6__vtblZ, [10 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %129 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %130 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* @_D3std6format15FormatException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %131 = bitcast { i64, i8* }* %129 to i8*        ; [#uses = 1]
  %132 = bitcast { i64, i8* }* %130 to i8*        ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %131, i8* align 1 %132, i64 68, i1 false)
  %133 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %134 = load i64, i64* %j, align 8               ; [#uses = 4]
  %135 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %133, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len80 = load i64, i64* %135, align 8          ; [#uses = 3]
  %136 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %133, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len83 = load i64, i64* %136, align 8          ; [#uses = 1]
  %bounds.cmp.lo = icmp ule i64 %134, %.len80     ; [#uses = 1]
  br i1 %bounds.cmp.lo, label %bounds.ok81, label %bounds.fail82

bounds.ok81:                                      ; preds = %else78
  %137 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %133, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr84 = load i8*, i8** %137, align 8          ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr84, i64 %134 ; [#uses = 1, type = i8*]
  %138 = sub i64 %.len80, %134                    ; [#uses = 1]
  %139 = insertvalue { i64, i8* } undef, i64 %138, 0 ; [#uses = 1]
  %140 = insertvalue { i64, i8* } %139, i8* %lowerbound, 1 ; [#uses = 1]
  %141 = call { i64, i8* } @_D3std4conv__T4textTAyaTAxaZQoFNaNbNfQrQpZQw({ i64, i8* } { i64 29, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0) }, { i64, i8* } %140) #1 ; [#uses = 1]
  %142 = call %std.format.FormatException* @_D3std6format15FormatException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCtQCsQCo(%std.format.FormatException* nonnull returned %.newclass_gc, { i64, i8* } %141, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 350, %object.Throwable* null) #1 ; [#uses = 0]
  %143 = bitcast %std.format.FormatException* %.newclass_gc to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %143) #5
  unreachable

afterthrow:                                       ; No predecessors!
  br label %endif77

bounds.fail82:                                    ; preds = %else78
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 352, i64 %134, i64 %.len80, i64 %.len83) #5
  unreachable

endif77:                                          ; preds = %afterthrow, %afterbreak79
  br label %endif69

bounds.fail74:                                    ; preds = %else70
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 347, i64 %121, i64 %.len71) #5
  unreachable

endif69:                                          ; preds = %endif77, %if68
  br label %forinc53

bounds.fail66:                                    ; preds = %endif61
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 345, i64 %110, i64 %.len63) #5
  unreachable

bounds.fail58:                                    ; preds = %forbody52
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 343, i64 %101, i64 %.len55) #5
  unreachable

forinc53:                                         ; preds = %endif69, %if60
  br label %forcond51

endfor54:                                         ; preds = %if76, %forcond51
  %144 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 10 ; [#uses = 2, type = { i64, i8* }*]
  %145 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %146 = load i64, i64* %i, align 8               ; [#uses = 1]
  %147 = add i64 %146, 1                          ; [#uses = 4]
  %148 = load i64, i64* %k, align 8               ; [#uses = 1]
  %149 = sub i64 %148, 1                          ; [#uses = 4]
  %150 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %145, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len87 = load i64, i64* %150, align 8          ; [#uses = 2]
  %bounds.cmp.up = icmp ule i64 %149, %.len87     ; [#uses = 1]
  %bounds.cmp.lo88 = icmp ule i64 %147, %149      ; [#uses = 1]
  %151 = and i1 %bounds.cmp.up, %bounds.cmp.lo88  ; [#uses = 1]
  br i1 %151, label %bounds.ok85, label %bounds.fail86

bounds.ok85:                                      ; preds = %endfor54
  %152 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %145, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr89 = load i8*, i8** %152, align 8          ; [#uses = 1]
  %lowerbound90 = getelementptr inbounds i8, i8* %.ptr89, i64 %147 ; [#uses = 2, type = i8*]
  %153 = sub i64 %149, %147                       ; [#uses = 2]
  %154 = insertvalue { i64, i8* } undef, i64 %153, 0 ; [#uses = 1]
  %155 = insertvalue { i64, i8* } %154, i8* %lowerbound90, 1 ; [#uses = 0]
  %156 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %144, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %153, i64* %156, align 8
  %157 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %144, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound90, i8** %157, align 8
  %158 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 11 ; [#uses = 2, type = { i64, i8* }*]
  %159 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %160 = load i64, i64* %k, align 8               ; [#uses = 1]
  %161 = add i64 %160, 1                          ; [#uses = 4]
  %162 = load i64, i64* %j, align 8               ; [#uses = 1]
  %163 = sub i64 %162, 1                          ; [#uses = 4]
  %164 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %159, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len93 = load i64, i64* %164, align 8          ; [#uses = 2]
  %bounds.cmp.up94 = icmp ule i64 %163, %.len93   ; [#uses = 1]
  %bounds.cmp.lo95 = icmp ule i64 %161, %163      ; [#uses = 1]
  %165 = and i1 %bounds.cmp.up94, %bounds.cmp.lo95 ; [#uses = 1]
  br i1 %165, label %bounds.ok91, label %bounds.fail92

bounds.ok91:                                      ; preds = %bounds.ok85
  %166 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %159, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr96 = load i8*, i8** %166, align 8          ; [#uses = 1]
  %lowerbound97 = getelementptr inbounds i8, i8* %.ptr96, i64 %161 ; [#uses = 2, type = i8*]
  %167 = sub i64 %163, %161                       ; [#uses = 2]
  %168 = insertvalue { i64, i8* } undef, i64 %167, 0 ; [#uses = 1]
  %169 = insertvalue { i64, i8* } %168, i8* %lowerbound97, 1 ; [#uses = 0]
  %170 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %158, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %167, i64* %170, align 8
  %171 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %158, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound97, i8** %171, align 8
  br label %endif49

bounds.fail92:                                    ; preds = %bounds.ok85
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 355, i64 %161, i64 %163, i64 %.len93) #5
  unreachable

bounds.fail86:                                    ; preds = %endfor54
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 354, i64 %147, i64 %149, i64 %.len87) #5
  unreachable

else50:                                           ; preds = %bounds.ok45
  %172 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 10 ; [#uses = 2, type = { i64, i8* }*]
  %173 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %174 = load i64, i64* %i, align 8               ; [#uses = 1]
  %175 = add i64 %174, 1                          ; [#uses = 4]
  %176 = load i64, i64* %j, align 8               ; [#uses = 1]
  %177 = sub i64 %176, 1                          ; [#uses = 4]
  %178 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %173, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len100 = load i64, i64* %178, align 8         ; [#uses = 2]
  %bounds.cmp.up101 = icmp ule i64 %177, %.len100 ; [#uses = 1]
  %bounds.cmp.lo102 = icmp ule i64 %175, %177     ; [#uses = 1]
  %179 = and i1 %bounds.cmp.up101, %bounds.cmp.lo102 ; [#uses = 1]
  br i1 %179, label %bounds.ok98, label %bounds.fail99

bounds.ok98:                                      ; preds = %else50
  %180 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %173, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr103 = load i8*, i8** %180, align 8         ; [#uses = 1]
  %lowerbound104 = getelementptr inbounds i8, i8* %.ptr103, i64 %175 ; [#uses = 2, type = i8*]
  %181 = sub i64 %177, %175                       ; [#uses = 2]
  %182 = insertvalue { i64, i8* } undef, i64 %181, 0 ; [#uses = 1]
  %183 = insertvalue { i64, i8* } %182, i8* %lowerbound104, 1 ; [#uses = 0]
  %184 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %172, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %181, i64* %184, align 8
  %185 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %172, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound104, i8** %185, align 8
  %186 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 11 ; [#uses = 1, type = { i64, i8* }*]
  store { i64, i8* } zeroinitializer, { i64, i8* }* %186, align 8
  br label %endif49

bounds.fail99:                                    ; preds = %else50
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 359, i64 %175, i64 %177, i64 %.len100) #5
  unreachable

endif49:                                          ; preds = %bounds.ok98, %bounds.ok91
  %187 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 6 ; [#uses = 1, type = i8*]
  store i8 40, i8* %187, align 1
  %188 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %189 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %190 = load i64, i64* %j, align 8               ; [#uses = 1]
  %191 = add i64 %190, 1                          ; [#uses = 4]
  %192 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %189, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len105 = load i64, i64* %192, align 8         ; [#uses = 3]
  %193 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %189, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len108 = load i64, i64* %193, align 8         ; [#uses = 1]
  %bounds.cmp.lo109 = icmp ule i64 %191, %.len105 ; [#uses = 1]
  br i1 %bounds.cmp.lo109, label %bounds.ok106, label %bounds.fail107

bounds.ok106:                                     ; preds = %endif49
  %194 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %189, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr110 = load i8*, i8** %194, align 8         ; [#uses = 1]
  %lowerbound111 = getelementptr inbounds i8, i8* %.ptr110, i64 %191 ; [#uses = 2, type = i8*]
  %195 = sub i64 %.len105, %191                   ; [#uses = 2]
  %196 = insertvalue { i64, i8* } undef, i64 %195, 0 ; [#uses = 1]
  %197 = insertvalue { i64, i8* } %196, i8* %lowerbound111, 1 ; [#uses = 0]
  %198 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %188, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %195, i64* %198, align 8
  %199 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %188, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound111, i8** %199, align 8
  ret void

dummy.afterreturn:                                ; No predecessors!
  br label %case112

casecntr313:                                      ; preds = %bounds.ok310
  br label %case112

case112:                                          ; preds = %casecntr313, %dummy.afterreturn
  call void @_D3std6format4spec__T10FormatSpecTaZQp6flDashMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext true) #0
  %200 = load i64, i64* %i, align 8               ; [#uses = 1]
  %201 = add i64 %200, 1                          ; [#uses = 1]
  store i64 %201, i64* %i, align 8
  br label %switchend

afterbreak113:                                    ; No predecessors!
  br label %case114

casecntr314:                                      ; preds = %bounds.ok310
  br label %case114

case114:                                          ; preds = %casecntr314, %afterbreak113
  call void @_D3std6format4spec__T10FormatSpecTaZQp6flPlusMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext true) #0
  %202 = load i64, i64* %i, align 8               ; [#uses = 1]
  %203 = add i64 %202, 1                          ; [#uses = 1]
  store i64 %203, i64* %i, align 8
  br label %switchend

afterbreak115:                                    ; No predecessors!
  br label %case116

casecntr315:                                      ; preds = %bounds.ok310
  br label %case116

case116:                                          ; preds = %casecntr315, %afterbreak115
  call void @_D3std6format4spec__T10FormatSpecTaZQp7flEqualMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext true) #0
  %204 = load i64, i64* %i, align 8               ; [#uses = 1]
  %205 = add i64 %204, 1                          ; [#uses = 1]
  store i64 %205, i64* %i, align 8
  br label %switchend

afterbreak117:                                    ; No predecessors!
  br label %case118

casecntr316:                                      ; preds = %bounds.ok310
  br label %case118

case118:                                          ; preds = %casecntr316, %afterbreak117
  call void @_D3std6format4spec__T10FormatSpecTaZQp6flHashMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext true) #0
  %206 = load i64, i64* %i, align 8               ; [#uses = 1]
  %207 = add i64 %206, 1                          ; [#uses = 1]
  store i64 %207, i64* %i, align 8
  br label %switchend

afterbreak119:                                    ; No predecessors!
  br label %case120

casecntr317:                                      ; preds = %bounds.ok310
  br label %case120

case120:                                          ; preds = %casecntr317, %afterbreak119
  call void @_D3std6format4spec__T10FormatSpecTaZQp6flZeroMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext true) #0
  %208 = load i64, i64* %i, align 8               ; [#uses = 1]
  %209 = add i64 %208, 1                          ; [#uses = 1]
  store i64 %209, i64* %i, align 8
  br label %switchend

afterbreak121:                                    ; No predecessors!
  br label %case122

casecntr318:                                      ; preds = %bounds.ok310
  br label %case122

case122:                                          ; preds = %casecntr318, %afterbreak121
  call void @_D3std6format4spec__T10FormatSpecTaZQp7flSpaceMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext true) #0
  %210 = load i64, i64* %i, align 8               ; [#uses = 1]
  %211 = add i64 %210, 1                          ; [#uses = 1]
  store i64 %211, i64* %i, align 8
  br label %switchend

afterbreak123:                                    ; No predecessors!
  br label %case124

casecntr319:                                      ; preds = %bounds.ok310
  br label %case124

case124:                                          ; preds = %casecntr319, %afterbreak123
  %212 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %213 = load i64, i64* %i, align 8               ; [#uses = 1]
  %214 = add i64 %213, 1                          ; [#uses = 1]
  store i64 %214, i64* %i, align 8
  %215 = load i64, i64* %i, align 8               ; [#uses = 2]
  %216 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %212, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len125 = load i64, i64* %216, align 8         ; [#uses = 2]
  %bounds.cmp126 = icmp ult i64 %215, %.len125    ; [#uses = 1]
  br i1 %bounds.cmp126, label %bounds.ok127, label %bounds.fail128

bounds.ok127:                                     ; preds = %case124
  %217 = load i64, i64* %i, align 8               ; [#uses = 1]
  %218 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %212, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr129 = load i8*, i8** %218, align 8         ; [#uses = 1]
  %219 = getelementptr inbounds i8, i8* %.ptr129, i64 %217 ; [#uses = 1, type = i8*]
  %220 = load i8, i8* %219, align 1               ; [#uses = 1]
  %221 = zext i8 %220 to i32                      ; [#uses = 1]
  %222 = call zeroext i1 @_D3std5ascii7isDigitFNaNbNiNfwZb(i32 %221) #1 ; [#uses = 1]
  br i1 %222, label %if130, label %else132

if130:                                            ; preds = %bounds.ok127
  %223 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %224 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %225 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %224, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len133 = load i64, i64* %225, align 8         ; [#uses = 3]
  %226 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %224, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len136 = load i64, i64* %226, align 8         ; [#uses = 1]
  %bounds.cmp.lo137 = icmp ule i64 1, %.len133    ; [#uses = 1]
  br i1 %bounds.cmp.lo137, label %bounds.ok134, label %bounds.fail135

bounds.ok134:                                     ; preds = %if130
  %227 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %224, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr138 = load i8*, i8** %227, align 8         ; [#uses = 1]
  %lowerbound139 = getelementptr inbounds i8, i8* %.ptr138, i64 1 ; [#uses = 2, type = i8*]
  %228 = sub i64 %.len133, 1                      ; [#uses = 2]
  %229 = insertvalue { i64, i8* } undef, i64 %228, 0 ; [#uses = 1]
  %230 = insertvalue { i64, i8* } %229, i8* %lowerbound139, 1 ; [#uses = 0]
  %231 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %223, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %228, i64* %231, align 8
  %232 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %223, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound139, i8** %232, align 8
  %233 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %234 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %235 = call i32 @_D3std4conv__T5parseTiTAxaVEQBa8typecons__T4FlagVAyaa7_646f436f756e74ZQBbi0ZQCkFNaNfMKQClZi({ i64, i8* }* dereferenceable(16) %234) #1 ; [#uses = 1]
  %negval = sub i32 0, %235                       ; [#uses = 1]
  store i32 %negval, i32* %233, align 4
  store i64 0, i64* %i, align 8
  %236 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %237 = load i64, i64* %i, align 8               ; [#uses = 4]
  %238 = add i64 %237, 1                          ; [#uses = 1]
  store i64 %238, i64* %i, align 8
  %239 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %236, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len140 = load i64, i64* %239, align 8         ; [#uses = 2]
  %bounds.cmp141 = icmp ult i64 %237, %.len140    ; [#uses = 1]
  br i1 %bounds.cmp141, label %bounds.ok142, label %bounds.fail143

bounds.ok142:                                     ; preds = %bounds.ok134
  %240 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %236, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr144 = load i8*, i8** %240, align 8         ; [#uses = 1]
  %241 = getelementptr inbounds i8, i8* %.ptr144, i64 %237 ; [#uses = 1, type = i8*]
  %242 = load i8, i8* %241, align 1               ; [#uses = 1]
  %243 = zext i8 %242 to i32                      ; [#uses = 1]
  %244 = icmp eq i32 %243, 36                     ; [#uses = 1]
  %245 = bitcast %nest.fillUp* %.frame to i8*     ; [#uses = 1]
  %246 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %245, 0 ; [#uses = 1]
  %.func145 = insertvalue { i8*, { i64, i8* } (i8*)* } %246, { i64, i8* } (i8*)* @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNlZ12__dgliteral7MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %247 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %244, { i8*, { i64, i8* } (i8*)* } %.func145, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 381) #1 ; [#uses = 0]
  br label %endif131

bounds.fail143:                                   ; preds = %bounds.ok134
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 381, i64 %237, i64 %.len140) #5
  unreachable

bounds.fail135:                                   ; preds = %if130
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 378, i64 1, i64 %.len133, i64 %.len136) #5
  unreachable

else132:                                          ; preds = %bounds.ok127
  %248 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = i32*]
  store i32 2147483647, i32* %248, align 4
  br label %endif131

endif131:                                         ; preds = %else132, %bounds.ok142
  br label %switchend

afterbreak146:                                    ; No predecessors!
  br label %case147

casecntr320:                                      ; preds = %bounds.ok310
  br label %case147

case147:                                          ; preds = %casecntr320, %afterbreak146
  br label %case148

casecntr321:                                      ; preds = %bounds.ok310
  br label %case148

case148:                                          ; preds = %casecntr321, %case147
  br label %case149

casecntr322:                                      ; preds = %bounds.ok310
  br label %case149

case149:                                          ; preds = %casecntr322, %case148
  br label %case150

casecntr323:                                      ; preds = %bounds.ok310
  br label %case150

case150:                                          ; preds = %casecntr323, %case149
  br label %case151

casecntr324:                                      ; preds = %bounds.ok310
  br label %case151

case151:                                          ; preds = %casecntr324, %case150
  br label %case152

casecntr325:                                      ; preds = %bounds.ok310
  br label %case152

case152:                                          ; preds = %casecntr325, %case151
  br label %case153

casecntr326:                                      ; preds = %bounds.ok310
  br label %case153

case153:                                          ; preds = %casecntr326, %case152
  br label %case154

casecntr327:                                      ; preds = %bounds.ok310
  br label %case154

case154:                                          ; preds = %casecntr327, %case153
  br label %case155

casecntr328:                                      ; preds = %bounds.ok310
  br label %case155

case155:                                          ; preds = %casecntr328, %case154
  %249 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %250 = load i64, i64* %i, align 8               ; [#uses = 4]
  %251 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %249, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len156 = load i64, i64* %251, align 8         ; [#uses = 3]
  %252 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %249, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len159 = load i64, i64* %252, align 8         ; [#uses = 1]
  %bounds.cmp.lo160 = icmp ule i64 %250, %.len156 ; [#uses = 1]
  br i1 %bounds.cmp.lo160, label %bounds.ok157, label %bounds.fail158

bounds.ok157:                                     ; preds = %case155
  %253 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %249, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr161 = load i8*, i8** %253, align 8         ; [#uses = 1]
  %lowerbound162 = getelementptr inbounds i8, i8* %.ptr161, i64 %250 ; [#uses = 2, type = i8*]
  %254 = sub i64 %.len156, %250                   ; [#uses = 2]
  %255 = insertvalue { i64, i8* } undef, i64 %254, 0 ; [#uses = 1]
  %256 = insertvalue { i64, i8* } %255, i8* %lowerbound162, 1 ; [#uses = 0]
  %257 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %254, i64* %257, align 8
  %258 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound162, i8** %258, align 8
  %259 = call i32 @_D3std4conv__T5parseTkTAxaVEQBa8typecons__T4FlagVAyaa7_646f436f756e74ZQBbi0ZQCkFNaNfMKQClZk({ i64, i8* }* dereferenceable(16) %tmp) #1 ; [#uses = 1]
  store i32 %259, i32* %widthOrArgIndex, align 4
  %260 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len163 = load i64, i64* %260, align 8         ; [#uses = 1]
  %261 = bitcast %nest.fillUp* %.frame to i8*     ; [#uses = 1]
  %262 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %261, 0 ; [#uses = 1]
  %.func164 = insertvalue { i8*, { i64, i8* } (i8*)* } %262, { i64, i8* } (i8*)* @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNlZ13__dgliteral10MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %263 = call i64 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTmZQBwFNaNfmLAxaAyamZm(i64 %.len163, { i8*, { i64, i8* } (i8*)* } %.func164, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 393) #1 ; [#uses = 0]
  %264 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %265 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %264, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len165 = load i64, i64* %265, align 8         ; [#uses = 1]
  %266 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len166 = load i64, i64* %266, align 8         ; [#uses = 1]
  %267 = sub i64 %.len165, %.len166               ; [#uses = 1]
  store i64 %267, i64* %i, align 8
  %268 = load { i64, i8* }, { i64, i8* }* %tmp, align 8 ; [#uses = 1]
  %269 = call zeroext i1 @_D3std9algorithm9searching__T10startsWithVAyaa6_61203d3d2062TAxaTaZQBmFNaNbNiNfQsaZb({ i64, i8* } %268, i8 zeroext 36) #1 ; [#uses = 1]
  br i1 %269, label %if167, label %else169

if167:                                            ; preds = %bounds.ok157
  %270 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 8 ; [#uses = 1, type = i8*]
  %271 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 7 ; [#uses = 2, type = i8*]
  %272 = load i32, i32* %widthOrArgIndex, align 4 ; [#uses = 1]
  %273 = call zeroext i8 @_D3std4conv__T2toThZ__TQjTxkZQpFNaNfxkZh(i32 %272) #1 ; [#uses = 1]
  store i8 %273, i8* %271, align 1
  %274 = load i8, i8* %271, align 1               ; [#uses = 1]
  store i8 %274, i8* %270, align 1
  %275 = load i64, i64* %i, align 8               ; [#uses = 1]
  %276 = add i64 %275, 1                          ; [#uses = 1]
  store i64 %276, i64* %i, align 8
  br label %endif168

else169:                                          ; preds = %bounds.ok157
  %277 = load { i64, i8* }, { i64, i8* }* %tmp, align 8 ; [#uses = 1]
  %278 = call zeroext i1 @_D3std9algorithm9searching__T10startsWithVAyaa6_61203d3d2062TAxaTaZQBmFNaNbNiNfQsaZb({ i64, i8* } %277, i8 zeroext 58) #1 ; [#uses = 1]
  br i1 %278, label %if170, label %else172

if170:                                            ; preds = %else169
  %279 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 7 ; [#uses = 1, type = i8*]
  %280 = load i32, i32* %widthOrArgIndex, align 4 ; [#uses = 1]
  %281 = call zeroext i8 @_D3std4conv__T2toThZ__TQjTxkZQpFNaNfxkZh(i32 %280) #1 ; [#uses = 1]
  store i8 %281, i8* %279, align 1
  %282 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len173 = load i64, i64* %282, align 8         ; [#uses = 3]
  %283 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len176 = load i64, i64* %283, align 8         ; [#uses = 1]
  %bounds.cmp.lo177 = icmp ule i64 1, %.len173    ; [#uses = 1]
  br i1 %bounds.cmp.lo177, label %bounds.ok174, label %bounds.fail175

bounds.ok174:                                     ; preds = %if170
  %284 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr178 = load i8*, i8** %284, align 8         ; [#uses = 1]
  %lowerbound179 = getelementptr inbounds i8, i8* %.ptr178, i64 1 ; [#uses = 2, type = i8*]
  %285 = sub i64 %.len173, 1                      ; [#uses = 2]
  %286 = insertvalue { i64, i8* } undef, i64 %285, 0 ; [#uses = 1]
  %287 = insertvalue { i64, i8* } %286, i8* %lowerbound179, 1 ; [#uses = 0]
  %288 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %285, i64* %288, align 8
  %289 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound179, i8** %289, align 8
  %290 = load { i64, i8* }, { i64, i8* }* %tmp, align 8 ; [#uses = 1]
  %291 = call zeroext i1 @_D3std9algorithm9searching__T10startsWithVAyaa6_61203d3d2062TAxaTaZQBmFNaNbNiNfQsaZb({ i64, i8* } %290, i8 zeroext 36) #1 ; [#uses = 1]
  br i1 %291, label %if180, label %else182

if180:                                            ; preds = %bounds.ok174
  %292 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 8 ; [#uses = 1, type = i8*]
  store i8 -1, i8* %292, align 1
  br label %endif181

else182:                                          ; preds = %bounds.ok174
  %293 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 8 ; [#uses = 1, type = i8*]
  %294 = call zeroext i8 @_D3std4conv__T5parseThTAxaVEQBa8typecons__T4FlagVAyaa7_646f436f756e74ZQBbi0ZQCkFNaNfMKQClZh({ i64, i8* }* dereferenceable(16) %tmp) #1 ; [#uses = 1]
  store i8 %294, i8* %293, align 1
  br label %endif181

endif181:                                         ; preds = %else182, %if180
  %295 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %296 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %295, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len183 = load i64, i64* %296, align 8         ; [#uses = 1]
  %297 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len184 = load i64, i64* %297, align 8         ; [#uses = 1]
  %298 = sub i64 %.len183, %.len184               ; [#uses = 1]
  store i64 %298, i64* %i, align 8
  %299 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %300 = load i64, i64* %i, align 8               ; [#uses = 4]
  %301 = add i64 %300, 1                          ; [#uses = 1]
  store i64 %301, i64* %i, align 8
  %302 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %299, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len185 = load i64, i64* %302, align 8         ; [#uses = 2]
  %bounds.cmp186 = icmp ult i64 %300, %.len185    ; [#uses = 1]
  br i1 %bounds.cmp186, label %bounds.ok187, label %bounds.fail188

bounds.ok187:                                     ; preds = %endif181
  %303 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %299, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr189 = load i8*, i8** %303, align 8         ; [#uses = 1]
  %304 = getelementptr inbounds i8, i8* %.ptr189, i64 %300 ; [#uses = 1, type = i8*]
  %305 = load i8, i8* %304, align 1               ; [#uses = 1]
  %306 = zext i8 %305 to i32                      ; [#uses = 1]
  %307 = icmp eq i32 %306, 36                     ; [#uses = 1]
  %308 = bitcast %nest.fillUp* %.frame to i8*     ; [#uses = 1]
  %309 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %308, 0 ; [#uses = 1]
  %.func190 = insertvalue { i8*, { i64, i8* } (i8*)* } %309, { i64, i8* } (i8*)* @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNlZ13__dgliteral11MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %310 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %307, { i8*, { i64, i8* } (i8*)* } %.func190, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 416) #1 ; [#uses = 0]
  br label %endif171

bounds.fail188:                                   ; preds = %endif181
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 416, i64 %300, i64 %.len185) #5
  unreachable

bounds.fail175:                                   ; preds = %if170
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 406, i64 1, i64 %.len173, i64 %.len176) #5
  unreachable

else172:                                          ; preds = %else169
  %311 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %312 = load i32, i32* %widthOrArgIndex, align 4 ; [#uses = 1]
  %313 = call i32 @_D3std4conv__T2toTiZ__TQjTxkZQpFNaNfxkZi(i32 %312) #1 ; [#uses = 1]
  store i32 %313, i32* %311, align 4
  br label %endif171

endif171:                                         ; preds = %else172, %bounds.ok187
  br label %endif168

endif168:                                         ; preds = %endif171, %if167
  br label %switchend

afterbreak191:                                    ; No predecessors!
  br label %case192

casecntr329:                                      ; preds = %bounds.ok310
  br label %case192

case192:                                          ; preds = %casecntr329, %afterbreak191
  %314 = load i64, i64* %i, align 8               ; [#uses = 1]
  %315 = add i64 %314, 1                          ; [#uses = 1]
  store i64 %315, i64* %i, align 8
  call void @_D3std6format4spec__T10FormatSpecTaZQp11flSeparatorMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, i1 zeroext true) #0
  %316 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %317 = load i64, i64* %i, align 8               ; [#uses = 2]
  %318 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %316, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len193 = load i64, i64* %318, align 8         ; [#uses = 2]
  %bounds.cmp194 = icmp ult i64 %317, %.len193    ; [#uses = 1]
  br i1 %bounds.cmp194, label %bounds.ok195, label %bounds.fail196

bounds.ok195:                                     ; preds = %case192
  %319 = load i64, i64* %i, align 8               ; [#uses = 1]
  %320 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %316, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr197 = load i8*, i8** %320, align 8         ; [#uses = 1]
  %321 = getelementptr inbounds i8, i8* %.ptr197, i64 %319 ; [#uses = 1, type = i8*]
  %322 = load i8, i8* %321, align 1               ; [#uses = 1]
  %323 = zext i8 %322 to i32                      ; [#uses = 1]
  %324 = icmp eq i32 %323, 42                     ; [#uses = 1]
  br i1 %324, label %if198, label %else200

if198:                                            ; preds = %bounds.ok195
  %325 = load i64, i64* %i, align 8               ; [#uses = 1]
  %326 = add i64 %325, 1                          ; [#uses = 1]
  store i64 %326, i64* %i, align 8
  %327 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i32*]
  store i32 2147483647, i32* %327, align 4
  br label %endif199

else200:                                          ; preds = %bounds.ok195
  %328 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %329 = load i64, i64* %i, align 8               ; [#uses = 2]
  %330 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %328, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len201 = load i64, i64* %330, align 8         ; [#uses = 2]
  %bounds.cmp202 = icmp ult i64 %329, %.len201    ; [#uses = 1]
  br i1 %bounds.cmp202, label %bounds.ok203, label %bounds.fail204

bounds.ok203:                                     ; preds = %else200
  %331 = load i64, i64* %i, align 8               ; [#uses = 1]
  %332 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %328, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr205 = load i8*, i8** %332, align 8         ; [#uses = 1]
  %333 = getelementptr inbounds i8, i8* %.ptr205, i64 %331 ; [#uses = 1, type = i8*]
  %334 = load i8, i8* %333, align 1               ; [#uses = 1]
  %335 = zext i8 %334 to i32                      ; [#uses = 1]
  %336 = call zeroext i1 @_D3std5ascii7isDigitFNaNbNiNfwZb(i32 %335) #1 ; [#uses = 1]
  br i1 %336, label %if206, label %else208

if206:                                            ; preds = %bounds.ok203
  %337 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %338 = load i64, i64* %i, align 8               ; [#uses = 4]
  %339 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %337, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len210 = load i64, i64* %339, align 8         ; [#uses = 3]
  %340 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %337, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len213 = load i64, i64* %340, align 8         ; [#uses = 1]
  %bounds.cmp.lo214 = icmp ule i64 %338, %.len210 ; [#uses = 1]
  br i1 %bounds.cmp.lo214, label %bounds.ok211, label %bounds.fail212

bounds.ok211:                                     ; preds = %if206
  %341 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %337, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr215 = load i8*, i8** %341, align 8         ; [#uses = 1]
  %lowerbound216 = getelementptr inbounds i8, i8* %.ptr215, i64 %338 ; [#uses = 2, type = i8*]
  %342 = sub i64 %.len210, %338                   ; [#uses = 2]
  %343 = insertvalue { i64, i8* } undef, i64 %342, 0 ; [#uses = 1]
  %344 = insertvalue { i64, i8* } %343, i8* %lowerbound216, 1 ; [#uses = 0]
  %345 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp209, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %342, i64* %345, align 8
  %346 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp209, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound216, i8** %346, align 8
  %347 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %348 = call i32 @_D3std4conv__T5parseTiTAxaVEQBa8typecons__T4FlagVAyaa7_646f436f756e74ZQBbi0ZQCkFNaNfMKQClZi({ i64, i8* }* dereferenceable(16) %tmp209) #1 ; [#uses = 1]
  store i32 %348, i32* %347, align 4
  %349 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %350 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %349, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len217 = load i64, i64* %350, align 8         ; [#uses = 1]
  %351 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp209, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len218 = load i64, i64* %351, align 8         ; [#uses = 1]
  %352 = sub i64 %.len217, %.len218               ; [#uses = 1]
  store i64 %352, i64* %i, align 8
  br label %endif207

bounds.fail212:                                   ; preds = %if206
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 438, i64 %338, i64 %.len210, i64 %.len213) #5
  unreachable

else208:                                          ; preds = %bounds.ok203
  %353 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i32*]
  store i32 3, i32* %353, align 4
  br label %endif207

endif207:                                         ; preds = %else208, %bounds.ok211
  br label %endif199

bounds.fail204:                                   ; preds = %else200
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 436, i64 %329, i64 %.len201) #5
  unreachable

endif199:                                         ; preds = %endif207, %if198
  %354 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %355 = load i64, i64* %i, align 8               ; [#uses = 2]
  %356 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %354, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len219 = load i64, i64* %356, align 8         ; [#uses = 2]
  %bounds.cmp220 = icmp ult i64 %355, %.len219    ; [#uses = 1]
  br i1 %bounds.cmp220, label %bounds.ok221, label %bounds.fail222

bounds.ok221:                                     ; preds = %endif199
  %357 = load i64, i64* %i, align 8               ; [#uses = 1]
  %358 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %354, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr223 = load i8*, i8** %358, align 8         ; [#uses = 1]
  %359 = getelementptr inbounds i8, i8* %.ptr223, i64 %357 ; [#uses = 1, type = i8*]
  %360 = load i8, i8* %359, align 1               ; [#uses = 1]
  %361 = zext i8 %360 to i32                      ; [#uses = 1]
  %362 = icmp eq i32 %361, 63                     ; [#uses = 1]
  br i1 %362, label %if224, label %endif225

if224:                                            ; preds = %bounds.ok221
  %363 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 3 ; [#uses = 1, type = i8*]
  store i8 1, i8* %363, align 1
  %364 = load i64, i64* %i, align 8               ; [#uses = 1]
  %365 = add i64 %364, 1                          ; [#uses = 1]
  store i64 %365, i64* %i, align 8
  br label %endif225

endif225:                                         ; preds = %if224, %bounds.ok221
  br label %switchend

afterbreak226:                                    ; No predecessors!
  br label %case227

casecntr330:                                      ; preds = %bounds.ok310
  br label %case227

case227:                                          ; preds = %casecntr330, %afterbreak226
  %366 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %367 = load i64, i64* %i, align 8               ; [#uses = 1]
  %368 = add i64 %367, 1                          ; [#uses = 1]
  store i64 %368, i64* %i, align 8
  %369 = load i64, i64* %i, align 8               ; [#uses = 2]
  %370 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %366, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len228 = load i64, i64* %370, align 8         ; [#uses = 2]
  %bounds.cmp229 = icmp ult i64 %369, %.len228    ; [#uses = 1]
  br i1 %bounds.cmp229, label %bounds.ok230, label %bounds.fail231

bounds.ok230:                                     ; preds = %case227
  %371 = load i64, i64* %i, align 8               ; [#uses = 1]
  %372 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %366, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr232 = load i8*, i8** %372, align 8         ; [#uses = 1]
  %373 = getelementptr inbounds i8, i8* %.ptr232, i64 %371 ; [#uses = 1, type = i8*]
  %374 = load i8, i8* %373, align 1               ; [#uses = 1]
  %375 = zext i8 %374 to i32                      ; [#uses = 1]
  %376 = icmp eq i32 %375, 42                     ; [#uses = 1]
  br i1 %376, label %if233, label %else235

if233:                                            ; preds = %bounds.ok230
  %377 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %378 = load i64, i64* %i, align 8               ; [#uses = 1]
  %379 = add i64 %378, 1                          ; [#uses = 1]
  store i64 %379, i64* %i, align 8
  %380 = load i64, i64* %i, align 8               ; [#uses = 2]
  %381 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %377, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len236 = load i64, i64* %381, align 8         ; [#uses = 2]
  %bounds.cmp237 = icmp ult i64 %380, %.len236    ; [#uses = 1]
  br i1 %bounds.cmp237, label %bounds.ok238, label %bounds.fail239

bounds.ok238:                                     ; preds = %if233
  %382 = load i64, i64* %i, align 8               ; [#uses = 1]
  %383 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %377, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr240 = load i8*, i8** %383, align 8         ; [#uses = 1]
  %384 = getelementptr inbounds i8, i8* %.ptr240, i64 %382 ; [#uses = 1, type = i8*]
  %385 = load i8, i8* %384, align 1               ; [#uses = 1]
  %386 = zext i8 %385 to i32                      ; [#uses = 1]
  %387 = call zeroext i1 @_D3std5ascii7isDigitFNaNbNiNfwZb(i32 %386) #1 ; [#uses = 1]
  br i1 %387, label %if241, label %else243

if241:                                            ; preds = %bounds.ok238
  %388 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %389 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %390 = load i64, i64* %i, align 8               ; [#uses = 4]
  %391 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %389, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len244 = load i64, i64* %391, align 8         ; [#uses = 3]
  %392 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %389, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len247 = load i64, i64* %392, align 8         ; [#uses = 1]
  %bounds.cmp.lo248 = icmp ule i64 %390, %.len244 ; [#uses = 1]
  br i1 %bounds.cmp.lo248, label %bounds.ok245, label %bounds.fail246

bounds.ok245:                                     ; preds = %if241
  %393 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %389, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr249 = load i8*, i8** %393, align 8         ; [#uses = 1]
  %lowerbound250 = getelementptr inbounds i8, i8* %.ptr249, i64 %390 ; [#uses = 2, type = i8*]
  %394 = sub i64 %.len244, %390                   ; [#uses = 2]
  %395 = insertvalue { i64, i8* } undef, i64 %394, 0 ; [#uses = 1]
  %396 = insertvalue { i64, i8* } %395, i8* %lowerbound250, 1 ; [#uses = 0]
  %397 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %388, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %394, i64* %397, align 8
  %398 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %388, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound250, i8** %398, align 8
  store i64 0, i64* %i, align 8
  %399 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %400 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %401 = call i32 @_D3std4conv__T5parseTiTAxaVEQBa8typecons__T4FlagVAyaa7_646f436f756e74ZQBbi0ZQCkFNaNfMKQClZi({ i64, i8* }* dereferenceable(16) %400) #1 ; [#uses = 1]
  %negval251 = sub i32 0, %401                    ; [#uses = 1]
  store i32 %negval251, i32* %399, align 4
  %402 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %403 = load i64, i64* %i, align 8               ; [#uses = 4]
  %404 = add i64 %403, 1                          ; [#uses = 1]
  store i64 %404, i64* %i, align 8
  %405 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %402, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len252 = load i64, i64* %405, align 8         ; [#uses = 2]
  %bounds.cmp253 = icmp ult i64 %403, %.len252    ; [#uses = 1]
  br i1 %bounds.cmp253, label %bounds.ok254, label %bounds.fail255

bounds.ok254:                                     ; preds = %bounds.ok245
  %406 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %402, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr256 = load i8*, i8** %406, align 8         ; [#uses = 1]
  %407 = getelementptr inbounds i8, i8* %.ptr256, i64 %403 ; [#uses = 1, type = i8*]
  %408 = load i8, i8* %407, align 1               ; [#uses = 1]
  %409 = zext i8 %408 to i32                      ; [#uses = 1]
  %410 = icmp eq i32 %409, 36                     ; [#uses = 1]
  %411 = bitcast %nest.fillUp* %.frame to i8*     ; [#uses = 1]
  %412 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %411, 0 ; [#uses = 1]
  %.func257 = insertvalue { i8*, { i64, i8* } (i8*)* } %412, { i64, i8* } (i8*)* @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNlZ13__dgliteral12MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %413 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %410, { i8*, { i64, i8* } (i8*)* } %.func257, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 466) #1 ; [#uses = 0]
  br label %endif242

bounds.fail255:                                   ; preds = %bounds.ok245
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 466, i64 %403, i64 %.len252) #5
  unreachable

bounds.fail246:                                   ; preds = %if241
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 463, i64 %390, i64 %.len244, i64 %.len247) #5
  unreachable

else243:                                          ; preds = %bounds.ok238
  %414 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = i32*]
  store i32 2147483647, i32* %414, align 4
  br label %endif242

endif242:                                         ; preds = %else243, %bounds.ok254
  br label %endif234

bounds.fail239:                                   ; preds = %if233
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 459, i64 %380, i64 %.len236) #5
  unreachable

else235:                                          ; preds = %bounds.ok230
  %415 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %416 = load i64, i64* %i, align 8               ; [#uses = 2]
  %417 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %415, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len258 = load i64, i64* %417, align 8         ; [#uses = 2]
  %bounds.cmp259 = icmp ult i64 %416, %.len258    ; [#uses = 1]
  br i1 %bounds.cmp259, label %bounds.ok260, label %bounds.fail261

bounds.ok260:                                     ; preds = %else235
  %418 = load i64, i64* %i, align 8               ; [#uses = 1]
  %419 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %415, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr262 = load i8*, i8** %419, align 8         ; [#uses = 1]
  %420 = getelementptr inbounds i8, i8* %.ptr262, i64 %418 ; [#uses = 1, type = i8*]
  %421 = load i8, i8* %420, align 1               ; [#uses = 1]
  %422 = zext i8 %421 to i32                      ; [#uses = 1]
  %423 = icmp eq i32 %422, 45                     ; [#uses = 1]
  br i1 %423, label %if263, label %else265

if263:                                            ; preds = %bounds.ok260
  %424 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = i32*]
  store i32 0, i32* %424, align 4
  %425 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %426 = load i64, i64* %i, align 8               ; [#uses = 4]
  %427 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %425, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len267 = load i64, i64* %427, align 8         ; [#uses = 3]
  %428 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %425, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len270 = load i64, i64* %428, align 8         ; [#uses = 1]
  %bounds.cmp.lo271 = icmp ule i64 %426, %.len267 ; [#uses = 1]
  br i1 %bounds.cmp.lo271, label %bounds.ok268, label %bounds.fail269

bounds.ok268:                                     ; preds = %if263
  %429 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %425, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr272 = load i8*, i8** %429, align 8         ; [#uses = 1]
  %lowerbound273 = getelementptr inbounds i8, i8* %.ptr272, i64 %426 ; [#uses = 2, type = i8*]
  %430 = sub i64 %.len267, %426                   ; [#uses = 2]
  %431 = insertvalue { i64, i8* } undef, i64 %430, 0 ; [#uses = 1]
  %432 = insertvalue { i64, i8* } %431, i8* %lowerbound273, 1 ; [#uses = 0]
  %433 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp266, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %430, i64* %433, align 8
  %434 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp266, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound273, i8** %434, align 8
  %435 = call i32 @_D3std4conv__T5parseTiTAxaVEQBa8typecons__T4FlagVAyaa7_646f436f756e74ZQBbi0ZQCkFNaNfMKQClZi({ i64, i8* }* dereferenceable(16) %tmp266) #1 ; [#uses = 0]
  %436 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %437 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %436, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len274 = load i64, i64* %437, align 8         ; [#uses = 1]
  %438 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp266, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len275 = load i64, i64* %438, align 8         ; [#uses = 1]
  %439 = sub i64 %.len274, %.len275               ; [#uses = 1]
  store i64 %439, i64* %i, align 8
  br label %endif264

bounds.fail269:                                   ; preds = %if263
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 479, i64 %426, i64 %.len267, i64 %.len270) #5
  unreachable

else265:                                          ; preds = %bounds.ok260
  %440 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %441 = load i64, i64* %i, align 8               ; [#uses = 2]
  %442 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %440, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len276 = load i64, i64* %442, align 8         ; [#uses = 2]
  %bounds.cmp277 = icmp ult i64 %441, %.len276    ; [#uses = 1]
  br i1 %bounds.cmp277, label %bounds.ok278, label %bounds.fail279

bounds.ok278:                                     ; preds = %else265
  %443 = load i64, i64* %i, align 8               ; [#uses = 1]
  %444 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %440, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr280 = load i8*, i8** %444, align 8         ; [#uses = 1]
  %445 = getelementptr inbounds i8, i8* %.ptr280, i64 %443 ; [#uses = 1, type = i8*]
  %446 = load i8, i8* %445, align 1               ; [#uses = 1]
  %447 = zext i8 %446 to i32                      ; [#uses = 1]
  %448 = call zeroext i1 @_D3std5ascii7isDigitFNaNbNiNfwZb(i32 %447) #1 ; [#uses = 1]
  br i1 %448, label %if281, label %else283

if281:                                            ; preds = %bounds.ok278
  %449 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %450 = load i64, i64* %i, align 8               ; [#uses = 4]
  %451 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %449, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len285 = load i64, i64* %451, align 8         ; [#uses = 3]
  %452 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %449, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len288 = load i64, i64* %452, align 8         ; [#uses = 1]
  %bounds.cmp.lo289 = icmp ule i64 %450, %.len285 ; [#uses = 1]
  br i1 %bounds.cmp.lo289, label %bounds.ok286, label %bounds.fail287

bounds.ok286:                                     ; preds = %if281
  %453 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %449, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr290 = load i8*, i8** %453, align 8         ; [#uses = 1]
  %lowerbound291 = getelementptr inbounds i8, i8* %.ptr290, i64 %450 ; [#uses = 2, type = i8*]
  %454 = sub i64 %.len285, %450                   ; [#uses = 2]
  %455 = insertvalue { i64, i8* } undef, i64 %454, 0 ; [#uses = 1]
  %456 = insertvalue { i64, i8* } %455, i8* %lowerbound291, 1 ; [#uses = 0]
  %457 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp284, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %454, i64* %457, align 8
  %458 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp284, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound291, i8** %458, align 8
  %459 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %460 = call i32 @_D3std4conv__T5parseTiTAxaVEQBa8typecons__T4FlagVAyaa7_646f436f756e74ZQBbi0ZQCkFNaNfMKQClZi({ i64, i8* }* dereferenceable(16) %tmp284) #1 ; [#uses = 1]
  store i32 %460, i32* %459, align 4
  %461 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %462 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %461, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len292 = load i64, i64* %462, align 8         ; [#uses = 1]
  %463 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %tmp284, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len293 = load i64, i64* %463, align 8         ; [#uses = 1]
  %464 = sub i64 %.len292, %.len293               ; [#uses = 1]
  store i64 %464, i64* %i, align 8
  br label %endif282

bounds.fail287:                                   ; preds = %if281
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 485, i64 %450, i64 %.len285, i64 %.len288) #5
  unreachable

else283:                                          ; preds = %bounds.ok278
  %465 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = i32*]
  store i32 0, i32* %465, align 4
  br label %endif282

endif282:                                         ; preds = %else283, %bounds.ok286
  br label %endif264

bounds.fail279:                                   ; preds = %else265
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 483, i64 %441, i64 %.len276) #5
  unreachable

endif264:                                         ; preds = %endif282, %bounds.ok268
  br label %endif234

bounds.fail261:                                   ; preds = %else235
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 475, i64 %416, i64 %.len258) #5
  unreachable

endif234:                                         ; preds = %endif264, %endif242
  br label %switchend

afterbreak294:                                    ; No predecessors!
  br label %default

defaultcntr:                                      ; preds = %bounds.ok310
  br label %default

default:                                          ; preds = %defaultcntr, %afterbreak294
  %466 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %467 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %468 = load i64, i64* %i, align 8               ; [#uses = 4]
  %469 = add i64 %468, 1                          ; [#uses = 1]
  store i64 %469, i64* %i, align 8
  %470 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %467, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len295 = load i64, i64* %470, align 8         ; [#uses = 2]
  %bounds.cmp296 = icmp ult i64 %468, %.len295    ; [#uses = 1]
  br i1 %bounds.cmp296, label %bounds.ok297, label %bounds.fail298

bounds.ok297:                                     ; preds = %default
  %471 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %467, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr299 = load i8*, i8** %471, align 8         ; [#uses = 1]
  %472 = getelementptr inbounds i8, i8* %.ptr299, i64 %468 ; [#uses = 1, type = i8*]
  %473 = load i8, i8* %472, align 1               ; [#uses = 1]
  store i8 %473, i8* %466, align 1
  %474 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %475 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %476 = load i64, i64* %i, align 8               ; [#uses = 4]
  %477 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %475, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len300 = load i64, i64* %477, align 8         ; [#uses = 3]
  %478 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %475, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len303 = load i64, i64* %478, align 8         ; [#uses = 1]
  %bounds.cmp.lo304 = icmp ule i64 %476, %.len300 ; [#uses = 1]
  br i1 %bounds.cmp.lo304, label %bounds.ok301, label %bounds.fail302

bounds.ok301:                                     ; preds = %bounds.ok297
  %479 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %475, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr305 = load i8*, i8** %479, align 8         ; [#uses = 1]
  %lowerbound306 = getelementptr inbounds i8, i8* %.ptr305, i64 %476 ; [#uses = 2, type = i8*]
  %480 = sub i64 %.len300, %476                   ; [#uses = 2]
  %481 = insertvalue { i64, i8* } undef, i64 %480, 0 ; [#uses = 1]
  %482 = insertvalue { i64, i8* } %481, i8* %lowerbound306, 1 ; [#uses = 0]
  %483 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %474, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %480, i64* %483, align 8
  %484 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %474, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound306, i8** %484, align 8
  ret void

dummy.afterreturn307:                             ; No predecessors!
  br label %switchend

bounds.fail302:                                   ; preds = %bounds.ok297
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 498, i64 %476, i64 %.len300, i64 %.len303) #5
  unreachable

bounds.fail298:                                   ; preds = %default
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 497, i64 %468, i64 %.len295) #5
  unreachable

bounds.fail231:                                   ; preds = %case227
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 457, i64 %369, i64 %.len228) #5
  unreachable

bounds.fail222:                                   ; preds = %endif199
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 448, i64 %355, i64 %.len219) #5
  unreachable

bounds.fail196:                                   ; preds = %case192
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 430, i64 %317, i64 %.len193) #5
  unreachable

bounds.fail158:                                   ; preds = %case155
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 391, i64 %250, i64 %.len156, i64 %.len159) #5
  unreachable

bounds.fail128:                                   ; preds = %case124
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 374, i64 %215, i64 %.len125) #5
  unreachable

bounds.fail107:                                   ; preds = %endif49
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 365, i64 %191, i64 %.len105, i64 %.len108) #5
  unreachable

bounds.fail46:                                    ; preds = %endfor4
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 338, i64 %89, i64 %.len43) #5
  unreachable

switchend:                                        ; preds = %dummy.afterreturn307, %endif234, %endif225, %endif168, %endif131, %case122, %case120, %case118, %case116, %case114, %case112
  br label %forinc

forinc:                                           ; preds = %switchend
  br label %forcond

endfor:                                           ; preds = %forcond
  %.newclass_gc_alloc331 = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std6format15FormatException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc332 = bitcast %object.Object* %.newclass_gc_alloc331 to %std.format.FormatException* ; [#uses = 5]
  %vtbl333 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc332, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std6format15FormatException6__vtblZ, [10 x i8*]** %vtbl333, align 8
  %monitor334 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc332, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor334, align 8
  %485 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc332, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %486 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* @_D3std6format15FormatException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %487 = bitcast { i64, i8* }* %485 to i8*        ; [#uses = 1]
  %488 = bitcast { i64, i8* }* %486 to i8*        ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %487, i8* align 1 %488, i64 68, i1 false)
  %489 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %490 = load { i64, i8* }, { i64, i8* }* %489, align 8 ; [#uses = 1]
  %491 = call { i64, i8* } @_D3std4conv__T4textTAyaTAxaZQoFNaNbNfQrQpZQw({ i64, i8* } { i64 28, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0) }, { i64, i8* } %490) #1 ; [#uses = 1]
  %492 = call %std.format.FormatException* @_D3std6format15FormatException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCtQCsQCo(%std.format.FormatException* nonnull returned %.newclass_gc332, { i64, i8* } %491, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 502, %object.Throwable* null) #1 ; [#uses = 0]
  %493 = bitcast %std.format.FormatException* %.newclass_gc332 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %493) #5
  unreachable
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNlZ12__dgliteral4MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.fillUp*    ; [#uses = 1]
  %this = getelementptr inbounds %nest.fillUp, %nest.fillUp* %1, i32 0, i32 0 ; [#uses = 1, type = %"std.format.spec.FormatSpec!char.FormatSpec"**]
  %2 = load %"std.format.spec.FormatSpec!char.FormatSpec"*, %"std.format.spec.FormatSpec!char.FormatSpec"** %this, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %2, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %4 = bitcast i8* %.nest_arg to %nest.fillUp*    ; [#uses = 1]
  %i = getelementptr inbounds %nest.fillUp, %nest.fillUp* %4, i32 0, i32 1 ; [#uses = 1, type = i64*]
  %5 = load i64, i64* %i, align 8                 ; [#uses = 4]
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %6, align 8              ; [#uses = 3]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %7, align 8             ; [#uses = 1]
  %bounds.cmp.lo = icmp ule i64 %5, %.len         ; [#uses = 1]
  br i1 %bounds.cmp.lo, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %0
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %8, align 8              ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr, i64 %5 ; [#uses = 1, type = i8*]
  %9 = sub i64 %.len, %5                          ; [#uses = 1]
  %10 = insertvalue { i64, i8* } undef, i64 %9, 0 ; [#uses = 1]
  %11 = insertvalue { i64, i8* } %10, i8* %lowerbound, 1 ; [#uses = 1]
  %12 = call { i64, i8* } @_D3std4conv__T4textTAyaTAxaZQoFNaNbNfQrQpZQw({ i64, i8* } { i64 29, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0) }, { i64, i8* } %11) #1 ; [#uses = 1]
  ret { i64, i8* } %12

bounds.fail:                                      ; preds = %0
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 313, i64 %5, i64 %.len, i64 %.len1) #5
  unreachable
}

; [#uses = 6]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std4conv__T4textTAyaTAxaZQoFNaNbNfQrQpZQw({ i64, i8* } %__param_0_arg, { i64, i8* } %__param_1_arg) #0 {
  %__param_0 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %__param_1 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %__param_0_arg, { i64, i8* }* %__param_0, align 8
  store { i64, i8* } %__param_1_arg, { i64, i8* }* %__param_1, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %__param_0, align 8 ; [#uses = 1]
  %2 = load { i64, i8* }, { i64, i8* }* %__param_1, align 8 ; [#uses = 1]
  %3 = call { i64, i8* } @_D3std4conv__T8textImplTAyaTQeTAxaZQvFNaNbNfQuQpZQz({ i64, i8* } %1, { i64, i8* } %2) #1 ; [#uses = 1]
  ret { i64, i8* } %3
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNlZ12__dgliteral5MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.fillUp*    ; [#uses = 1]
  %this = getelementptr inbounds %nest.fillUp, %nest.fillUp* %1, i32 0, i32 0 ; [#uses = 1, type = %"std.format.spec.FormatSpec!char.FormatSpec"**]
  %2 = load %"std.format.spec.FormatSpec!char.FormatSpec"*, %"std.format.spec.FormatSpec!char.FormatSpec"** %this, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %2, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %4 = bitcast i8* %.nest_arg to %nest.fillUp*    ; [#uses = 1]
  %i = getelementptr inbounds %nest.fillUp, %nest.fillUp* %4, i32 0, i32 1 ; [#uses = 1, type = i64*]
  %5 = load i64, i64* %i, align 8                 ; [#uses = 4]
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %6, align 8              ; [#uses = 3]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %7, align 8             ; [#uses = 1]
  %bounds.cmp.lo = icmp ule i64 %5, %.len         ; [#uses = 1]
  br i1 %bounds.cmp.lo, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %0
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %8, align 8              ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr, i64 %5 ; [#uses = 1, type = i8*]
  %9 = sub i64 %.len, %5                          ; [#uses = 1]
  %10 = insertvalue { i64, i8* } undef, i64 %9, 0 ; [#uses = 1]
  %11 = insertvalue { i64, i8* } %10, i8* %lowerbound, 1 ; [#uses = 1]
  %12 = call { i64, i8* } @_D3std4conv__T4textTAyaTAxaZQoFNaNbNfQrQpZQw({ i64, i8* } { i64 29, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i32 0, i32 0) }, { i64, i8* } %11) #1 ; [#uses = 1]
  ret { i64, i8* } %12

bounds.fail:                                      ; preds = %0
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 323, i64 %5, i64 %.len, i64 %.len1) #5
  unreachable
}

; [#uses = 4]
declare zeroext i1 @_D3std5ascii7isDigitFNaNbNiNfwZb(i32) #1

; [#uses = 5]
declare i32 @_D3std4conv__T5parseTiTAxaVEQBa8typecons__T4FlagVAyaa7_646f436f756e74ZQBbi0ZQCkFNaNfMKQClZi({ i64, i8* }* dereferenceable(16)) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNlZ12__dgliteral7MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.fillUp*    ; [#uses = 1]
  %this = getelementptr inbounds %nest.fillUp, %nest.fillUp* %1, i32 0, i32 0 ; [#uses = 1, type = %"std.format.spec.FormatSpec!char.FormatSpec"**]
  %2 = load %"std.format.spec.FormatSpec!char.FormatSpec"*, %"std.format.spec.FormatSpec!char.FormatSpec"** %this, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %2, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %4 = load i32, i32* %3, align 4                 ; [#uses = 1]
  %negval = sub i32 0, %4                         ; [#uses = 1]
  %5 = call { i64, i8* } @_D3std4conv__T4textTAyaTiTQgZQpFNaNbNfQsiQvZQy({ i64, i8* } { i64 19, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i32 0, i32 0) }, i32 %negval, { i64, i8* } { i64 18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i32 0, i32 0) }) #1 ; [#uses = 1]
  ret { i64, i8* } %5
}

; [#uses = 1]
declare { i64, i8* } @_D3std4conv__T4textTAyaTiTQgZQpFNaNbNfQsiQvZQy({ i64, i8* }, i32, { i64, i8* }) #1

; [#uses = 1]
declare i32 @_D3std4conv__T5parseTkTAxaVEQBa8typecons__T4FlagVAyaa7_646f436f756e74ZQBbi0ZQCkFNaNfMKQClZk({ i64, i8* }* dereferenceable(16)) #1

; [#uses = 1]
declare i64 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTmZQBwFNaNfmLAxaAyamZm(i64, { i8*, { i64, i8* } (i8*)* }, { i64, i8* }, i64) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNlZ13__dgliteral10MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.fillUp*    ; [#uses = 1]
  %this = getelementptr inbounds %nest.fillUp, %nest.fillUp* %1, i32 0, i32 0 ; [#uses = 1, type = %"std.format.spec.FormatSpec!char.FormatSpec"**]
  %2 = load %"std.format.spec.FormatSpec!char.FormatSpec"*, %"std.format.spec.FormatSpec!char.FormatSpec"** %this, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %2, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %4 = bitcast i8* %.nest_arg to %nest.fillUp*    ; [#uses = 1]
  %i = getelementptr inbounds %nest.fillUp, %nest.fillUp* %4, i32 0, i32 1 ; [#uses = 1, type = i64*]
  %5 = load i64, i64* %i, align 8                 ; [#uses = 4]
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %6, align 8              ; [#uses = 3]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %7, align 8             ; [#uses = 1]
  %bounds.cmp.lo = icmp ule i64 %5, %.len         ; [#uses = 1]
  br i1 %bounds.cmp.lo, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %0
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %8, align 8              ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr, i64 %5 ; [#uses = 1, type = i8*]
  %9 = sub i64 %.len, %5                          ; [#uses = 1]
  %10 = insertvalue { i64, i8* } undef, i64 %9, 0 ; [#uses = 1]
  %11 = insertvalue { i64, i8* } %10, i8* %lowerbound, 1 ; [#uses = 1]
  %12 = call { i64, i8* } @_D3std4conv__T4textTAyaTAxaZQoFNaNbNfQrQpZQw({ i64, i8* } { i64 28, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.68, i32 0, i32 0) }, { i64, i8* } %11) #1 ; [#uses = 1]
  ret { i64, i8* } %12

bounds.fail:                                      ; preds = %0
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 394, i64 %5, i64 %.len, i64 %.len1) #5
  unreachable
}

; [#uses = 3]
declare zeroext i1 @_D3std9algorithm9searching__T10startsWithVAyaa6_61203d3d2062TAxaTaZQBmFNaNbNiNfQsaZb({ i64, i8* }, i8 zeroext) #1

; [#uses = 2]
declare zeroext i8 @_D3std4conv__T2toThZ__TQjTxkZQpFNaNfxkZh(i32) #1

; [#uses = 1]
declare zeroext i8 @_D3std4conv__T5parseThTAxaVEQBa8typecons__T4FlagVAyaa7_646f436f756e74ZQBbi0ZQCkFNaNfMKQClZh({ i64, i8* }* dereferenceable(16)) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNlZ13__dgliteral11MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.69, i32 0, i32 0) }
}

; [#uses = 1]
declare i32 @_D3std4conv__T2toTiZ__TQjTxkZQpFNaNfxkZi(i32) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNlZ13__dgliteral12MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.69, i32 0, i32 0) }
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std6format4spec__T10FormatSpecTaZQp12getCurFmtStrMxFNaNfZAya(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 {
  %w = alloca %"std.array.Appender!string.Appender", align 8 ; [#uses = 17, size/byte = 8]
  %1 = alloca %"std.array.Appender!string.Appender", align 8 ; [#uses = 2, size/byte = 8]
  %f = alloca %"std.format.spec.FormatSpec!char.FormatSpec", align 8 ; [#uses = 6, size/byte = 72]
  %2 = call %"std.array.Appender!string.Appender" @_D3std5array__T8appenderTAyaZQoFNaNbNfZSQBmQBl__T8AppenderTQBiZQo() #0 ; [#uses = 1]
  store %"std.array.Appender!string.Appender" %2, %"std.array.Appender!string.Appender"* %1, align 8
  %3 = bitcast %"std.array.Appender!string.Appender"* %w to i8* ; [#uses = 1]
  %4 = bitcast %"std.array.Appender!string.Appender"* %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 8, i1 false)
  %5 = bitcast %"std.format.spec.FormatSpec!char.FormatSpec"* %f to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 bitcast (%"std.format.spec.FormatSpec!char.FormatSpec"* @_D3std6format4spec__T10FormatSpecTaZQp6__initZ to i8*), i64 72, i1 false)
  %6 = call %"std.format.spec.FormatSpec!char.FormatSpec"* @_D3std6format4spec__T10FormatSpecTaZQp6__ctorMFNaNbNcNiNfIAaZSQCiQChQCd__TQCbTaZQCh(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull returned %f, { i64, i8* } { i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0) }) #0 ; [#uses = 0]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 37) #1
  %7 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 7 ; [#uses = 1, type = i8*]
  %8 = load i8, i8* %7, align 1                   ; [#uses = 1]
  %9 = zext i8 %8 to i32                          ; [#uses = 1]
  %10 = icmp ne i32 %9, 0                         ; [#uses = 1]
  br i1 %10, label %if, label %endif

if:                                               ; preds = %0
  %11 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 7 ; [#uses = 1, type = i8*]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxhTaZQBxFNaNfKQBsKxhMKxSQDkQDj4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8* dereferenceable(1) %11, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 36) #1
  br label %endif

endif:                                            ; preds = %if, %0
  %12 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flDashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  br i1 %12, label %if1, label %endif2

if1:                                              ; preds = %endif
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 45) #1
  br label %endif2

endif2:                                           ; preds = %if1, %endif
  %13 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flZeroMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  br i1 %13, label %if3, label %endif4

if3:                                              ; preds = %endif2
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 48) #1
  br label %endif4

endif4:                                           ; preds = %if3, %endif2
  %14 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp7flSpaceMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  br i1 %14, label %if5, label %endif6

if5:                                              ; preds = %endif4
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 32) #1
  br label %endif6

endif6:                                           ; preds = %if5, %endif4
  %15 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flPlusMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  br i1 %15, label %if7, label %endif8

if7:                                              ; preds = %endif6
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 43) #1
  br label %endif8

endif8:                                           ; preds = %if7, %endif6
  %16 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp7flEqualMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  br i1 %16, label %if9, label %endif10

if9:                                              ; preds = %endif8
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 61) #1
  br label %endif10

endif10:                                          ; preds = %if9, %endif8
  %17 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flHashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  br i1 %17, label %if11, label %endif12

if11:                                             ; preds = %endif10
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 35) #1
  br label %endif12

endif12:                                          ; preds = %if11, %endif10
  %18 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %19 = load i32, i32* %18, align 4               ; [#uses = 1]
  %20 = icmp ne i32 %19, 0                        ; [#uses = 1]
  br i1 %20, label %if13, label %endif14

if13:                                             ; preds = %endif12
  %21 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = i32*]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxiTaZQBxFNaNfKQBsKxiMKxSQDkQDj4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32* dereferenceable(4) %21, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  br label %endif14

endif14:                                          ; preds = %if13, %endif12
  %22 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %23 = load i32, i32* %22, align 4               ; [#uses = 1]
  %24 = icmp ne i32 %23, 2147483646               ; [#uses = 1]
  br i1 %24, label %if15, label %endif16

if15:                                             ; preds = %endif14
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 46) #1
  %25 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = i32*]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxiTaZQBxFNaNfKQBsKxiMKxSQDkQDj4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32* dereferenceable(4) %25, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  br label %endif16

endif16:                                          ; preds = %if15, %endif14
  %26 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp11flSeparatorMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  br i1 %26, label %if17, label %endif18

if17:                                             ; preds = %endif16
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 44) #1
  br label %endif18

endif18:                                          ; preds = %if17, %endif16
  %27 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %28 = load i32, i32* %27, align 4               ; [#uses = 1]
  %29 = icmp ne i32 %28, 2147483646               ; [#uses = 1]
  br i1 %29, label %if19, label %endif20

if19:                                             ; preds = %endif18
  %30 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i32*]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxiTaZQBxFNaNfKQBsKxiMKxSQDkQDj4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32* dereferenceable(4) %30, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  br label %endif20

endif20:                                          ; preds = %if19, %endif18
  %31 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %32 = load i8, i8* %31, align 1                 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxaZQBmFNaNbNfKQBsxaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %32) #1
  %33 = call { i64, i8* } @_D3std5array__T8AppenderTAyaZQo4dataMNgFNaNbNdNiNeZQBa(%"std.array.Appender!string.Appender"* nonnull %w) #1 ; [#uses = 1]
  ret { i64, i8* } %33
}

; [#uses = 21]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, i8 zeroext %e_arg) #0 {
  %e = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  store i8 %e_arg, i8* %e, align 1
  call void @_D3std5range10primitives__T5doPutTSQBh5array__T8AppenderTAyaZQoTaZQBnFNaNbNfKQBrKaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, i8* dereferenceable(1) %e) #0
  ret void
}

; [#uses = 3]
; Function Attrs: uwtable
define weak_odr void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxhTaZQBxFNaNfKQBsKxhMKxSQDkQDj4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8* dereferenceable(1) %val, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %2 = load i32, i32* %1, align 4                 ; [#uses = 1]
  %3 = icmp ne i32 %2, 2147483647                 ; [#uses = 1]
  br i1 %3, label %andand, label %andandend

andand:                                           ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %5 = load i32, i32* %4, align 4                 ; [#uses = 1]
  %6 = icmp ne i32 %5, 2147483647                 ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %0
  %andandval = phi i1 [ false, %0 ], [ %6, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand1, label %andandend2

andand1:                                          ; preds = %andandend
  %7 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %8 = load i32, i32* %7, align 4                 ; [#uses = 1]
  %9 = icmp ne i32 %8, 2147483647                 ; [#uses = 1]
  br label %andandend2

andandend2:                                       ; preds = %andand1, %andandend
  %andandval3 = phi i1 [ false, %andandend ], [ %9, %andand1 ] ; [#uses = 1, type = i1]
  br i1 %andandval3, label %andand4, label %andandend5

andand4:                                          ; preds = %andandend2
  %10 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %11 = load i8, i8* %10, align 1                 ; [#uses = 1]
  %12 = trunc i8 %11 to i1                        ; [#uses = 1]
  %13 = icmp eq i1 %12, false                     ; [#uses = 1]
  br label %andandend5

andandend5:                                       ; preds = %andand4, %andandend2
  %andandval6 = phi i1 [ false, %andandend2 ], [ %13, %andand4 ] ; [#uses = 1, type = i1]
  %14 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %andandval6, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxhTaZQBxFKQBoKxhMKxSQDgQDf4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa }, { i64, i8* } { i64 58, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0) }, i64 1235) #0 ; [#uses = 0]
  %15 = load i8, i8* %val, align 1                ; [#uses = 1]
  call void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoThTaZQCaFNaNfKQBrxhMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %15, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  ret void
}

; [#uses = 5]
; Function Attrs: uwtable
define weak_odr void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxiTaZQBxFNaNfKQBsKxiMKxSQDkQDj4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32* dereferenceable(4) %val, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %2 = load i32, i32* %1, align 4                 ; [#uses = 1]
  %3 = icmp ne i32 %2, 2147483647                 ; [#uses = 1]
  br i1 %3, label %andand, label %andandend

andand:                                           ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %5 = load i32, i32* %4, align 4                 ; [#uses = 1]
  %6 = icmp ne i32 %5, 2147483647                 ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %0
  %andandval = phi i1 [ false, %0 ], [ %6, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand1, label %andandend2

andand1:                                          ; preds = %andandend
  %7 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %8 = load i32, i32* %7, align 4                 ; [#uses = 1]
  %9 = icmp ne i32 %8, 2147483647                 ; [#uses = 1]
  br label %andandend2

andandend2:                                       ; preds = %andand1, %andandend
  %andandval3 = phi i1 [ false, %andandend ], [ %9, %andand1 ] ; [#uses = 1, type = i1]
  br i1 %andandval3, label %andand4, label %andandend5

andand4:                                          ; preds = %andandend2
  %10 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %11 = load i8, i8* %10, align 1                 ; [#uses = 1]
  %12 = trunc i8 %11 to i1                        ; [#uses = 1]
  %13 = icmp eq i1 %12, false                     ; [#uses = 1]
  br label %andandend5

andandend5:                                       ; preds = %andand4, %andandend2
  %andandval6 = phi i1 [ false, %andandend2 ], [ %13, %andand4 ] ; [#uses = 1, type = i1]
  %14 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %andandval6, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxiTaZQBxFKQBoKxiMKxSQDgQDf4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa }, { i64, i8* } { i64 58, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0) }, i64 1235) #0 ; [#uses = 0]
  %15 = load i32, i32* %val, align 4              ; [#uses = 1]
  call void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTiTaZQCaFNaNfKQBrxiMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32 %15, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  ret void
}

; [#uses = 10]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxaZQBmFNaNbNfKQBsxaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, i8 zeroext %e_arg) #0 {
  %e = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  store i8 %e_arg, i8* %e, align 1
  call void @_D3std5range10primitives__T5doPutTSQBh5array__T8AppenderTAyaZQoTxaZQBoFNaNbNfKQBsKxaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, i8* dereferenceable(1) %e) #0
  ret void
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std6format4spec__T10FormatSpecTaZQp8toStringMxFNaNfZAya(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 {
  %app = alloca %"std.array.Appender!string.Appender", align 8 ; [#uses = 4, size/byte = 8]
  %1 = alloca %"std.array.Appender!string.Appender", align 8 ; [#uses = 2, size/byte = 8]
  %2 = call %"std.array.Appender!string.Appender" @_D3std5array__T8appenderTAyaZQoFNaNbNfZSQBmQBl__T8AppenderTQBiZQo() #0 ; [#uses = 1]
  store %"std.array.Appender!string.Appender" %2, %"std.array.Appender!string.Appender"* %1, align 8
  %3 = bitcast %"std.array.Appender!string.Appender"* %app to i8* ; [#uses = 1]
  %4 = bitcast %"std.array.Appender!string.Appender"* %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 8, i1 false)
  %5 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %5, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %6, align 8              ; [#uses = 1]
  %7 = add i64 200, %.len                         ; [#uses = 1]
  call void @_D3std5array__T8AppenderTAyaZQo7reserveMFNaNbNfmZv(%"std.array.Appender!string.Appender"* nonnull %app, i64 %7) #1
  call void @_D3std6format4spec__T10FormatSpecTaZQp__T8toStringTSQBy5array__T8AppenderTAyaZQoZQBoMxFNaNfKQBpZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, %"std.array.Appender!string.Appender"* dereferenceable(8) %app) #1
  %8 = call { i64, i8* } @_D3std5array__T8AppenderTAyaZQo4dataMNgFNaNbNdNiNeZQBa(%"std.array.Appender!string.Appender"* nonnull %app) #1 ; [#uses = 1]
  ret { i64, i8* } %8
}

; [#uses = 1]
declare void @_D3std5array__T8AppenderTAyaZQo7reserveMFNaNbNfmZv(%"std.array.Appender!string.Appender"* nonnull, i64) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format4spec__T10FormatSpecTaZQp__T8toStringTSQBy5array__T8AppenderTAyaZQoZQBoMxFNaNfKQBpZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, %"std.array.Appender!string.Appender"* dereferenceable(8) %writer) #0 {
  %s = alloca %"std.format.spec.FormatSpec!char.FormatSpec", align 8 ; [#uses = 16, size/byte = 72]
  call void @_D3std6format4spec__T10singleSpecTyaZQqFNaNfAyaZSQBvQBuQBq__T10FormatSpecTaZQp(%"std.format.spec.FormatSpec!char.FormatSpec"* noalias sret(%"std.format.spec.FormatSpec!char.FormatSpec") align 8 %s, { i64, i8* } { i64 2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.57, i32 0, i32 0) }) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.98, i32 0, i32 0) }) #0
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTPxSQCpQCo4spec__T10FormatSpecTaZQpTaZQDdFNaNfKQCyQBxMKxQCbZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.99, i32 0, i32 0) }) #0
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = i32*]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxiTaZQBxFNaNfKQBsKxiMKxSQDkQDj4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, i32* dereferenceable(4) %1, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #0
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.100, i32 0, i32 0) }) #0
  %2 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = i32*]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxiTaZQBxFNaNfKQBsKxiMKxSQDkQDj4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, i32* dereferenceable(4) %2, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #0
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.101, i32 0, i32 0) }) #0
  %3 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 6 ; [#uses = 1, type = i8*]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxaTaZQBxFNaNfKQBsKxaMKxSQDkQDj4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, i8* dereferenceable(1) %3, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 14, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.102, i32 0, i32 0) }) #0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 7 ; [#uses = 1, type = i8*]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxhTaZQBxFNaNfKQBsKxhMKxSQDkQDj4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, i8* dereferenceable(1) %4, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #0
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.103, i32 0, i32 0) }) #0
  %5 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 8 ; [#uses = 1, type = i8*]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxhTaZQBxFNaNfKQBsKxhMKxSQDkQDj4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, i8* dereferenceable(1) %5, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #0
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.104, i32 0, i32 0) }) #0
  %6 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flDashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTbTaZQBwFNaNfKQBrbMKxSQDhQDg4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, i1 zeroext %6, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.105, i32 0, i32 0) }) #0
  %7 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flZeroMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTbTaZQBwFNaNfKQBrbMKxSQDhQDg4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, i1 zeroext %7, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i32 0, i32 0) }) #0
  %8 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp7flSpaceMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTbTaZQBwFNaNfKQBrbMKxSQDhQDg4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, i1 zeroext %8, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.107, i32 0, i32 0) }) #0
  %9 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flPlusMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTbTaZQBwFNaNfKQBrbMKxSQDhQDg4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, i1 zeroext %9, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.108, i32 0, i32 0) }) #0
  %10 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp7flEqualMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTbTaZQBwFNaNfKQBrbMKxSQDhQDg4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, i1 zeroext %10, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.109, i32 0, i32 0) }) #0
  %11 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flHashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTbTaZQBwFNaNfKQBrbMKxSQDhQDg4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, i1 zeroext %11, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.110, i32 0, i32 0) }) #0
  %12 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp11flSeparatorMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0 ; [#uses = 1]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTbTaZQBwFNaNfKQBrbMKxSQDhQDg4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, i1 zeroext %12, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.111, i32 0, i32 0) }) #0
  %13 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 10 ; [#uses = 1, type = { i64, i8* }*]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxAaTaZQByFNaNfKQBtKxQtMKxSQDmQDl4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* }* dereferenceable(16) %13, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* } { i64 12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.112, i32 0, i32 0) }) #0
  %14 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxAaTaZQByFNaNfKQBtKxQtMKxSQDmQDl4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, { i64, i8* }* dereferenceable(16) %14, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %s) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %writer, i8 zeroext 10) #0
  ret void
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp11__xopEqualsMxFKxSQCdQCcQBy__TQBwTaZQCcZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %p) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %2 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %3 = load i32, i32* %1, align 4                 ; [#uses = 1]
  %4 = load i32, i32* %2, align 4                 ; [#uses = 1]
  %5 = icmp eq i32 %3, %4                         ; [#uses = 1]
  br i1 %5, label %andand, label %andandend

andand:                                           ; preds = %0
  %6 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %7 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %8 = load i32, i32* %6, align 4                 ; [#uses = 1]
  %9 = load i32, i32* %7, align 4                 ; [#uses = 1]
  %10 = icmp eq i32 %8, %9                        ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %0
  %andandval = phi i1 [ false, %0 ], [ %10, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand1, label %andandend2

andand1:                                          ; preds = %andandend
  %11 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %12 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %13 = load i32, i32* %11, align 4               ; [#uses = 1]
  %14 = load i32, i32* %12, align 4               ; [#uses = 1]
  %15 = icmp eq i32 %13, %14                      ; [#uses = 1]
  br label %andandend2

andandend2:                                       ; preds = %andand1, %andandend
  %andandval3 = phi i1 [ false, %andandend ], [ %15, %andand1 ] ; [#uses = 1, type = i1]
  br i1 %andandval3, label %andand4, label %andandend5

andand4:                                          ; preds = %andandend2
  %16 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %17 = load i8, i8* %16, align 1                 ; [#uses = 1]
  %18 = trunc i8 %17 to i1                        ; [#uses = 1]
  %19 = zext i1 %18 to i32                        ; [#uses = 1]
  %20 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %21 = load i8, i8* %20, align 1                 ; [#uses = 1]
  %22 = trunc i8 %21 to i1                        ; [#uses = 1]
  %23 = zext i1 %22 to i32                        ; [#uses = 1]
  %24 = icmp eq i32 %19, %23                      ; [#uses = 1]
  br label %andandend5

andandend5:                                       ; preds = %andand4, %andandend2
  %andandval6 = phi i1 [ false, %andandend2 ], [ %24, %andand4 ] ; [#uses = 1, type = i1]
  br i1 %andandval6, label %andand7, label %andandend8

andand7:                                          ; preds = %andandend5
  %25 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 5 ; [#uses = 1, type = i32*]
  %26 = load i32, i32* %25, align 4               ; [#uses = 1]
  %27 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 5 ; [#uses = 1, type = i32*]
  %28 = load i32, i32* %27, align 4               ; [#uses = 1]
  %29 = icmp eq i32 %26, %28                      ; [#uses = 1]
  br label %andandend8

andandend8:                                       ; preds = %andand7, %andandend5
  %andandval9 = phi i1 [ false, %andandend5 ], [ %29, %andand7 ] ; [#uses = 1, type = i1]
  br i1 %andandval9, label %andand10, label %andandend11

andand10:                                         ; preds = %andandend8
  %30 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %31 = load i8, i8* %30, align 1                 ; [#uses = 1]
  %32 = zext i8 %31 to i32                        ; [#uses = 1]
  %33 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %34 = load i8, i8* %33, align 1                 ; [#uses = 1]
  %35 = zext i8 %34 to i32                        ; [#uses = 1]
  %36 = icmp eq i32 %32, %35                      ; [#uses = 1]
  br label %andandend11

andandend11:                                      ; preds = %andand10, %andandend8
  %andandval12 = phi i1 [ false, %andandend8 ], [ %36, %andand10 ] ; [#uses = 1, type = i1]
  br i1 %andandval12, label %andand13, label %andandend14

andand13:                                         ; preds = %andandend11
  %37 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 7 ; [#uses = 1, type = i8*]
  %38 = load i8, i8* %37, align 1                 ; [#uses = 1]
  %39 = zext i8 %38 to i32                        ; [#uses = 1]
  %40 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 7 ; [#uses = 1, type = i8*]
  %41 = load i8, i8* %40, align 1                 ; [#uses = 1]
  %42 = zext i8 %41 to i32                        ; [#uses = 1]
  %43 = icmp eq i32 %39, %42                      ; [#uses = 1]
  br label %andandend14

andandend14:                                      ; preds = %andand13, %andandend11
  %andandval15 = phi i1 [ false, %andandend11 ], [ %43, %andand13 ] ; [#uses = 1, type = i1]
  br i1 %andandval15, label %andand16, label %andandend17

andand16:                                         ; preds = %andandend14
  %44 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 8 ; [#uses = 1, type = i8*]
  %45 = load i8, i8* %44, align 1                 ; [#uses = 1]
  %46 = zext i8 %45 to i32                        ; [#uses = 1]
  %47 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 8 ; [#uses = 1, type = i8*]
  %48 = load i8, i8* %47, align 1                 ; [#uses = 1]
  %49 = zext i8 %48 to i32                        ; [#uses = 1]
  %50 = icmp eq i32 %46, %49                      ; [#uses = 1]
  br label %andandend17

andandend17:                                      ; preds = %andand16, %andandend14
  %andandval18 = phi i1 [ false, %andandend14 ], [ %50, %andand16 ] ; [#uses = 1, type = i1]
  br i1 %andandval18, label %andand19, label %andandend20

andand19:                                         ; preds = %andandend17
  %51 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 1, type = i8*]
  %52 = load i8, i8* %51, align 1                 ; [#uses = 1]
  %53 = zext i8 %52 to i32                        ; [#uses = 1]
  %54 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 9 ; [#uses = 1, type = i8*]
  %55 = load i8, i8* %54, align 1                 ; [#uses = 1]
  %56 = zext i8 %55 to i32                        ; [#uses = 1]
  %57 = icmp eq i32 %53, %56                      ; [#uses = 1]
  br label %andandend20

andandend20:                                      ; preds = %andand19, %andandend17
  %andandval21 = phi i1 [ false, %andandend17 ], [ %57, %andand19 ] ; [#uses = 1, type = i1]
  br i1 %andandval21, label %andand22, label %andandend23

andand22:                                         ; preds = %andandend20
  %58 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 9 ; [#uses = 1, type = i8*]
  %59 = load i8, i8* %58, align 1                 ; [#uses = 1]
  %60 = zext i8 %59 to i32                        ; [#uses = 1]
  %61 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 9 ; [#uses = 1, type = i8*]
  %62 = load i8, i8* %61, align 1                 ; [#uses = 1]
  %63 = zext i8 %62 to i32                        ; [#uses = 1]
  %64 = icmp eq i32 %60, %63                      ; [#uses = 1]
  br label %andandend23

andandend23:                                      ; preds = %andand22, %andandend20
  %andandval24 = phi i1 [ false, %andandend20 ], [ %64, %andand22 ] ; [#uses = 1, type = i1]
  br i1 %andandval24, label %andand25, label %andandend26

andand25:                                         ; preds = %andandend23
  %65 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 10 ; [#uses = 1, type = { i64, i8* }*]
  %66 = load { i64, i8* }, { i64, i8* }* %65, align 8 ; [#uses = 1]
  %67 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 10 ; [#uses = 1, type = { i64, i8* }*]
  %68 = load { i64, i8* }, { i64, i8* }* %67, align 8 ; [#uses = 1]
  %69 = call zeroext i1 @_D4core8internal5array8equality__T8__equalsTaTaZQoFNaNbNiNeMxAaMxQeZb({ i64, i8* } %66, { i64, i8* } %68) #0 ; [#uses = 1]
  br label %andandend26

andandend26:                                      ; preds = %andand25, %andandend23
  %andandval27 = phi i1 [ false, %andandend23 ], [ %69, %andand25 ] ; [#uses = 1, type = i1]
  br i1 %andandval27, label %andand28, label %andandend29

andand28:                                         ; preds = %andandend26
  %70 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 11 ; [#uses = 1, type = { i64, i8* }*]
  %71 = load { i64, i8* }, { i64, i8* }* %70, align 8 ; [#uses = 1]
  %72 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 11 ; [#uses = 1, type = { i64, i8* }*]
  %73 = load { i64, i8* }, { i64, i8* }* %72, align 8 ; [#uses = 1]
  %74 = call zeroext i1 @_D4core8internal5array8equality__T8__equalsTaTaZQoFNaNbNiNeMxAaMxQeZb({ i64, i8* } %71, { i64, i8* } %73) #0 ; [#uses = 1]
  br label %andandend29

andandend29:                                      ; preds = %andand28, %andandend26
  %andandval30 = phi i1 [ false, %andandend26 ], [ %74, %andand28 ] ; [#uses = 1, type = i1]
  br i1 %andandval30, label %andand31, label %andandend32

andand31:                                         ; preds = %andandend29
  %75 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %76 = load { i64, i8* }, { i64, i8* }* %75, align 8 ; [#uses = 1]
  %77 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %78 = load { i64, i8* }, { i64, i8* }* %77, align 8 ; [#uses = 1]
  %79 = call zeroext i1 @_D4core8internal5array8equality__T8__equalsTaTaZQoFNaNbNiNeMxAaMxQeZb({ i64, i8* } %76, { i64, i8* } %78) #0 ; [#uses = 1]
  br label %andandend32

andandend32:                                      ; preds = %andand31, %andandend29
  %andandval33 = phi i1 [ false, %andandend29 ], [ %79, %andand31 ] ; [#uses = 1, type = i1]
  ret i1 %andandval33
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr i64 @_D3std6format4spec__T10FormatSpecTaZQp9__xtoHashFNbNeKxSQCcQCbQBx__TQBvTaZQCbZm(%"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %p) #0 {
  %h = alloca i64, align 8                        ; [#uses = 29, size/byte = 8]
  store i64 0, i64* %h, align 8
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %0
  %1 = load i64, i64* %h, align 8                 ; [#uses = 1]
  %2 = mul i64 %1, 33                             ; [#uses = 1]
  %3 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D11TypeInfo_xi6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %4 = load [20 x i8*]*, [20 x i8*]** %3, align 8 ; [#uses = 1]
  %"getHash@vtbl" = getelementptr inbounds [20 x i8*], [20 x i8*]* %4, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %5 = load i8*, i8** %"getHash@vtbl", align 8    ; [#uses = 1]
  %getHash = bitcast i8* %5 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %6 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %7 = bitcast i32* %6 to i8*                     ; [#uses = 1]
  %8 = call i64 %getHash(%object.TypeInfo_Const* nonnull @_D11TypeInfo_xi6__initZ, i8* %7) ; [#uses = 1]
  %9 = add i64 %2, %8                             ; [#uses = 1]
  store i64 %9, i64* %h, align 8
  br label %unrolledstmt1

unrolledstmt1:                                    ; preds = %unrolledstmt
  %10 = load i64, i64* %h, align 8                ; [#uses = 1]
  %11 = mul i64 %10, 33                           ; [#uses = 1]
  %12 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D11TypeInfo_xi6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %13 = load [20 x i8*]*, [20 x i8*]** %12, align 8 ; [#uses = 1]
  %"getHash@vtbl13" = getelementptr inbounds [20 x i8*], [20 x i8*]* %13, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %14 = load i8*, i8** %"getHash@vtbl13", align 8 ; [#uses = 1]
  %getHash14 = bitcast i8* %14 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %15 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %16 = bitcast i32* %15 to i8*                   ; [#uses = 1]
  %17 = call i64 %getHash14(%object.TypeInfo_Const* nonnull @_D11TypeInfo_xi6__initZ, i8* %16) ; [#uses = 1]
  %18 = add i64 %11, %17                          ; [#uses = 1]
  store i64 %18, i64* %h, align 8
  br label %unrolledstmt2

unrolledstmt2:                                    ; preds = %unrolledstmt1
  %19 = load i64, i64* %h, align 8                ; [#uses = 1]
  %20 = mul i64 %19, 33                           ; [#uses = 1]
  %21 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D11TypeInfo_xi6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %22 = load [20 x i8*]*, [20 x i8*]** %21, align 8 ; [#uses = 1]
  %"getHash@vtbl15" = getelementptr inbounds [20 x i8*], [20 x i8*]* %22, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %23 = load i8*, i8** %"getHash@vtbl15", align 8 ; [#uses = 1]
  %getHash16 = bitcast i8* %23 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %24 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %25 = bitcast i32* %24 to i8*                   ; [#uses = 1]
  %26 = call i64 %getHash16(%object.TypeInfo_Const* nonnull @_D11TypeInfo_xi6__initZ, i8* %25) ; [#uses = 1]
  %27 = add i64 %20, %26                          ; [#uses = 1]
  store i64 %27, i64* %h, align 8
  br label %unrolledstmt3

unrolledstmt3:                                    ; preds = %unrolledstmt2
  %28 = load i64, i64* %h, align 8                ; [#uses = 1]
  %29 = mul i64 %28, 33                           ; [#uses = 1]
  %30 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D11TypeInfo_xb6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %31 = load [20 x i8*]*, [20 x i8*]** %30, align 8 ; [#uses = 1]
  %"getHash@vtbl17" = getelementptr inbounds [20 x i8*], [20 x i8*]* %31, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %32 = load i8*, i8** %"getHash@vtbl17", align 8 ; [#uses = 1]
  %getHash18 = bitcast i8* %32 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %33 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %34 = call i64 %getHash18(%object.TypeInfo_Const* nonnull @_D11TypeInfo_xb6__initZ, i8* %33) ; [#uses = 1]
  %35 = add i64 %29, %34                          ; [#uses = 1]
  store i64 %35, i64* %h, align 8
  br label %unrolledstmt4

unrolledstmt4:                                    ; preds = %unrolledstmt3
  %36 = load i64, i64* %h, align 8                ; [#uses = 1]
  %37 = mul i64 %36, 33                           ; [#uses = 1]
  %38 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D11TypeInfo_xw6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %39 = load [20 x i8*]*, [20 x i8*]** %38, align 8 ; [#uses = 1]
  %"getHash@vtbl19" = getelementptr inbounds [20 x i8*], [20 x i8*]* %39, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %40 = load i8*, i8** %"getHash@vtbl19", align 8 ; [#uses = 1]
  %getHash20 = bitcast i8* %40 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %41 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 5 ; [#uses = 1, type = i32*]
  %42 = bitcast i32* %41 to i8*                   ; [#uses = 1]
  %43 = call i64 %getHash20(%object.TypeInfo_Const* nonnull @_D11TypeInfo_xw6__initZ, i8* %42) ; [#uses = 1]
  %44 = add i64 %37, %43                          ; [#uses = 1]
  store i64 %44, i64* %h, align 8
  br label %unrolledstmt5

unrolledstmt5:                                    ; preds = %unrolledstmt4
  %45 = load i64, i64* %h, align 8                ; [#uses = 1]
  %46 = mul i64 %45, 33                           ; [#uses = 1]
  %47 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D11TypeInfo_xa6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %48 = load [20 x i8*]*, [20 x i8*]** %47, align 8 ; [#uses = 1]
  %"getHash@vtbl21" = getelementptr inbounds [20 x i8*], [20 x i8*]* %48, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %49 = load i8*, i8** %"getHash@vtbl21", align 8 ; [#uses = 1]
  %getHash22 = bitcast i8* %49 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %50 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %51 = call i64 %getHash22(%object.TypeInfo_Const* nonnull @_D11TypeInfo_xa6__initZ, i8* %50) ; [#uses = 1]
  %52 = add i64 %46, %51                          ; [#uses = 1]
  store i64 %52, i64* %h, align 8
  br label %unrolledstmt6

unrolledstmt6:                                    ; preds = %unrolledstmt5
  %53 = load i64, i64* %h, align 8                ; [#uses = 1]
  %54 = mul i64 %53, 33                           ; [#uses = 1]
  %55 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D11TypeInfo_xh6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %56 = load [20 x i8*]*, [20 x i8*]** %55, align 8 ; [#uses = 1]
  %"getHash@vtbl23" = getelementptr inbounds [20 x i8*], [20 x i8*]* %56, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %57 = load i8*, i8** %"getHash@vtbl23", align 8 ; [#uses = 1]
  %getHash24 = bitcast i8* %57 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %58 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 7 ; [#uses = 1, type = i8*]
  %59 = call i64 %getHash24(%object.TypeInfo_Const* nonnull @_D11TypeInfo_xh6__initZ, i8* %58) ; [#uses = 1]
  %60 = add i64 %54, %59                          ; [#uses = 1]
  store i64 %60, i64* %h, align 8
  br label %unrolledstmt7

unrolledstmt7:                                    ; preds = %unrolledstmt6
  %61 = load i64, i64* %h, align 8                ; [#uses = 1]
  %62 = mul i64 %61, 33                           ; [#uses = 1]
  %63 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D11TypeInfo_xh6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %64 = load [20 x i8*]*, [20 x i8*]** %63, align 8 ; [#uses = 1]
  %"getHash@vtbl25" = getelementptr inbounds [20 x i8*], [20 x i8*]* %64, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %65 = load i8*, i8** %"getHash@vtbl25", align 8 ; [#uses = 1]
  %getHash26 = bitcast i8* %65 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %66 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 8 ; [#uses = 1, type = i8*]
  %67 = call i64 %getHash26(%object.TypeInfo_Const* nonnull @_D11TypeInfo_xh6__initZ, i8* %66) ; [#uses = 1]
  %68 = add i64 %62, %67                          ; [#uses = 1]
  store i64 %68, i64* %h, align 8
  br label %unrolledstmt8

unrolledstmt8:                                    ; preds = %unrolledstmt7
  %69 = load i64, i64* %h, align 8                ; [#uses = 1]
  %70 = mul i64 %69, 33                           ; [#uses = 1]
  %71 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D11TypeInfo_xh6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %72 = load [20 x i8*]*, [20 x i8*]** %71, align 8 ; [#uses = 1]
  %"getHash@vtbl27" = getelementptr inbounds [20 x i8*], [20 x i8*]* %72, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %73 = load i8*, i8** %"getHash@vtbl27", align 8 ; [#uses = 1]
  %getHash28 = bitcast i8* %73 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %74 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 9 ; [#uses = 1, type = i8*]
  %75 = call i64 %getHash28(%object.TypeInfo_Const* nonnull @_D11TypeInfo_xh6__initZ, i8* %74) ; [#uses = 1]
  %76 = add i64 %70, %75                          ; [#uses = 1]
  store i64 %76, i64* %h, align 8
  br label %unrolledstmt9

unrolledstmt9:                                    ; preds = %unrolledstmt8
  %77 = load i64, i64* %h, align 8                ; [#uses = 1]
  %78 = mul i64 %77, 33                           ; [#uses = 1]
  %79 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D11TypeInfo_xh6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %80 = load [20 x i8*]*, [20 x i8*]** %79, align 8 ; [#uses = 1]
  %"getHash@vtbl29" = getelementptr inbounds [20 x i8*], [20 x i8*]* %80, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %81 = load i8*, i8** %"getHash@vtbl29", align 8 ; [#uses = 1]
  %getHash30 = bitcast i8* %81 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %82 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 9 ; [#uses = 1, type = i8*]
  %83 = call i64 %getHash30(%object.TypeInfo_Const* nonnull @_D11TypeInfo_xh6__initZ, i8* %82) ; [#uses = 1]
  %84 = add i64 %78, %83                          ; [#uses = 1]
  store i64 %84, i64* %h, align 8
  br label %unrolledstmt10

unrolledstmt10:                                   ; preds = %unrolledstmt9
  %85 = load i64, i64* %h, align 8                ; [#uses = 1]
  %86 = mul i64 %85, 33                           ; [#uses = 1]
  %87 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D12TypeInfo_xAa6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %88 = load [20 x i8*]*, [20 x i8*]** %87, align 8 ; [#uses = 1]
  %"getHash@vtbl31" = getelementptr inbounds [20 x i8*], [20 x i8*]* %88, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %89 = load i8*, i8** %"getHash@vtbl31", align 8 ; [#uses = 1]
  %getHash32 = bitcast i8* %89 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %90 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 10 ; [#uses = 1, type = { i64, i8* }*]
  %91 = bitcast { i64, i8* }* %90 to i8*          ; [#uses = 1]
  %92 = call i64 %getHash32(%object.TypeInfo_Const* nonnull @_D12TypeInfo_xAa6__initZ, i8* %91) ; [#uses = 1]
  %93 = add i64 %86, %92                          ; [#uses = 1]
  store i64 %93, i64* %h, align 8
  br label %unrolledstmt11

unrolledstmt11:                                   ; preds = %unrolledstmt10
  %94 = load i64, i64* %h, align 8                ; [#uses = 1]
  %95 = mul i64 %94, 33                           ; [#uses = 1]
  %96 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D12TypeInfo_xAa6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %97 = load [20 x i8*]*, [20 x i8*]** %96, align 8 ; [#uses = 1]
  %"getHash@vtbl33" = getelementptr inbounds [20 x i8*], [20 x i8*]* %97, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %98 = load i8*, i8** %"getHash@vtbl33", align 8 ; [#uses = 1]
  %getHash34 = bitcast i8* %98 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %99 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 11 ; [#uses = 1, type = { i64, i8* }*]
  %100 = bitcast { i64, i8* }* %99 to i8*         ; [#uses = 1]
  %101 = call i64 %getHash34(%object.TypeInfo_Const* nonnull @_D12TypeInfo_xAa6__initZ, i8* %100) ; [#uses = 1]
  %102 = add i64 %95, %101                        ; [#uses = 1]
  store i64 %102, i64* %h, align 8
  br label %unrolledstmt12

unrolledstmt12:                                   ; preds = %unrolledstmt11
  %103 = load i64, i64* %h, align 8               ; [#uses = 1]
  %104 = mul i64 %103, 33                         ; [#uses = 1]
  %105 = getelementptr inbounds %object.TypeInfo_Const, %object.TypeInfo_Const* @_D12TypeInfo_xAa6__initZ, i32 0, i32 0 ; [#uses = 1, type = [20 x i8*]**]
  %106 = load [20 x i8*]*, [20 x i8*]** %105, align 8 ; [#uses = 1]
  %"getHash@vtbl35" = getelementptr inbounds [20 x i8*], [20 x i8*]* %106, i32 0, i32 6 ; [#uses = 1, type = i8**]
  %107 = load i8*, i8** %"getHash@vtbl35", align 8 ; [#uses = 1]
  %getHash36 = bitcast i8* %107 to i64 (%object.TypeInfo_Const*, i8*)* ; [#uses = 1]
  %108 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %p, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %109 = bitcast { i64, i8* }* %108 to i8*        ; [#uses = 1]
  %110 = call i64 %getHash36(%object.TypeInfo_Const* nonnull @_D12TypeInfo_xAa6__initZ, i8* %109) ; [#uses = 1]
  %111 = add i64 %104, %110                       ; [#uses = 1]
  store i64 %111, i64* %h, align 8
  br label %unrolledend

unrolledend:                                      ; preds = %unrolledstmt12
  %112 = load i64, i64* %h, align 8               ; [#uses = 0]
  %113 = load i64, i64* %h, align 8               ; [#uses = 1]
  ret i64 %113
}

; [#uses = 7]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTAxaZQBnFNaNbNfKQBtQsZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, { i64, i8* } %e_arg) #0 {
  %e = alloca { i64, i8* }, align 8               ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %e_arg, { i64, i8* }* %e, align 8
  call void @_D3std5range10primitives__T5doPutTSQBh5array__T8AppenderTAyaZQoTAxaZQBpFNaNbNfKQBtKQtZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, { i64, i8* }* dereferenceable(16) %e) #0
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format4spec__T10FormatSpecTaZQp__T17writeUpToNextSpecTSQCi5array__T8AppenderTAyaZQoZQByMFNlKQBmZ12__dgliteral3MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 34, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.71, i32 0, i32 0) }
}

; [#uses = 1]
declare { i64, i8* } @_D3std4conv__T8textImplTAyaTQeTaZQtFNaNbNfQsaZQw({ i64, i8* }, i8 zeroext) #1

; [#uses = 1]
; Function Attrs: noreturn
declare void @_D3std9exception__T7bailOutHTCQBc6format15FormatExceptionZQBnFNaNfAyamMAxaZNn({ i64, i8* }, i64, { i64, i8* }) #12

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D3std6format8internal5write__T6getNthVAyaa13_696e7465676572207769647468SQCt6traits10isIntegralTiTC6object9ThrowableZQDiFNaNfkQBcZi(i32 %index_arg, %object.Throwable* %__param_1_arg) #0 {
  %index = alloca i32, align 4                    ; [#uses = 3, size/byte = 4]
  %__param_1 = alloca %object.Throwable*, align 8 ; [#uses = 1, size/byte = 8]
  store i32 %index_arg, i32* %index, align 4
  store %object.Throwable* %__param_1_arg, %object.Throwable** %__param_1, align 8
  %1 = load i32, i32* %index, align 4             ; [#uses = 1]
  switch i32 %1, label %defaultcntr [
    i32 0, label %casecntr
  ]

switchbody:                                       ; No predecessors!
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %switchbody
  br label %case

casecntr:                                         ; preds = %0
  br label %case

case:                                             ; preds = %casecntr, %unrolledstmt
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std6format15FormatException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %std.format.FormatException* ; [#uses = 5]
  %vtbl = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std6format15FormatException6__vtblZ, [10 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %2 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %3 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* @_D3std6format15FormatException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %4 = bitcast { i64, i8* }* %2 to i8*            ; [#uses = 1]
  %5 = bitcast { i64, i8* }* %3 to i8*            ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 68, i1 false)
  %6 = load i32, i32* %index, align 4             ; [#uses = 1]
  %7 = add i32 %6, 1                              ; [#uses = 1]
  %8 = call { i64, i8* } @_D3std4conv__T4textTAyaTQeTQhTQkTkZQvFNaNbNfQyQBaQBdQBgkZQBl({ i64, i8* } { i64 13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i32 0, i32 0) }, { i64, i8* } { i64 15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i32 0, i32 0) }, { i64, i8* } { i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i32 0, i32 0) }, { i64, i8* } { i64 15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i32 0, i32 0) }, i32 %7) #1 ; [#uses = 1]
  %9 = call %std.format.FormatException* @_D3std6format15FormatException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCtQCsQCo(%std.format.FormatException* nonnull returned %.newclass_gc, { i64, i8* } %8, { i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i64 3244, %object.Throwable* null) #1 ; [#uses = 0]
  %10 = bitcast %std.format.FormatException* %.newclass_gc to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %10) #5
  unreachable

afterthrow:                                       ; No predecessors!
  br label %unrolledend

unrolledend:                                      ; preds = %afterthrow
  br label %default

defaultcntr:                                      ; preds = %0
  br label %default

default:                                          ; preds = %defaultcntr, %unrolledend
  %.newclass_gc_alloc1 = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std6format15FormatException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc2 = bitcast %object.Object* %.newclass_gc_alloc1 to %std.format.FormatException* ; [#uses = 5]
  %vtbl3 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc2, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std6format15FormatException6__vtblZ, [10 x i8*]** %vtbl3, align 8
  %monitor4 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc2, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor4, align 8
  %11 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc2, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %12 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* @_D3std6format15FormatException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %13 = bitcast { i64, i8* }* %11 to i8*          ; [#uses = 1]
  %14 = bitcast { i64, i8* }* %12 to i8*          ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %14, i64 68, i1 false)
  %15 = call { i64, i8* } @_D3std4conv__T4textTAyaTQeTQhZQqFNaNbNfQtQvQxZQBa({ i64, i8* } { i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i32 0, i32 0) }, { i64, i8* } { i64 13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i32 0, i32 0) }, { i64, i8* } { i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i32 0, i32 0) }) #1 ; [#uses = 1]
  %16 = call %std.format.FormatException* @_D3std6format15FormatException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCtQCsQCo(%std.format.FormatException* nonnull returned %.newclass_gc2, { i64, i8* } %15, { i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i64 3250, %object.Throwable* null) #1 ; [#uses = 0]
  %17 = bitcast %std.format.FormatException* %.newclass_gc2 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %17) #5
  unreachable

afterthrow5:                                      ; No predecessors!
  br label %switchend

switchend:                                        ; preds = %afterthrow5
  ret i32 undef
}

; [#uses = 4]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std4conv__T4textTAyaTQeTQhTQkTkZQvFNaNbNfQyQBaQBdQBgkZQBl({ i64, i8* } %__param_0_arg, { i64, i8* } %__param_1_arg, { i64, i8* } %__param_2_arg, { i64, i8* } %__param_3_arg, i32 %__param_4_arg) #0 {
  %__param_0 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %__param_1 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %__param_2 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %__param_3 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %__param_4 = alloca i32, align 4                ; [#uses = 2, size/byte = 4]
  store { i64, i8* } %__param_0_arg, { i64, i8* }* %__param_0, align 8
  store { i64, i8* } %__param_1_arg, { i64, i8* }* %__param_1, align 8
  store { i64, i8* } %__param_2_arg, { i64, i8* }* %__param_2, align 8
  store { i64, i8* } %__param_3_arg, { i64, i8* }* %__param_3, align 8
  store i32 %__param_4_arg, i32* %__param_4, align 4
  %1 = load { i64, i8* }, { i64, i8* }* %__param_0, align 8 ; [#uses = 1]
  %2 = load { i64, i8* }, { i64, i8* }* %__param_1, align 8 ; [#uses = 1]
  %3 = load { i64, i8* }, { i64, i8* }* %__param_2, align 8 ; [#uses = 1]
  %4 = load { i64, i8* }, { i64, i8* }* %__param_3, align 8 ; [#uses = 1]
  %5 = load i32, i32* %__param_4, align 4         ; [#uses = 1]
  %6 = call { i64, i8* } @_D3std4conv__T8textImplTAyaTQeTQhTQkTQnTkZQBcFNaNbNfQBcQBfQBiQBlkZQBq({ i64, i8* } %1, { i64, i8* } %2, { i64, i8* } %3, { i64, i8* } %4, i32 %5) #1 ; [#uses = 1]
  ret { i64, i8* } %6
}

; [#uses = 4]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std4conv__T4textTAyaTQeTQhZQqFNaNbNfQtQvQxZQBa({ i64, i8* } %__param_0_arg, { i64, i8* } %__param_1_arg, { i64, i8* } %__param_2_arg) #0 {
  %__param_0 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %__param_1 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %__param_2 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %__param_0_arg, { i64, i8* }* %__param_0, align 8
  store { i64, i8* } %__param_1_arg, { i64, i8* }* %__param_1, align 8
  store { i64, i8* } %__param_2_arg, { i64, i8* }* %__param_2, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %__param_0, align 8 ; [#uses = 1]
  %2 = load { i64, i8* }, { i64, i8* }* %__param_1, align 8 ; [#uses = 1]
  %3 = load { i64, i8* }, { i64, i8* }* %__param_2, align 8 ; [#uses = 1]
  %4 = call { i64, i8* } @_D3std4conv__T8textImplTAyaTQeTQhTQkZQxFNaNbNfQwQyQBaZQBe({ i64, i8* } %1, { i64, i8* } %2, { i64, i8* } %3) #1 ; [#uses = 1]
  ret { i64, i8* } %4
}

; [#uses = 1]
declare { i64, i8* } @_D3std4conv__T8textImplTAyaTQeTQhTQkTQnTkZQBcFNaNbNfQBcQBfQBiQBlkZQBq({ i64, i8* }, { i64, i8* }, { i64, i8* }, { i64, i8* }, i32) #1

; [#uses = 1]
declare { i64, i8* } @_D3std4conv__T8textImplTAyaTQeTQhTQkZQxFNaNbNfQwQyQBaZQBe({ i64, i8* }, { i64, i8* }, { i64, i8* }) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D3std6format8internal5write__T6getNthVAyaa17_696e746567657220707265636973696f6eSQDb6traits10isIntegralTiTC6object9ThrowableZQDqFNaNfkQBcZi(i32 %index_arg, %object.Throwable* %__param_1_arg) #0 {
  %index = alloca i32, align 4                    ; [#uses = 3, size/byte = 4]
  %__param_1 = alloca %object.Throwable*, align 8 ; [#uses = 1, size/byte = 8]
  store i32 %index_arg, i32* %index, align 4
  store %object.Throwable* %__param_1_arg, %object.Throwable** %__param_1, align 8
  %1 = load i32, i32* %index, align 4             ; [#uses = 1]
  switch i32 %1, label %defaultcntr [
    i32 0, label %casecntr
  ]

switchbody:                                       ; No predecessors!
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %switchbody
  br label %case

casecntr:                                         ; preds = %0
  br label %case

case:                                             ; preds = %casecntr, %unrolledstmt
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std6format15FormatException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %std.format.FormatException* ; [#uses = 5]
  %vtbl = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std6format15FormatException6__vtblZ, [10 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %2 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %3 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* @_D3std6format15FormatException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %4 = bitcast { i64, i8* }* %2 to i8*            ; [#uses = 1]
  %5 = bitcast { i64, i8* }* %3 to i8*            ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 68, i1 false)
  %6 = load i32, i32* %index, align 4             ; [#uses = 1]
  %7 = add i32 %6, 1                              ; [#uses = 1]
  %8 = call { i64, i8* } @_D3std4conv__T4textTAyaTQeTQhTQkTkZQvFNaNbNfQyQBaQBdQBgkZQBl({ i64, i8* } { i64 17, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i32 0, i32 0) }, { i64, i8* } { i64 15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i32 0, i32 0) }, { i64, i8* } { i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i32 0, i32 0) }, { i64, i8* } { i64 15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i32 0, i32 0) }, i32 %7) #0 ; [#uses = 1]
  %9 = call %std.format.FormatException* @_D3std6format15FormatException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCtQCsQCo(%std.format.FormatException* nonnull returned %.newclass_gc, { i64, i8* } %8, { i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i64 3244, %object.Throwable* null) #1 ; [#uses = 0]
  %10 = bitcast %std.format.FormatException* %.newclass_gc to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %10) #5
  unreachable

afterthrow:                                       ; No predecessors!
  br label %unrolledend

unrolledend:                                      ; preds = %afterthrow
  br label %default

defaultcntr:                                      ; preds = %0
  br label %default

default:                                          ; preds = %defaultcntr, %unrolledend
  %.newclass_gc_alloc1 = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std6format15FormatException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc2 = bitcast %object.Object* %.newclass_gc_alloc1 to %std.format.FormatException* ; [#uses = 5]
  %vtbl3 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc2, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std6format15FormatException6__vtblZ, [10 x i8*]** %vtbl3, align 8
  %monitor4 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc2, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor4, align 8
  %11 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc2, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %12 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* @_D3std6format15FormatException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %13 = bitcast { i64, i8* }* %11 to i8*          ; [#uses = 1]
  %14 = bitcast { i64, i8* }* %12 to i8*          ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %14, i64 68, i1 false)
  %15 = call { i64, i8* } @_D3std4conv__T4textTAyaTQeTQhZQqFNaNbNfQtQvQxZQBa({ i64, i8* } { i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i32 0, i32 0) }, { i64, i8* } { i64 17, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i32 0, i32 0) }, { i64, i8* } { i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i32 0, i32 0) }) #0 ; [#uses = 1]
  %16 = call %std.format.FormatException* @_D3std6format15FormatException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCtQCsQCo(%std.format.FormatException* nonnull returned %.newclass_gc2, { i64, i8* } %15, { i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i64 3250, %object.Throwable* null) #1 ; [#uses = 0]
  %17 = bitcast %std.format.FormatException* %.newclass_gc2 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %17) #5
  unreachable

afterthrow5:                                      ; No predecessors!
  br label %switchend

switchend:                                        ; preds = %afterthrow5
  ret i32 undef
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D3std6format8internal5write__T6getNthVAyaa21_736570617261746f72206469676974207769647468SQDj6traits10isIntegralTiTC6object9ThrowableZQDyFNaNfkQBcZi(i32 %index_arg, %object.Throwable* %__param_1_arg) #0 {
  %index = alloca i32, align 4                    ; [#uses = 3, size/byte = 4]
  %__param_1 = alloca %object.Throwable*, align 8 ; [#uses = 1, size/byte = 8]
  store i32 %index_arg, i32* %index, align 4
  store %object.Throwable* %__param_1_arg, %object.Throwable** %__param_1, align 8
  %1 = load i32, i32* %index, align 4             ; [#uses = 1]
  switch i32 %1, label %defaultcntr [
    i32 0, label %casecntr
  ]

switchbody:                                       ; No predecessors!
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %switchbody
  br label %case

casecntr:                                         ; preds = %0
  br label %case

case:                                             ; preds = %casecntr, %unrolledstmt
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std6format15FormatException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %std.format.FormatException* ; [#uses = 5]
  %vtbl = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std6format15FormatException6__vtblZ, [10 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %2 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %3 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* @_D3std6format15FormatException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %4 = bitcast { i64, i8* }* %2 to i8*            ; [#uses = 1]
  %5 = bitcast { i64, i8* }* %3 to i8*            ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 68, i1 false)
  %6 = load i32, i32* %index, align 4             ; [#uses = 1]
  %7 = add i32 %6, 1                              ; [#uses = 1]
  %8 = call { i64, i8* } @_D3std4conv__T4textTAyaTQeTQhTQkTkZQvFNaNbNfQyQBaQBdQBgkZQBl({ i64, i8* } { i64 21, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.80, i32 0, i32 0) }, { i64, i8* } { i64 15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i32 0, i32 0) }, { i64, i8* } { i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.74, i32 0, i32 0) }, { i64, i8* } { i64 15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.75, i32 0, i32 0) }, i32 %7) #0 ; [#uses = 1]
  %9 = call %std.format.FormatException* @_D3std6format15FormatException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCtQCsQCo(%std.format.FormatException* nonnull returned %.newclass_gc, { i64, i8* } %8, { i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i64 3244, %object.Throwable* null) #1 ; [#uses = 0]
  %10 = bitcast %std.format.FormatException* %.newclass_gc to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %10) #5
  unreachable

afterthrow:                                       ; No predecessors!
  br label %unrolledend

unrolledend:                                      ; preds = %afterthrow
  br label %default

defaultcntr:                                      ; preds = %0
  br label %default

default:                                          ; preds = %defaultcntr, %unrolledend
  %.newclass_gc_alloc1 = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std6format15FormatException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc2 = bitcast %object.Object* %.newclass_gc_alloc1 to %std.format.FormatException* ; [#uses = 5]
  %vtbl3 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc2, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std6format15FormatException6__vtblZ, [10 x i8*]** %vtbl3, align 8
  %monitor4 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc2, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor4, align 8
  %11 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc2, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %12 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* @_D3std6format15FormatException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %13 = bitcast { i64, i8* }* %11 to i8*          ; [#uses = 1]
  %14 = bitcast { i64, i8* }* %12 to i8*          ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 %14, i64 68, i1 false)
  %15 = call { i64, i8* } @_D3std4conv__T4textTAyaTQeTQhZQqFNaNbNfQtQvQxZQBa({ i64, i8* } { i64 8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i32 0, i32 0) }, { i64, i8* } { i64 21, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.80, i32 0, i32 0) }, { i64, i8* } { i64 9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i32 0, i32 0) }) #0 ; [#uses = 1]
  %16 = call %std.format.FormatException* @_D3std6format15FormatException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCtQCsQCo(%std.format.FormatException* nonnull returned %.newclass_gc2, { i64, i8* } %15, { i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i64 3250, %object.Throwable* null) #1 ; [#uses = 0]
  %17 = bitcast %std.format.FormatException* %.newclass_gc2 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %17) #5
  unreachable

afterthrow5:                                      ; No predecessors!
  br label %switchend

switchend:                                        ; preds = %afterthrow5
  ret i32 undef
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTC6object9ThrowableTaZQCnFKQCeKQBeMKxSQDxQDw4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 46, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.82, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTC6object9ThrowableTaZQCrFKQCeQBdMKxSQEjQEi4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, %object.Throwable* %val_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %val = alloca %object.Throwable*, align 8       ; [#uses = 3, size/byte = 8]
  store %object.Throwable* %val_arg, %object.Throwable** %val, align 8
  call void @_D3std6format8internal5write__T22enforceValidFormatSpecTC6object9ThrowableTaZQBuFNaNfMKxSQDjQDi4spec__T10FormatSpecTaZQpZv(%"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  %1 = load %object.Throwable*, %object.Throwable** %val, align 8 ; [#uses = 1]
  %2 = icmp eq %object.Throwable* %1, null        ; [#uses = 1]
  br i1 %2, label %if, label %else

if:                                               ; preds = %0
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } { i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0) }) #0
  br label %endif

else:                                             ; preds = %0
  call void @_D3std6format8internal5write__T12formatObjectTSQBt5array__T8AppenderTAyaZQoTC6object9ThrowableTaZQCoFKQCeKQBeMKxSQEhQEg4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, %object.Throwable** dereferenceable(8) %val, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T22enforceValidFormatSpecTC6object9ThrowableTaZQBuFNaNfMKxSQDjQDi4spec__T10FormatSpecTaZQpZv(%"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %2 = load i8, i8* %1, align 1                   ; [#uses = 1]
  %3 = zext i8 %2 to i32                          ; [#uses = 1]
  %4 = icmp eq i32 %3, 115                        ; [#uses = 1]
  %5 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %4, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std6format8internal5write__T22enforceValidFormatSpecTC6object9ThrowableTaZQBuFMKxSQDfQDe4spec__T10FormatSpecTaZQpZ12__dgliteral3MFNaNbNiNfZAxa }, { i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i64 2846) #0 ; [#uses = 0]
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T12formatObjectTSQBt5array__T8AppenderTAyaZQoTC6object9ThrowableTaZQCoFKQCeKQBeMKxSQEhQEg4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, %object.Throwable** dereferenceable(8) %val, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %.frame = alloca %nest.formatObject, align 8    ; [#uses = 2, size/byte = 8]
  %w1 = getelementptr inbounds %nest.formatObject, %nest.formatObject* %.frame, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender"**]
  store %"std.array.Appender!string.Appender"* %w, %"std.array.Appender!string.Appender"** %w1, align 8
  %1 = load %object.Throwable*, %object.Throwable** %val, align 8 ; [#uses = 1]
  %2 = getelementptr inbounds %object.Throwable, %object.Throwable* %1, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  %3 = load [10 x i8*]*, [10 x i8*]** %2, align 8 ; [#uses = 1]
  %"toString@vtbl" = getelementptr inbounds [10 x i8*], [10 x i8*]* %3, i32 0, i32 8 ; [#uses = 1, type = i8**]
  %4 = load i8*, i8** %"toString@vtbl", align 8   ; [#uses = 1]
  %toString = bitcast i8* %4 to void (%object.Throwable*, { i8*, void (i8*, { i64, i8* })* })* ; [#uses = 1]
  %5 = load %object.Throwable*, %object.Throwable** %val, align 8 ; [#uses = 1]
  %6 = bitcast %nest.formatObject* %.frame to i8* ; [#uses = 1]
  %7 = insertvalue { i8*, void (i8*, { i64, i8* })* } undef, i8* %6, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, void (i8*, { i64, i8* })* } %7, void (i8*, { i64, i8* })* @_D3std6format8internal5write__T12formatObjectTSQBt5array__T8AppenderTAyaZQoTC6object9ThrowableTaZQCoFKQCeKQBeMKxSQEhQEg4spec__T10FormatSpecTaZQpZ9__lambda6MFNaNbNfMAxaZv, 1 ; [#uses = 1]
  call void %toString(%object.Throwable* nonnull %5, { i8*, void (i8*, { i64, i8* })* } %.func)
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format8internal5write__T22enforceValidFormatSpecTC6object9ThrowableTaZQBuFMKxSQDfQDe4spec__T10FormatSpecTaZQpZ12__dgliteral3MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 51, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.84, i32 0, i32 0) }
}

; [#uses = 0]
; Function Attrs: uwtable
define weak_odr i32 @_D3std9algorithm10comparison__T5amongSQBkQBjQBc10__lambda83TEQCh6format8internal5write17HasToStringResultTQBuTQByTQCcZQDjFNaNbNiNfQCsQCvQCyQDbZk(i32 %value_arg, i32 %__param_1_arg, i32 %__param_2_arg, i32 %__param_3_arg) #0 {
  %value = alloca i32, align 4                    ; [#uses = 4, size/byte = 4]
  %__param_1 = alloca i32, align 4                ; [#uses = 2, size/byte = 4]
  %__param_2 = alloca i32, align 4                ; [#uses = 2, size/byte = 4]
  %__param_3 = alloca i32, align 4                ; [#uses = 2, size/byte = 4]
  %v = alloca i32*, align 8                       ; [#uses = 2, size/byte = 8]
  %v3 = alloca i32*, align 8                      ; [#uses = 2, size/byte = 8]
  %v7 = alloca i32*, align 8                      ; [#uses = 2, size/byte = 8]
  store i32 %value_arg, i32* %value, align 4
  store i32 %__param_1_arg, i32* %__param_1, align 4
  store i32 %__param_2_arg, i32* %__param_2, align 4
  store i32 %__param_3_arg, i32* %__param_3, align 4
  br label %unrolledstmt

unrolledstmt:                                     ; preds = %0
  store i32* %__param_1, i32** %v, align 8
  %1 = load i32, i32* %value, align 4             ; [#uses = 1]
  %2 = load i32*, i32** %v, align 8               ; [#uses = 1]
  %3 = load i32, i32* %2, align 4                 ; [#uses = 1]
  %4 = call zeroext i1 @_D3std9algorithm10comparison__T10__lambda83TEQBr6format8internal5write17HasToStringResultTQBuZQClFNaNbNiNfQCkQCnZb(i32 %1, i32 %3) #0 ; [#uses = 1]
  br i1 %4, label %if, label %endif

if:                                               ; preds = %unrolledstmt
  ret i32 1

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %unrolledstmt
  br label %unrolledstmt1

unrolledstmt1:                                    ; preds = %endif
  store i32* %__param_2, i32** %v3, align 8
  %5 = load i32, i32* %value, align 4             ; [#uses = 1]
  %6 = load i32*, i32** %v3, align 8              ; [#uses = 1]
  %7 = load i32, i32* %6, align 4                 ; [#uses = 1]
  %8 = call zeroext i1 @_D3std9algorithm10comparison__T10__lambda83TEQBr6format8internal5write17HasToStringResultTQBuZQClFNaNbNiNfQCkQCnZb(i32 %5, i32 %7) #0 ; [#uses = 1]
  br i1 %8, label %if4, label %endif5

if4:                                              ; preds = %unrolledstmt1
  ret i32 2

dummy.afterreturn6:                               ; No predecessors!
  br label %endif5

endif5:                                           ; preds = %dummy.afterreturn6, %unrolledstmt1
  br label %unrolledstmt2

unrolledstmt2:                                    ; preds = %endif5
  store i32* %__param_3, i32** %v7, align 8
  %9 = load i32, i32* %value, align 4             ; [#uses = 1]
  %10 = load i32*, i32** %v7, align 8             ; [#uses = 1]
  %11 = load i32, i32* %10, align 4               ; [#uses = 1]
  %12 = call zeroext i1 @_D3std9algorithm10comparison__T10__lambda83TEQBr6format8internal5write17HasToStringResultTQBuZQClFNaNbNiNfQCkQCnZb(i32 %9, i32 %11) #0 ; [#uses = 1]
  br i1 %12, label %if8, label %endif9

if8:                                              ; preds = %unrolledstmt2
  ret i32 3

dummy.afterreturn10:                              ; No predecessors!
  br label %endif9

endif9:                                           ; preds = %dummy.afterreturn10, %unrolledstmt2
  br label %unrolledend

unrolledend:                                      ; preds = %endif9
  ret i32 0
}

; [#uses = 3]
; Function Attrs: uwtable
define internal zeroext i1 @_D3std9algorithm10comparison__T10__lambda83TEQBr6format8internal5write17HasToStringResultTQBuZQClFNaNbNiNfQCkQCnZb(i32 %a_arg, i32 %b_arg) #0 {
  %a = alloca i32, align 4                        ; [#uses = 2, size/byte = 4]
  %b = alloca i32, align 4                        ; [#uses = 2, size/byte = 4]
  store i32 %a_arg, i32* %a, align 4
  store i32 %b_arg, i32* %b, align 4
  %1 = load i32, i32* %a, align 4                 ; [#uses = 1]
  %2 = load i32, i32* %b, align 4                 ; [#uses = 1]
  %3 = icmp eq i32 %1, %2                         ; [#uses = 1]
  ret i1 %3
}

; [#uses = 0]
declare void @_D6object9Throwable8toStringMxFMDFIAaZvZv(%object.Throwable* nonnull, { i8*, void (i8*, { i64, i8* })* }) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal void @_D3std6format8internal5write__T12formatObjectTSQBt5array__T8AppenderTAyaZQoTC6object9ThrowableTaZQCoFKQCeKQBeMKxSQEhQEg4spec__T10FormatSpecTaZQpZ9__lambda6MFNaNbNfMAxaZv(i8* nonnull %.nest_arg, { i64, i8* } %s_arg) #0 {
  %s = alloca { i64, i8* }, align 8               ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %s_arg, { i64, i8* }* %s, align 8
  %1 = bitcast i8* %.nest_arg to %nest.formatObject* ; [#uses = 1]
  %w = getelementptr inbounds %nest.formatObject, %nest.formatObject* %1, i32 0, i32 0 ; [#uses = 1, type = %"std.array.Appender!string.Appender"**]
  %2 = load %"std.array.Appender!string.Appender"*, %"std.array.Appender!string.Appender"** %w, align 8 ; [#uses = 1]
  %3 = load { i64, i8* }, { i64, i8* }* %s, align 8 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTAxaZQBnFNaNbNfKQBtQsZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %2, { i64, i8* } %3) #1
  ret void
}

; [#uses = 1]
declare { i64, i8* } @_D3std4conv__T8textImplTAyaTQeThTaTaTQnTmZQBcFNaNbNfQBchaaQBimZQBn({ i64, i8* }, i8 zeroext, i8 zeroext, i8 zeroext, { i64, i8* }* byval({ i64, i8* }) align 8, i64) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka87_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20227465737441706922292e63616c6c48616e646c6572TC6object9ThrowableZQQkMFLQzZ12__dgliteral4MFNaNiNfZQRj(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.error*     ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.error, %nest.error* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = %object.Throwable* (i8*)**]
  %.funcptr = load %object.Throwable* (i8*)*, %object.Throwable* (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call %object.Throwable* %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTC6object9ThrowableZQBeFQxZAya(%object.Throwable* %4) #0 ; [#uses = 1]
  %6 = bitcast i8* %.nest_arg to %nest.error*     ; [#uses = 1]
  %this = getelementptr inbounds %nest.error, %nest.error* %6, i32 0, i32 1 ; [#uses = 1, type = %hunt.logging.Logger.Logger**]
  %7 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** %this, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds %hunt.logging.Logger.Logger, %hunt.logging.Logger.Logger* %7, i32 0, i32 2 ; [#uses = 1, type = { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }*]
  %9 = load { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }* %8, align 8 ; [#uses = 1]
  %10 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 87, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.55, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 101, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.56, i32 0, i32 0) }, i64 1089, i32 3, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } %9) #1 ; [#uses = 1]
  ret { i64, i8* } %10
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226563686f22292e63616c6c48616e646c6572TC6object9ThrowableZQQhFNbLQBaZv({ i8*, %object.Throwable* (i8*)* } %__param_0_arg) #0 {
  %1 = alloca { i8*, %object.Throwable* (i8*)* }, align 8 ; [#uses = 2, size/byte = 16]
  %.frame = alloca %nest.logError.3, align 8      ; [#uses = 3, size/byte = 16]
  store { i8*, %object.Throwable* (i8*)* } %__param_0_arg, { i8*, %object.Throwable* (i8*)* }* %1, align 8
  %__param_0 = getelementptr inbounds %nest.logError.3, %nest.logError.3* %.frame, i32 0, i32 0 ; [#uses = 1, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = bitcast { i8*, %object.Throwable* (i8*)* }* %__param_0 to i8* ; [#uses = 1]
  %3 = bitcast { i8*, %object.Throwable* (i8*)* }* %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false)
  %4 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %5 = icmp eq %hunt.logging.Logger.Logger* %4, null ; [#uses = 1]
  br i1 %5, label %if, label %else

if:                                               ; preds = %0
  %6 = bitcast %nest.logError.3* %.frame to i8*   ; [#uses = 1]
  %7 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %6, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %7, { i64, i8* } (i8*)* @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226563686f22292e63616c6c48616e646c6572TC6object9ThrowableZQQhFNbLQBaZ12__dgliteral3MFNaNiNfZQRf, 1 ; [#uses = 1]
  call void @_D4hunt7logging6LoggerQh16writeFormatColorFNbEQBsQBqQBl8LogLevelLAyaZv(i32 3, { i8*, { i64, i8* } (i8*)* } %.func) #1
  br label %endif

else:                                             ; preds = %0
  %8 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %9 = getelementptr inbounds %hunt.logging.Logger.Logger, %hunt.logging.Logger.Logger* %8, i32 0, i32 0 ; [#uses = 1, type = [11 x i8*]**]
  %10 = load [11 x i8*]*, [11 x i8*]** %9, align 8 ; [#uses = 1]
  %"doWrite@vtbl" = getelementptr inbounds [11 x i8*], [11 x i8*]* %10, i32 0, i32 9 ; [#uses = 1, type = i8**]
  %11 = load i8*, i8** %"doWrite@vtbl", align 8   ; [#uses = 1]
  %doWrite = bitcast i8* %11 to void (%hunt.logging.Logger.Logger*, i32, { i8*, { i64, i8* } (i8*)* })* ; [#uses = 1]
  %12 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %13 = bitcast %nest.logError.3* %.frame to i8*  ; [#uses = 1]
  %14 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %13, 0 ; [#uses = 1]
  %.func2 = insertvalue { i8*, { i64, i8* } (i8*)* } %14, { i64, i8* } (i8*)* @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226563686f22292e63616c6c48616e646c6572TC6object9ThrowableZQQhFNbLQBaZ12__dgliteral4MFNaNiNfZQRf, 1 ; [#uses = 1]
  call void %doWrite(%hunt.logging.Logger.Logger* nonnull %12, i32 3, { i8*, { i64, i8* } (i8*)* } %.func2)
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal %object.Throwable* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa4_6563686fZQCdFCQDy4http7routing14RoutingContextQqZ12__dgliteral4MFNaNbNiNfZC6object9Throwable(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.callHandler.2* ; [#uses = 1]
  %t = getelementptr inbounds %nest.callHandler.2, %nest.callHandler.2* %1, i32 0, i32 0 ; [#uses = 2, type = %object.Throwable**]
  %2 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 0]
  %3 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 1]
  ret %object.Throwable* %3
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226563686f22292e63616c6c48616e646c6572TC6object9ThrowableZQQeMFNbLQBbZv(%hunt.logging.Logger.Logger* nonnull %.this_arg, { i8*, %object.Throwable* (i8*)* } %__param_0_arg) #0 {
  %1 = alloca %hunt.logging.Logger.Logger*, align 8 ; [#uses = 4, size/byte = 8]
  %2 = alloca { i8*, %object.Throwable* (i8*)* }, align 8 ; [#uses = 2, size/byte = 16]
  %.frame = alloca %nest.error.4, align 8         ; [#uses = 3, size/byte = 24]
  store %hunt.logging.Logger.Logger* %.this_arg, %hunt.logging.Logger.Logger** %1, align 8
  store { i8*, %object.Throwable* (i8*)* } %__param_0_arg, { i8*, %object.Throwable* (i8*)* }* %2, align 8
  %__param_0 = getelementptr inbounds %nest.error.4, %nest.error.4* %.frame, i32 0, i32 0 ; [#uses = 1, type = { i8*, %object.Throwable* (i8*)* }*]
  %3 = bitcast { i8*, %object.Throwable* (i8*)* }* %__param_0 to i8* ; [#uses = 1]
  %4 = bitcast { i8*, %object.Throwable* (i8*)* }* %2 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false)
  %this = getelementptr inbounds %nest.error.4, %nest.error.4* %.frame, i32 0, i32 1 ; [#uses = 1, type = %hunt.logging.Logger.Logger**]
  %5 = bitcast %hunt.logging.Logger.Logger** %this to i8* ; [#uses = 1]
  %6 = bitcast %hunt.logging.Logger.Logger** %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 8, i1 false)
  %7 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** %1, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds %hunt.logging.Logger.Logger, %hunt.logging.Logger.Logger* %7, i32 0, i32 0 ; [#uses = 1, type = [11 x i8*]**]
  %9 = load [11 x i8*]*, [11 x i8*]** %8, align 8 ; [#uses = 1]
  %"doWrite@vtbl" = getelementptr inbounds [11 x i8*], [11 x i8*]* %9, i32 0, i32 9 ; [#uses = 1, type = i8**]
  %10 = load i8*, i8** %"doWrite@vtbl", align 8   ; [#uses = 1]
  %doWrite = bitcast i8* %10 to void (%hunt.logging.Logger.Logger*, i32, { i8*, { i64, i8* } (i8*)* })* ; [#uses = 1]
  %11 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** %1, align 8 ; [#uses = 1]
  %12 = bitcast %nest.error.4* %.frame to i8*     ; [#uses = 1]
  %13 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %12, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %13, { i64, i8* } (i8*)* @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226563686f22292e63616c6c48616e646c6572TC6object9ThrowableZQQeMFLQzZ12__dgliteral4MFNaNiNfZQRd, 1 ; [#uses = 1]
  call void %doWrite(%hunt.logging.Logger.Logger* nonnull %11, i32 3, { i8*, { i64, i8* } (i8*)* } %.func)
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal %object.Throwable* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa4_6563686fZQCdFCQDy4http7routing14RoutingContextQqZ12__dgliteral5MFNaNbNiNfZC6object9Throwable(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.callHandler.2* ; [#uses = 1]
  %t = getelementptr inbounds %nest.callHandler.2, %nest.callHandler.2* %1, i32 0, i32 0 ; [#uses = 2, type = %object.Throwable**]
  %2 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 0]
  %3 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 1]
  ret %object.Throwable* %3
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226563686f22292e63616c6c48616e646c6572TC6object9ThrowableZQQhFNbLQBaZ12__dgliteral3MFNaNiNfZQRf(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.logError.3* ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.logError.3, %nest.logError.3* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = %object.Throwable* (i8*)**]
  %.funcptr = load %object.Throwable* (i8*)*, %object.Throwable* (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call %object.Throwable* %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTC6object9ThrowableZQBeFQxZAya(%object.Throwable* %4) #0 ; [#uses = 1]
  %6 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 84, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.85, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 101, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.56, i32 0, i32 0) }, i64 1088, i32 3, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } zeroinitializer) #1 ; [#uses = 1]
  ret { i64, i8* } %6
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226563686f22292e63616c6c48616e646c6572TC6object9ThrowableZQQhFNbLQBaZ12__dgliteral4MFNaNiNfZQRf(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.logError.3* ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.logError.3, %nest.logError.3* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = %object.Throwable* (i8*)**]
  %.funcptr = load %object.Throwable* (i8*)*, %object.Throwable* (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call %object.Throwable* %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTC6object9ThrowableZQBeFQxZAya(%object.Throwable* %4) #0 ; [#uses = 1]
  %6 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 84, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.85, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 101, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.56, i32 0, i32 0) }, i64 1088, i32 3, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } zeroinitializer) #1 ; [#uses = 1]
  ret { i64, i8* } %6
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226563686f22292e63616c6c48616e646c6572TC6object9ThrowableZQQeMFLQzZ12__dgliteral4MFNaNiNfZQRd(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.error.4*   ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.error.4, %nest.error.4* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = %object.Throwable* (i8*)**]
  %.funcptr = load %object.Throwable* (i8*)*, %object.Throwable* (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call %object.Throwable* %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTC6object9ThrowableZQBeFQxZAya(%object.Throwable* %4) #0 ; [#uses = 1]
  %6 = bitcast i8* %.nest_arg to %nest.error.4*   ; [#uses = 1]
  %this = getelementptr inbounds %nest.error.4, %nest.error.4* %6, i32 0, i32 1 ; [#uses = 1, type = %hunt.logging.Logger.Logger**]
  %7 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** %this, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds %hunt.logging.Logger.Logger, %hunt.logging.Logger.Logger* %7, i32 0, i32 2 ; [#uses = 1, type = { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }*]
  %9 = load { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }* %8, align 8 ; [#uses = 1]
  %10 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 84, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.85, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 101, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.56, i32 0, i32 0) }, i64 1089, i32 3, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } %9) #1 ; [#uses = 1]
  ret { i64, i8* } %10
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226661637422292e63616c6c48616e646c6572TC6object9ThrowableZQQhFNbLQBaZv({ i8*, %object.Throwable* (i8*)* } %__param_0_arg) #0 {
  %1 = alloca { i8*, %object.Throwable* (i8*)* }, align 8 ; [#uses = 2, size/byte = 16]
  %.frame = alloca %nest.logError.6, align 8      ; [#uses = 3, size/byte = 16]
  store { i8*, %object.Throwable* (i8*)* } %__param_0_arg, { i8*, %object.Throwable* (i8*)* }* %1, align 8
  %__param_0 = getelementptr inbounds %nest.logError.6, %nest.logError.6* %.frame, i32 0, i32 0 ; [#uses = 1, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = bitcast { i8*, %object.Throwable* (i8*)* }* %__param_0 to i8* ; [#uses = 1]
  %3 = bitcast { i8*, %object.Throwable* (i8*)* }* %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false)
  %4 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %5 = icmp eq %hunt.logging.Logger.Logger* %4, null ; [#uses = 1]
  br i1 %5, label %if, label %else

if:                                               ; preds = %0
  %6 = bitcast %nest.logError.6* %.frame to i8*   ; [#uses = 1]
  %7 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %6, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %7, { i64, i8* } (i8*)* @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226661637422292e63616c6c48616e646c6572TC6object9ThrowableZQQhFNbLQBaZ12__dgliteral3MFNaNiNfZQRf, 1 ; [#uses = 1]
  call void @_D4hunt7logging6LoggerQh16writeFormatColorFNbEQBsQBqQBl8LogLevelLAyaZv(i32 3, { i8*, { i64, i8* } (i8*)* } %.func) #1
  br label %endif

else:                                             ; preds = %0
  %8 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %9 = getelementptr inbounds %hunt.logging.Logger.Logger, %hunt.logging.Logger.Logger* %8, i32 0, i32 0 ; [#uses = 1, type = [11 x i8*]**]
  %10 = load [11 x i8*]*, [11 x i8*]** %9, align 8 ; [#uses = 1]
  %"doWrite@vtbl" = getelementptr inbounds [11 x i8*], [11 x i8*]* %10, i32 0, i32 9 ; [#uses = 1, type = i8**]
  %11 = load i8*, i8** %"doWrite@vtbl", align 8   ; [#uses = 1]
  %doWrite = bitcast i8* %11 to void (%hunt.logging.Logger.Logger*, i32, { i8*, { i64, i8* } (i8*)* })* ; [#uses = 1]
  %12 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %13 = bitcast %nest.logError.6* %.frame to i8*  ; [#uses = 1]
  %14 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %13, 0 ; [#uses = 1]
  %.func2 = insertvalue { i8*, { i64, i8* } (i8*)* } %14, { i64, i8* } (i8*)* @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226661637422292e63616c6c48616e646c6572TC6object9ThrowableZQQhFNbLQBaZ12__dgliteral4MFNaNiNfZQRf, 1 ; [#uses = 1]
  call void %doWrite(%hunt.logging.Logger.Logger* nonnull %12, i32 3, { i8*, { i64, i8* } (i8*)* } %.func2)
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal %object.Throwable* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa4_66616374ZQCdFCQDy4http7routing14RoutingContextQqZ12__dgliteral4MFNaNbNiNfZC6object9Throwable(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.callHandler.5* ; [#uses = 1]
  %t = getelementptr inbounds %nest.callHandler.5, %nest.callHandler.5* %1, i32 0, i32 0 ; [#uses = 2, type = %object.Throwable**]
  %2 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 0]
  %3 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 1]
  ret %object.Throwable* %3
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226661637422292e63616c6c48616e646c6572TC6object9ThrowableZQQeMFNbLQBbZv(%hunt.logging.Logger.Logger* nonnull %.this_arg, { i8*, %object.Throwable* (i8*)* } %__param_0_arg) #0 {
  %1 = alloca %hunt.logging.Logger.Logger*, align 8 ; [#uses = 4, size/byte = 8]
  %2 = alloca { i8*, %object.Throwable* (i8*)* }, align 8 ; [#uses = 2, size/byte = 16]
  %.frame = alloca %nest.error.7, align 8         ; [#uses = 3, size/byte = 24]
  store %hunt.logging.Logger.Logger* %.this_arg, %hunt.logging.Logger.Logger** %1, align 8
  store { i8*, %object.Throwable* (i8*)* } %__param_0_arg, { i8*, %object.Throwable* (i8*)* }* %2, align 8
  %__param_0 = getelementptr inbounds %nest.error.7, %nest.error.7* %.frame, i32 0, i32 0 ; [#uses = 1, type = { i8*, %object.Throwable* (i8*)* }*]
  %3 = bitcast { i8*, %object.Throwable* (i8*)* }* %__param_0 to i8* ; [#uses = 1]
  %4 = bitcast { i8*, %object.Throwable* (i8*)* }* %2 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false)
  %this = getelementptr inbounds %nest.error.7, %nest.error.7* %.frame, i32 0, i32 1 ; [#uses = 1, type = %hunt.logging.Logger.Logger**]
  %5 = bitcast %hunt.logging.Logger.Logger** %this to i8* ; [#uses = 1]
  %6 = bitcast %hunt.logging.Logger.Logger** %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 8, i1 false)
  %7 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** %1, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds %hunt.logging.Logger.Logger, %hunt.logging.Logger.Logger* %7, i32 0, i32 0 ; [#uses = 1, type = [11 x i8*]**]
  %9 = load [11 x i8*]*, [11 x i8*]** %8, align 8 ; [#uses = 1]
  %"doWrite@vtbl" = getelementptr inbounds [11 x i8*], [11 x i8*]* %9, i32 0, i32 9 ; [#uses = 1, type = i8**]
  %10 = load i8*, i8** %"doWrite@vtbl", align 8   ; [#uses = 1]
  %doWrite = bitcast i8* %10 to void (%hunt.logging.Logger.Logger*, i32, { i8*, { i64, i8* } (i8*)* })* ; [#uses = 1]
  %11 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** %1, align 8 ; [#uses = 1]
  %12 = bitcast %nest.error.7* %.frame to i8*     ; [#uses = 1]
  %13 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %12, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %13, { i64, i8* } (i8*)* @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226661637422292e63616c6c48616e646c6572TC6object9ThrowableZQQeMFLQzZ12__dgliteral4MFNaNiNfZQRd, 1 ; [#uses = 1]
  call void %doWrite(%hunt.logging.Logger.Logger* nonnull %11, i32 3, { i8*, { i64, i8* } (i8*)* } %.func)
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal %object.Throwable* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa4_66616374ZQCdFCQDy4http7routing14RoutingContextQqZ12__dgliteral5MFNaNbNiNfZC6object9Throwable(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.callHandler.5* ; [#uses = 1]
  %t = getelementptr inbounds %nest.callHandler.5, %nest.callHandler.5* %1, i32 0, i32 0 ; [#uses = 2, type = %object.Throwable**]
  %2 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 0]
  %3 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 1]
  ret %object.Throwable* %3
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226661637422292e63616c6c48616e646c6572TC6object9ThrowableZQQhFNbLQBaZ12__dgliteral3MFNaNiNfZQRf(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.logError.6* ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.logError.6, %nest.logError.6* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = %object.Throwable* (i8*)**]
  %.funcptr = load %object.Throwable* (i8*)*, %object.Throwable* (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call %object.Throwable* %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTC6object9ThrowableZQBeFQxZAya(%object.Throwable* %4) #0 ; [#uses = 1]
  %6 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 84, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.86, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 101, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.56, i32 0, i32 0) }, i64 1088, i32 3, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } zeroinitializer) #1 ; [#uses = 1]
  ret { i64, i8* } %6
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226661637422292e63616c6c48616e646c6572TC6object9ThrowableZQQhFNbLQBaZ12__dgliteral4MFNaNiNfZQRf(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.logError.6* ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.logError.6, %nest.logError.6* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = %object.Throwable* (i8*)**]
  %.funcptr = load %object.Throwable* (i8*)*, %object.Throwable* (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call %object.Throwable* %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTC6object9ThrowableZQBeFQxZAya(%object.Throwable* %4) #0 ; [#uses = 1]
  %6 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 84, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.86, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 101, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.56, i32 0, i32 0) }, i64 1088, i32 3, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } zeroinitializer) #1 ; [#uses = 1]
  ret { i64, i8* } %6
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka84_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226661637422292e63616c6c48616e646c6572TC6object9ThrowableZQQeMFLQzZ12__dgliteral4MFNaNiNfZQRd(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.error.7*   ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.error.7, %nest.error.7* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = %object.Throwable* (i8*)**]
  %.funcptr = load %object.Throwable* (i8*)*, %object.Throwable* (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call %object.Throwable* %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTC6object9ThrowableZQBeFQxZAya(%object.Throwable* %4) #0 ; [#uses = 1]
  %6 = bitcast i8* %.nest_arg to %nest.error.7*   ; [#uses = 1]
  %this = getelementptr inbounds %nest.error.7, %nest.error.7* %6, i32 0, i32 1 ; [#uses = 1, type = %hunt.logging.Logger.Logger**]
  %7 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** %this, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds %hunt.logging.Logger.Logger, %hunt.logging.Logger.Logger* %7, i32 0, i32 2 ; [#uses = 1, type = { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }*]
  %9 = load { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }* %8, align 8 ; [#uses = 1]
  %10 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 84, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.86, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 101, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.56, i32 0, i32 0) }, i64 1089, i32 3, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } %9) #1 ; [#uses = 1]
  ret { i64, i8* } %10
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka117_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6e22292e63616c6c48616e646c6572TC6object9ThrowableZQSwFNbLQBaZv({ i8*, %object.Throwable* (i8*)* } %__param_0_arg) #0 {
  %1 = alloca { i8*, %object.Throwable* (i8*)* }, align 8 ; [#uses = 2, size/byte = 16]
  %.frame = alloca %nest.logError.9, align 8      ; [#uses = 3, size/byte = 16]
  store { i8*, %object.Throwable* (i8*)* } %__param_0_arg, { i8*, %object.Throwable* (i8*)* }* %1, align 8
  %__param_0 = getelementptr inbounds %nest.logError.9, %nest.logError.9* %.frame, i32 0, i32 0 ; [#uses = 1, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = bitcast { i8*, %object.Throwable* (i8*)* }* %__param_0 to i8* ; [#uses = 1]
  %3 = bitcast { i8*, %object.Throwable* (i8*)* }* %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 16, i1 false)
  %4 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %5 = icmp eq %hunt.logging.Logger.Logger* %4, null ; [#uses = 1]
  br i1 %5, label %if, label %else

if:                                               ; preds = %0
  %6 = bitcast %nest.logError.9* %.frame to i8*   ; [#uses = 1]
  %7 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %6, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %7, { i64, i8* } (i8*)* @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka117_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6e22292e63616c6c48616e646c6572TC6object9ThrowableZQSwFNbLQBaZ12__dgliteral3MFNaNiNfZQTu, 1 ; [#uses = 1]
  call void @_D4hunt7logging6LoggerQh16writeFormatColorFNbEQBsQBqQBl8LogLevelLAyaZv(i32 3, { i8*, { i64, i8* } (i8*)* } %.func) #1
  br label %endif

else:                                             ; preds = %0
  %8 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %9 = getelementptr inbounds %hunt.logging.Logger.Logger, %hunt.logging.Logger.Logger* %8, i32 0, i32 0 ; [#uses = 1, type = [11 x i8*]**]
  %10 = load [11 x i8*]*, [11 x i8*]** %9, align 8 ; [#uses = 1]
  %"doWrite@vtbl" = getelementptr inbounds [11 x i8*], [11 x i8*]* %10, i32 0, i32 9 ; [#uses = 1, type = i8**]
  %11 = load i8*, i8** %"doWrite@vtbl", align 8   ; [#uses = 1]
  %doWrite = bitcast i8* %11 to void (%hunt.logging.Logger.Logger*, i32, { i8*, { i64, i8* } (i8*)* })* ; [#uses = 1]
  %12 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** @_D4hunt7logging6Logger8g_loggerCQBeQBcQxQz, align 8 ; [#uses = 1]
  %13 = bitcast %nest.logError.9* %.frame to i8*  ; [#uses = 1]
  %14 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %13, 0 ; [#uses = 1]
  %.func2 = insertvalue { i8*, { i64, i8* } (i8*)* } %14, { i64, i8* } (i8*)* @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka117_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6e22292e63616c6c48616e646c6572TC6object9ThrowableZQSwFNbLQBaZ12__dgliteral4MFNaNiNfZQTu, 1 ; [#uses = 1]
  call void %doWrite(%hunt.logging.Logger.Logger* nonnull %12, i32 3, { i8*, { i64, i8* } (i8*)* } %.func2)
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal %object.Throwable* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa37_6973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6eZQEsFCQGn4http7routing14RoutingContextQqZ12__dgliteral4MFNaNbNiNfZC6object9Throwable(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.callHandler.8* ; [#uses = 1]
  %t = getelementptr inbounds %nest.callHandler.8, %nest.callHandler.8* %1, i32 0, i32 0 ; [#uses = 2, type = %object.Throwable**]
  %2 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 0]
  %3 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 1]
  ret %object.Throwable* %3
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka117_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6e22292e63616c6c48616e646c6572TC6object9ThrowableZQStMFNbLQBbZv(%hunt.logging.Logger.Logger* nonnull %.this_arg, { i8*, %object.Throwable* (i8*)* } %__param_0_arg) #0 {
  %1 = alloca %hunt.logging.Logger.Logger*, align 8 ; [#uses = 4, size/byte = 8]
  %2 = alloca { i8*, %object.Throwable* (i8*)* }, align 8 ; [#uses = 2, size/byte = 16]
  %.frame = alloca %nest.error.10, align 8        ; [#uses = 3, size/byte = 24]
  store %hunt.logging.Logger.Logger* %.this_arg, %hunt.logging.Logger.Logger** %1, align 8
  store { i8*, %object.Throwable* (i8*)* } %__param_0_arg, { i8*, %object.Throwable* (i8*)* }* %2, align 8
  %__param_0 = getelementptr inbounds %nest.error.10, %nest.error.10* %.frame, i32 0, i32 0 ; [#uses = 1, type = { i8*, %object.Throwable* (i8*)* }*]
  %3 = bitcast { i8*, %object.Throwable* (i8*)* }* %__param_0 to i8* ; [#uses = 1]
  %4 = bitcast { i8*, %object.Throwable* (i8*)* }* %2 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 16, i1 false)
  %this = getelementptr inbounds %nest.error.10, %nest.error.10* %.frame, i32 0, i32 1 ; [#uses = 1, type = %hunt.logging.Logger.Logger**]
  %5 = bitcast %hunt.logging.Logger.Logger** %this to i8* ; [#uses = 1]
  %6 = bitcast %hunt.logging.Logger.Logger** %1 to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 8, i1 false)
  %7 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** %1, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds %hunt.logging.Logger.Logger, %hunt.logging.Logger.Logger* %7, i32 0, i32 0 ; [#uses = 1, type = [11 x i8*]**]
  %9 = load [11 x i8*]*, [11 x i8*]** %8, align 8 ; [#uses = 1]
  %"doWrite@vtbl" = getelementptr inbounds [11 x i8*], [11 x i8*]* %9, i32 0, i32 9 ; [#uses = 1, type = i8**]
  %10 = load i8*, i8** %"doWrite@vtbl", align 8   ; [#uses = 1]
  %doWrite = bitcast i8* %10 to void (%hunt.logging.Logger.Logger*, i32, { i8*, { i64, i8* } (i8*)* })* ; [#uses = 1]
  %11 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** %1, align 8 ; [#uses = 1]
  %12 = bitcast %nest.error.10* %.frame to i8*    ; [#uses = 1]
  %13 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %12, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %13, { i64, i8* } (i8*)* @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka117_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6e22292e63616c6c48616e646c6572TC6object9ThrowableZQStMFLQzZ12__dgliteral4MFNaNiNfZQTs, 1 ; [#uses = 1]
  call void %doWrite(%hunt.logging.Logger.Logger* nonnull %11, i32 3, { i8*, { i64, i8* } (i8*)* } %.func)
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal %object.Throwable* @_D4hunt9framework10controller10Controller__T11callHandlerTC3appQBu13ApiControllerQpVAyaa37_6973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6eZQEsFCQGn4http7routing14RoutingContextQqZ12__dgliteral5MFNaNbNiNfZC6object9Throwable(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.callHandler.8* ; [#uses = 1]
  %t = getelementptr inbounds %nest.callHandler.8, %nest.callHandler.8* %1, i32 0, i32 0 ; [#uses = 2, type = %object.Throwable**]
  %2 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 0]
  %3 = load %object.Throwable*, %object.Throwable** %t, align 8 ; [#uses = 1]
  ret %object.Throwable* %3
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka117_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6e22292e63616c6c48616e646c6572TC6object9ThrowableZQSwFNbLQBaZ12__dgliteral3MFNaNiNfZQTu(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.logError.9* ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.logError.9, %nest.logError.9* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = %object.Throwable* (i8*)**]
  %.funcptr = load %object.Throwable* (i8*)*, %object.Throwable* (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call %object.Throwable* %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTC6object9ThrowableZQBeFQxZAya(%object.Throwable* %4) #0 ; [#uses = 1]
  %6 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 117, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.87, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 101, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.56, i32 0, i32 0) }, i64 1088, i32 3, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } zeroinitializer) #1 ; [#uses = 1]
  ret { i64, i8* } %6
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6Logger__T8logErrorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vmi1088VQIka117_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6e22292e63616c6c48616e646c6572TC6object9ThrowableZQSwFNbLQBaZ12__dgliteral4MFNaNiNfZQTu(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.logError.9* ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.logError.9, %nest.logError.9* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = %object.Throwable* (i8*)**]
  %.funcptr = load %object.Throwable* (i8*)*, %object.Throwable* (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call %object.Throwable* %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTC6object9ThrowableZQBeFQxZAya(%object.Throwable* %4) #0 ; [#uses = 1]
  %6 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 117, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.87, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 101, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.56, i32 0, i32 0) }, i64 1088, i32 3, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } zeroinitializer) #1 ; [#uses = 1]
  ret { i64, i8* } %6
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D4hunt7logging6LoggerQh__T5errorVAyaa101_2e2e2f2e2e2f2e6475622f7061636b616765732f68756e742d6672616d65776f726b2f332e342e362f68756e742d6672616d65776f726b2f736f757263652f68756e742f6672616d65776f726b2f636f6e74726f6c6c65722f436f6e74726f6c6c65722e64Vii1089VQIka117_68756e742e6672616d65776f726b2e636f6e74726f6c6c65722e436f6e74726f6c6c65722e63616c6c48616e646c65722128417069436f6e74726f6c6c65722c20226973536b69707065644d6964646c6577617265496e436f6e74726f6c6c6572416374696f6e22292e63616c6c48616e646c6572TC6object9ThrowableZQStMFLQzZ12__dgliteral4MFNaNiNfZQTs(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.error.10*  ; [#uses = 1]
  %__param_0 = getelementptr inbounds %nest.error.10, %nest.error.10* %1, i32 0, i32 0 ; [#uses = 2, type = { i8*, %object.Throwable* (i8*)* }*]
  %2 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 1 ; [#uses = 1, type = %object.Throwable* (i8*)**]
  %.funcptr = load %object.Throwable* (i8*)*, %object.Throwable* (i8*)** %2, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds { i8*, %object.Throwable* (i8*)* }, { i8*, %object.Throwable* (i8*)* }* %__param_0, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %3, align 8              ; [#uses = 1]
  %4 = call %object.Throwable* %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  %5 = call { i64, i8* } @_D4hunt7logging6LoggerQh__T9logFormatTC6object9ThrowableZQBeFQxZAya(%object.Throwable* %4) #0 ; [#uses = 1]
  %6 = bitcast i8* %.nest_arg to %nest.error.10*  ; [#uses = 1]
  %this = getelementptr inbounds %nest.error.10, %nest.error.10* %6, i32 0, i32 1 ; [#uses = 1, type = %hunt.logging.Logger.Logger**]
  %7 = load %hunt.logging.Logger.Logger*, %hunt.logging.Logger.Logger** %this, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds %hunt.logging.Logger.Logger, %hunt.logging.Logger.Logger* %7, i32 0, i32 2 ; [#uses = 1, type = { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }*]
  %9 = load { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* }* %8, align 8 ; [#uses = 1]
  %10 = call { i64, i8* } @_D4hunt7logging6LoggerQh8toFormatFAyaQdQfmEQBpQBnQBi8LogLevelDFQBdQBgQBjQBmQBpQBsmZQBxZQCb({ i64, i8* } { i64 117, i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.87, i32 0, i32 0) }, { i64, i8* } %5, { i64, i8* } { i64 101, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.56, i32 0, i32 0) }, i64 1089, i32 3, { i8*, { i64, i8* } (i8*, { i64, i8* }, { i64, i8* }, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, { i64, i8* }*, i64)* } %9) #1 ; [#uses = 1]
  ret { i64, i8* } %10
}

; [#uses = 1]
declare %std.datetime.systime.SysTime* @_D3std8datetime7systime7SysTime6__ctorMFNaNbNcNjNlNflNkMyCQCeQCd8timezone8TimeZoneZSQDeQDdQCxQCs(%std.datetime.systime.SysTime* nonnull returned, i64, %std.datetime.timezone.TimeZone*) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i64 @_D3std8datetime7systime5Clock__T11currStdTimeVE4core4time9ClockTypei0ZQBmFNbNdNiNeZl() #0 {
  %ts = alloca %core.sys.posix.time.timespec, align 8 ; [#uses = 3, size/byte = 16]
  %error = alloca i32, align 4                    ; [#uses = 1, size/byte = 4]
  %1 = call i32 @clock_gettime(i32 0, %core.sys.posix.time.timespec* %ts) #1 ; [#uses = 1]
  store i32 %1, i32* %error, align 4
  %2 = getelementptr inbounds %core.sys.posix.time.timespec, %core.sys.posix.time.timespec* %ts, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %3 = load i64, i64* %2, align 8                 ; [#uses = 1]
  %4 = call i64 @_D4core4time__T7convertVAyaa7_7365636f6e6473VQva6_686e73656373ZQBwFNaNbNiNflZl(i64 %3) #1 ; [#uses = 1]
  %5 = getelementptr inbounds %core.sys.posix.time.timespec, %core.sys.posix.time.timespec* %ts, i32 0, i32 1 ; [#uses = 1, type = i64*]
  %6 = load i64, i64* %5, align 8                 ; [#uses = 1]
  %7 = sdiv i64 %6, 100                           ; [#uses = 1]
  %8 = add i64 %4, %7                             ; [#uses = 1]
  %9 = add i64 %8, 621355968000000000             ; [#uses = 1]
  ret i64 %9
}

; [#uses = 1]
declare i32 @clock_gettime(i32, %core.sys.posix.time.timespec*) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i64 @_D4core4time__T7convertVAyaa7_7365636f6e6473VQva6_686e73656373ZQBwFNaNbNiNflZl(i64 %value_arg) #0 {
  %value = alloca i64, align 8                    ; [#uses = 2, size/byte = 8]
  store i64 %value_arg, i64* %value, align 8
  %1 = load i64, i64* %value, align 8             ; [#uses = 1]
  %2 = mul i64 10000000, %1                       ; [#uses = 1]
  %3 = sdiv i64 %2, 1                             ; [#uses = 1]
  ret i64 %3
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std9exception__T7enforceHTCQBc4json13JSONExceptionZ__TQBmTbZQBsFNaNfbLAxaAyamZb(i1 zeroext %value_arg, { i8*, { i64, i8* } (i8*)* } %msg_arg, { i64, i8* } %file_arg, i64 %line_arg) #0 {
  %value = alloca i8, align 1                     ; [#uses = 4, size/byte = 1]
  %msg = alloca { i8*, { i64, i8* } (i8*)* }, align 8 ; [#uses = 3, size/byte = 16]
  %file = alloca { i64, i8* }, align 8            ; [#uses = 2, size/byte = 16]
  %line = alloca i64, align 8                     ; [#uses = 2, size/byte = 8]
  %1 = zext i1 %value_arg to i8                   ; [#uses = 1]
  store i8 %1, i8* %value, align 1
  store { i8*, { i64, i8* } (i8*)* } %msg_arg, { i8*, { i64, i8* } (i8*)* }* %msg, align 8
  store { i64, i8* } %file_arg, { i64, i8* }* %file, align 8
  store i64 %line_arg, i64* %line, align 8
  %2 = load i8, i8* %value, align 1               ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  %4 = icmp eq i1 %3, false                       ; [#uses = 1]
  br i1 %4, label %if, label %endif

if:                                               ; preds = %0
  %5 = load { i64, i8* }, { i64, i8* }* %file, align 8 ; [#uses = 1]
  %6 = load i64, i64* %line, align 8              ; [#uses = 1]
  %7 = getelementptr inbounds { i8*, { i64, i8* } (i8*)* }, { i8*, { i64, i8* } (i8*)* }* %msg, i32 0, i32 1 ; [#uses = 1, type = { i64, i8* } (i8*)**]
  %.funcptr = load { i64, i8* } (i8*)*, { i64, i8* } (i8*)** %7, align 8 ; [#uses = 1]
  %8 = getelementptr inbounds { i8*, { i64, i8* } (i8*)* }, { i8*, { i64, i8* } (i8*)* }* %msg, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %8, align 8              ; [#uses = 1]
  %9 = call { i64, i8* } %.funcptr(i8* nonnull %.ptr) ; [#uses = 1]
  call void @_D3std9exception__T7bailOutHTCQBc4json13JSONExceptionZQBjFNaNfAyamMAxaZNn({ i64, i8* } %5, i64 %6, { i64, i8* } %9) #12
  br label %endif

endif:                                            ; preds = %if, %0
  %10 = load i8, i8* %value, align 1              ; [#uses = 1]
  %11 = trunc i8 %10 to i1                        ; [#uses = 0]
  %12 = load i8, i8* %value, align 1              ; [#uses = 1]
  %13 = trunc i8 %12 to i1                        ; [#uses = 1]
  ret i1 %13
}

; [#uses = 6]
declare signext i8 @_D3std4json9JSONValue4typeMxFNaNbNdNiNfZEQBnQBm8JSONType(%std.json.JSONValue* nonnull) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std4json9JSONValue__T13opIndexAssignTAyaZQuMFKQjQlZ12__dgliteral3MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 32, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.88, i32 0, i32 0) }
}

; [#uses = 2]
declare i8* @_D3std4json9JSONValue11objectNoRefMNgFNaNdNeZNgHAyaSQByQBxQBv(%std.json.JSONValue* nonnull) #1

; [#uses = 2]
; Function Attrs: cold noreturn uwtable
declare void @_d_arraybounds({ i64, i8* }, i32) #5

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr void @_D3std4json9JSONValue__T8opAssignTAyaZQoMFNaNbNiNfQqZv(%std.json.JSONValue* nonnull %.this_arg, { i64, i8* } %arg_arg) #0 {
  %arg = alloca { i64, i8* }, align 8             ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %arg_arg, { i64, i8* }* %arg, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %arg, align 8 ; [#uses = 1]
  call void @_D3std4json9JSONValue__T6assignTAyaZQmMFNaNbNiNfQqZv(%std.json.JSONValue* nonnull %.this_arg, { i64, i8* } %1) #1
  ret void
}

; [#uses = 1]
declare zeroext i1 @_D3std4json9JSONValue8opEqualsMxFNaNbNiNeKxSQBqQBpQBnZb(%std.json.JSONValue* nonnull, %std.json.JSONValue* dereferenceable(24)) #1

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr %std.json.JSONValue* @_D3std4json9JSONValue__T6__ctorTAyaZQmMFNaNbNcNiNfQsZSQCaQBzQBx(%std.json.JSONValue* nonnull returned %.this_arg, { i64, i8* } %arg_arg) #0 {
  %arg = alloca { i64, i8* }, align 8             ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %arg_arg, { i64, i8* }* %arg, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %arg, align 8 ; [#uses = 1]
  call void @_D3std4json9JSONValue__T6assignTAyaZQmMFNaNbNiNfQqZv(%std.json.JSONValue* nonnull %.this_arg, { i64, i8* } %1) #0
  ret %std.json.JSONValue* %.this_arg
}

; [#uses = 2]
declare i8* @_D3std4json9JSONValue6objectMFNaNbNdNiNeNkMHAyaSQBuQBtQBrZQp(%std.json.JSONValue* nonnull, i8*) #1

; [#uses = 1]
; Function Attrs: noreturn uwtable
define weak_odr void @_D3std9exception__T7bailOutHTCQBc4json13JSONExceptionZQBjFNaNfAyamMAxaZNn({ i64, i8* } %file_arg, i64 %line_arg, { i64, i8* } %msg_arg) #4 {
  %file = alloca { i64, i8* }, align 8            ; [#uses = 2, size/byte = 16]
  %line = alloca i64, align 8                     ; [#uses = 2, size/byte = 8]
  %msg = alloca { i64, i8* }, align 8             ; [#uses = 3, size/byte = 16]
  %condtmp = alloca { i64, i8* }*, align 8        ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp = alloca { i64, i8* }, align 8  ; [#uses = 3, size/byte = 16]
  %.makelvaluetmp2 = alloca { i64, i8* }, align 8 ; [#uses = 3, size/byte = 16]
  store { i64, i8* } %file_arg, { i64, i8* }* %file, align 8
  store i64 %line_arg, i64* %line, align 8
  store { i64, i8* } %msg_arg, { i64, i8* }* %msg, align 8
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std4json13JSONException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %std.json.JSONException* ; [#uses = 5]
  %vtbl = getelementptr inbounds %std.json.JSONException, %std.json.JSONException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std4json13JSONException6__vtblZ, [10 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %std.json.JSONException, %std.json.JSONException* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %1 = getelementptr inbounds %std.json.JSONException, %std.json.JSONException* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %2 = getelementptr inbounds %std.json.JSONException, %std.json.JSONException* @_D3std4json13JSONException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %3 = bitcast { i64, i8* }* %1 to i8*            ; [#uses = 1]
  %4 = bitcast { i64, i8* }* %2 to i8*            ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %4, i64 68, i1 false)
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %msg, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %5, align 8              ; [#uses = 1]
  %6 = icmp ne i8* %.ptr, null                    ; [#uses = 1]
  br i1 %6, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  %7 = load { i64, i8* }, { i64, i8* }* %msg, align 8 ; [#uses = 1]
  %8 = call { i64, i8* } @_D6object__T4idupTxaZQjFNaNbNdNfAxaZAya({ i64, i8* } %7) #0 ; [#uses = 2]
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = extractvalue { i64, i8* } %8, 0         ; [#uses = 1]
  store i64 %.len, i64* %9, align 8
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr1 = extractvalue { i64, i8* } %8, 1        ; [#uses = 1]
  store i8* %.ptr1, i8** %10, align 8
  store { i64, i8* }* %.makelvaluetmp, { i64, i8* }** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp2, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 18, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp2, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i32 0, i32 0), i8** %12, align 8
  store { i64, i8* }* %.makelvaluetmp2, { i64, i8* }** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %13 = load { i64, i8* }*, { i64, i8* }** %condtmp, align 8 ; [#uses = 1]
  %14 = load { i64, i8* }, { i64, i8* }* %13, align 8 ; [#uses = 1]
  %15 = load { i64, i8* }, { i64, i8* }* %file, align 8 ; [#uses = 1]
  %16 = load i64, i64* %line, align 8             ; [#uses = 1]
  %17 = call %std.json.JSONException* @_D3std4json13JSONException6__ctorMFNaNbNfAyaQdmZCQBvQBuQBs(%std.json.JSONException* nonnull returned %.newclass_gc, { i64, i8* } %14, { i64, i8* } %15, i64 %16) #1 ; [#uses = 0]
  %18 = bitcast %std.json.JSONException* %.newclass_gc to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %18) #5
  unreachable
}

; [#uses = 1]
declare %std.json.JSONException* @_D3std4json13JSONException6__ctorMFNaNbNfAyaQdmZCQBvQBuQBs(%std.json.JSONException* nonnull returned, { i64, i8* }, { i64, i8* }, i64) #1

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr void @_D3std4json9JSONValue__T6assignTAyaZQmMFNaNbNiNfQqZv(%std.json.JSONValue* nonnull %.this_arg, { i64, i8* } %arg_arg) #0 {
  %arg = alloca { i64, i8* }, align 8             ; [#uses = 3, size/byte = 16]
  %.frame = alloca %nest.assign, align 8          ; [#uses = 3, size/byte = 24]
  store { i64, i8* } %arg_arg, { i64, i8* }* %arg, align 8
  %this = getelementptr inbounds %nest.assign, %nest.assign* %.frame, i32 0, i32 0 ; [#uses = 1, type = %std.json.JSONValue**]
  store %std.json.JSONValue* %.this_arg, %std.json.JSONValue** %this, align 8
  %t = getelementptr inbounds %nest.assign, %nest.assign* %.frame, i32 0, i32 1 ; [#uses = 2, type = { i64, i8* }*]
  %1 = getelementptr inbounds %std.json.JSONValue, %std.json.JSONValue* %.this_arg, i32 0, i32 1 ; [#uses = 1, type = i8*]
  store i8 1, i8* %1, align 1
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %t, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %arg, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %3, align 8              ; [#uses = 1]
  store i64 %.len, i64* %2, align 8
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %t, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %arg, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %5, align 8              ; [#uses = 1]
  store i8* %.ptr, i8** %4, align 8
  %6 = bitcast %nest.assign* %.frame to i8*       ; [#uses = 1]
  %7 = insertvalue { i8*, void (i8*)* } undef, i8* %6, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, void (i8*)* } %7, void (i8*)* @_D3std4json9JSONValue__T6assignTAyaZQmMFQiZ9__lambda3MFNaNbNiNeZv, 1 ; [#uses = 2]
  %.funcptr = extractvalue { i8*, void (i8*)* } %.func, 1 ; [#uses = 1]
  %.ptr1 = extractvalue { i8*, void (i8*)* } %.func, 0 ; [#uses = 1]
  call void %.funcptr(i8* nonnull %.ptr1)
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal void @_D3std4json9JSONValue__T6assignTAyaZQmMFQiZ9__lambda3MFNaNbNiNeZv(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.assign*    ; [#uses = 1]
  %this = getelementptr inbounds %nest.assign, %nest.assign* %1, i32 0, i32 0 ; [#uses = 1, type = %std.json.JSONValue**]
  %2 = load %std.json.JSONValue*, %std.json.JSONValue** %this, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds %std.json.JSONValue, %std.json.JSONValue* %2, i32 0, i32 0 ; [#uses = 1, type = %std.json.JSONValue.Store*]
  %4 = getelementptr inbounds %std.json.JSONValue.Store, %std.json.JSONValue.Store* %3, i32 0, i32 0 ; [#uses = 2, type = { i64, i8* }*]
  %5 = bitcast i8* %.nest_arg to %nest.assign*    ; [#uses = 1]
  %t = getelementptr inbounds %nest.assign, %nest.assign* %5, i32 0, i32 1 ; [#uses = 2, type = { i64, i8* }*]
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %4, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %t, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %7, align 8              ; [#uses = 1]
  store i64 %.len, i64* %6, align 8
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %4, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %t, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %9, align 8              ; [#uses = 1]
  store i8* %.ptr, i8** %8, align 8
  ret void
}

; [#uses = 0]
declare %hunt.framework.http.JsonResponse.JsonResponse* @_D4hunt9framework4http12JsonResponseQo7setJsonMFS3std4json9JSONValueZCQCqQCoQChQCfQCi(%hunt.framework.http.JsonResponse.JsonResponse* nonnull, %std.json.JSONValue* byval(%std.json.JSONValue) align 8) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt13serialization14JsonSerializerQq__T6toJsonVSQByQBw6Common20SerializationOptionsS7i0i1i0i0i1i1N1TS3std4json9JSONValueZQDeFNaNbNiNfQBhZQBl(%std.json.JSONValue* noalias sret(%std.json.JSONValue) align 8 %.sret_arg, %std.json.JSONValue* byval(%std.json.JSONValue) align 8 %value) #0 {
  %serializationStates = alloca i8*, align 8      ; [#uses = 2, size/byte = 8]
  %.lval_copy_for_byval = alloca %std.json.JSONValue, align 8 ; [#uses = 2, size/byte = 24]
  store i8* null, i8** %serializationStates, align 8
  %1 = bitcast %std.json.JSONValue* %.lval_copy_for_byval to i8* ; [#uses = 1]
  %2 = bitcast %std.json.JSONValue* %value to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false)
  call void @_D4hunt13serialization14JsonSerializerQq__T10toJsonImplVSQCdQCb6Common20SerializationOptionsS7i0i1i0i0i1i1N1TS3std4json9JSONValueZQDjFNaNbNiNfQBhKHmbZQBp(%std.json.JSONValue* noalias sret(%std.json.JSONValue) align 8 %.sret_arg, %std.json.JSONValue* byval(%std.json.JSONValue) align 8 %.lval_copy_for_byval, i8** dereferenceable(8) %serializationStates) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D4hunt13serialization14JsonSerializerQq__T10toJsonImplVSQCdQCb6Common20SerializationOptionsS7i0i1i0i0i1i1N1TS3std4json9JSONValueZQDjFNaNbNiNfQBhKHmbZQBp(%std.json.JSONValue* noalias sret(%std.json.JSONValue) align 8 %.sret_arg, %std.json.JSONValue* byval(%std.json.JSONValue) align 8 %value, i8** dereferenceable(8) %serializationStates) #0 {
  %1 = bitcast %std.json.JSONValue* %.sret_arg to i8* ; [#uses = 1]
  %2 = bitcast %std.json.JSONValue* %value to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 24, i1 false)
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D3std4conv__T6toImplTiTAyaZQoFNaNfQlZi({ i64, i8* } %value_arg) #0 personality i32 (i32, i32, i64, i8*, i8*)* @_d_eh_personality {
  %value = alloca { i64, i8* }, align 8           ; [#uses = 4, size/byte = 16]
  %__os2039 = alloca i8, align 1                  ; [#uses = 3, size/byte = 1]
  %eh.ptr = alloca i8*, align 8                   ; [#uses = 4, size/byte = 8]
  %__o2040 = alloca %object.Throwable*, align 8   ; [#uses = 3, size/byte = 8]
  %eh.selector = alloca i32, align 4              ; [#uses = 3, size/byte = 4]
  %return.slot = alloca i32, align 4              ; [#uses = 2, size/byte = 4]
  %branchsel.finally = alloca i32, align 4        ; [#uses = 5, size/byte = 4]
  store { i64, i8* } %value_arg, { i64, i8* }* %value, align 8
  store i8 0, i8* %__os2039, align 1
  %1 = invoke i32 @_D3std4conv__T5parseTiTAyaVEQBa8typecons__T4FlagVQBaa7_646f436f756e74ZQBbi0ZQCkFNaNfMKQClZi({ i64, i8* }* dereferenceable(16) %value) #0
          to label %postinvoke5 unwind label %landingPad4 ; [#uses = 1]

postinvoke5:                                      ; preds = %0
  store i32 %1, i32* %return.slot, align 4
  store i32 1, i32* %branchsel.finally, align 4
  br label %finally

return:                                           ; preds = %endif
  %2 = load i32, i32* %return.slot, align 4       ; [#uses = 1]
  ret i32 %2

dummy.afterreturn:                                ; No predecessors!
  br label %try.success.or.caught

catch.object.Throwable:                           ; preds = %landingPad4
  %3 = load i8*, i8** %eh.ptr, align 8            ; [#uses = 1]
  %4 = call %object.Throwable* @_d_eh_enter_catch(i8* %3) ; [#uses = 1]
  store %object.Throwable* null, %object.Throwable** %__o2040, align 8
  store %object.Throwable* %4, %object.Throwable** %__o2040, align 8
  store i8 1, i8* %__os2039, align 1
  %5 = load %object.Throwable*, %object.Throwable** %__o2040, align 8 ; [#uses = 1]
  invoke void @_d_throw_exception(%object.Throwable* %5) #5
          to label %postinvoke unwind label %landingPad

postinvoke:                                       ; preds = %catch.object.Throwable
  unreachable

afterthrow3:                                      ; No predecessors!
  br label %try.success.or.caught

try.success.or.caught:                            ; preds = %dummy.afterreturn, %afterthrow3
  store i32 2, i32* %branchsel.finally, align 4
  br label %finally

finally:                                          ; preds = %try.success.or.caught, %postinvoke5, %landingPad4.mismatch, %landingPad
  %6 = load i8, i8* %__os2039, align 1            ; [#uses = 1]
  %7 = trunc i8 %6 to i1                          ; [#uses = 1]
  %8 = icmp eq i1 %7, false                       ; [#uses = 1]
  br i1 %8, label %if, label %endif

if:                                               ; preds = %finally
  %9 = call zeroext i1 @_D3std5range10primitives__T5emptyTAyaZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %value) #0 ; [#uses = 1]
  %10 = icmp eq i1 %9, false                      ; [#uses = 1]
  br i1 %10, label %if1, label %endif2

if1:                                              ; preds = %if
  %11 = load { i64, i8* }, { i64, i8* }* %value, align 8 ; [#uses = 1]
  %12 = call %std.conv.ConvException* @_D3std4conv__T9convErrorTAyaTiZQrFNaNfQnQpmZCQBrQBq13ConvException({ i64, i8* } %11, { i64, i8* } { i64 50, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.92, i32 0, i32 0) }, i64 1982) #0 ; [#uses = 1]
  %13 = bitcast %std.conv.ConvException* %12 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %13) #5
  unreachable

afterthrow:                                       ; No predecessors!
  br label %endif2

endif2:                                           ; preds = %afterthrow, %if
  br label %endif

endif:                                            ; preds = %endif2, %finally
  %14 = load i32, i32* %branchsel.finally, align 4 ; [#uses = 1]
  switch i32 %14, label %eh.resume [
    i32 1, label %return
    i32 2, label %try.success
  ]

try.success:                                      ; preds = %endif
  ret i32 undef

landingPad:                                       ; preds = %catch.object.Throwable
  %15 = landingpad { i8*, i32 }
          cleanup                                 ; [#uses = 2]
  %16 = extractvalue { i8*, i32 } %15, 0          ; [#uses = 1]
  store i8* %16, i8** %eh.ptr, align 8
  %17 = extractvalue { i8*, i32 } %15, 1          ; [#uses = 1]
  store i32 %17, i32* %eh.selector, align 4
  store i32 0, i32* %branchsel.finally, align 4
  br label %finally

eh.resume:                                        ; preds = %endif
  %18 = load i8*, i8** %eh.ptr, align 8           ; [#uses = 1]
  call void @_Unwind_Resume(i8* %18)
  unreachable

landingPad4:                                      ; preds = %0
  %19 = landingpad { i8*, i32 }
          cleanup
          catch %object.TypeInfo_Class* @_D6object9Throwable7__ClassZ ; [#uses = 2]
  %20 = extractvalue { i8*, i32 } %19, 0          ; [#uses = 1]
  store i8* %20, i8** %eh.ptr, align 8
  %21 = extractvalue { i8*, i32 } %19, 1          ; [#uses = 1]
  store i32 %21, i32* %eh.selector, align 4
  %22 = call i32 @llvm.eh.typeid.for(i8* bitcast (%object.TypeInfo_Class* @_D6object9Throwable7__ClassZ to i8*)) ; [#uses = 1]
  %23 = load i32, i32* %eh.selector, align 4      ; [#uses = 1]
  %24 = icmp eq i32 %23, %22                      ; [#uses = 1]
  br i1 %24, label %catch.object.Throwable, label %landingPad4.mismatch

landingPad4.mismatch:                             ; preds = %landingPad4
  store i32 0, i32* %branchsel.finally, align 4
  br label %finally
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i32 @_D3std4conv__T5parseTiTAyaVEQBa8typecons__T4FlagVQBaa7_646f436f756e74ZQBbi0ZQCkFNaNfMKQClZi({ i64, i8* }* dereferenceable(16) %s) #0 {
  %sign = alloca i8, align 1                      ; [#uses = 4, size/byte = 1]
  %c = alloca i32, align 4                        ; [#uses = 12, size/byte = 4]
  %source = alloca { i64, i8* }, align 8          ; [#uses = 14, size/byte = 16]
  %count = alloca i64, align 8                    ; [#uses = 7, size/byte = 8]
  %v = alloca i32, align 4                        ; [#uses = 10, size/byte = 4]
  store i8 0, i8* %sign, align 1
  store i32 0, i32* %c, align 4
  %1 = load { i64, i8* }, { i64, i8* }* %s, align 8 ; [#uses = 1]
  %2 = call { i64, i8* } @_D3std6string__T14representationTyaZQuFNaNbNiNfAyaZAyh({ i64, i8* } %1) #1 ; [#uses = 2]
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %source, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = extractvalue { i64, i8* } %2, 0         ; [#uses = 1]
  store i64 %.len, i64* %3, align 8
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %source, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = extractvalue { i64, i8* } %2, 1         ; [#uses = 1]
  store i8* %.ptr, i8** %4, align 8
  store i64 0, i64* %count, align 8
  %5 = call zeroext i1 @_D3std5range10primitives__T5emptyTAyhZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %source) #1 ; [#uses = 1]
  br i1 %5, label %if, label %endif

if:                                               ; preds = %0
  br label %label.Lerr

aftergoto:                                        ; No predecessors!
  br label %endif

endif:                                            ; preds = %aftergoto, %0
  %6 = load { i64, i8* }, { i64, i8* }* %source, align 8 ; [#uses = 1]
  %7 = call i8* @_D3std5range10primitives__T5frontThZQjFNaNbNcNdNiNfNkMANghZNgh({ i64, i8* } %6) #1 ; [#uses = 1]
  %8 = load i8, i8* %7, align 1                   ; [#uses = 1]
  %9 = zext i8 %8 to i32                          ; [#uses = 1]
  store i32 %9, i32* %c, align 4
  %10 = load i32, i32* %c, align 4                ; [#uses = 1]
  switch i32 %10, label %defaultcntr [
    i32 45, label %casecntr
    i32 43, label %casecntr6
  ]

switchbody:                                       ; No predecessors!
  br label %case

casecntr:                                         ; preds = %endif
  br label %case

case:                                             ; preds = %casecntr, %switchbody
  store i8 1, i8* %sign, align 1
  br label %goto_case

aftergotocase:                                    ; No predecessors!
  br label %goto_case

casecntr6:                                        ; preds = %endif
  br label %goto_case

goto_case:                                        ; preds = %casecntr6, %aftergotocase, %case
  %11 = load i64, i64* %count, align 8            ; [#uses = 1]
  %12 = add i64 %11, 1                            ; [#uses = 1]
  store i64 %12, i64* %count, align 8
  call void @_D3std5range10primitives__T8popFrontThZQmFNaNbNiNfMKANghZv({ i64, i8* }* dereferenceable(16) %source) #1
  %13 = call zeroext i1 @_D3std5range10primitives__T5emptyTAyhZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %source) #1 ; [#uses = 1]
  br i1 %13, label %if1, label %endif2

if1:                                              ; preds = %goto_case
  br label %label.Lerr

aftergoto4:                                       ; No predecessors!
  br label %endif2

endif2:                                           ; preds = %aftergoto4, %goto_case
  %14 = load { i64, i8* }, { i64, i8* }* %source, align 8 ; [#uses = 1]
  %15 = call i8* @_D3std5range10primitives__T5frontThZQjFNaNbNcNdNiNfNkMANghZNgh({ i64, i8* } %14) #1 ; [#uses = 1]
  %16 = load i8, i8* %15, align 1                 ; [#uses = 1]
  %17 = zext i8 %16 to i32                        ; [#uses = 1]
  store i32 %17, i32* %c, align 4
  br label %switchend

afterbreak:                                       ; No predecessors!
  br label %default

defaultcntr:                                      ; preds = %endif
  br label %default

default:                                          ; preds = %defaultcntr, %afterbreak
  br label %switchend

afterbreak5:                                      ; No predecessors!
  br label %switchend

switchend:                                        ; preds = %afterbreak5, %default, %endif2
  %18 = load i32, i32* %c, align 4                ; [#uses = 1]
  %19 = sub i32 %18, 48                           ; [#uses = 1]
  store i32 %19, i32* %c, align 4
  %20 = load i32, i32* %c, align 4                ; [#uses = 1]
  %21 = icmp ule i32 %20, 9                       ; [#uses = 1]
  br i1 %21, label %if7, label %endif8

if7:                                              ; preds = %switchend
  %22 = load i32, i32* %c, align 4                ; [#uses = 1]
  store i32 %22, i32* %v, align 4
  %23 = load i64, i64* %count, align 8            ; [#uses = 1]
  %24 = add i64 %23, 1                            ; [#uses = 1]
  store i64 %24, i64* %count, align 8
  call void @_D3std5range10primitives__T8popFrontThZQmFNaNbNiNfMKANghZv({ i64, i8* }* dereferenceable(16) %source) #1
  br label %forcond

forcond:                                          ; preds = %forinc, %if7
  %25 = call zeroext i1 @_D3std5range10primitives__T5emptyTAyhZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %source) #1 ; [#uses = 1]
  %26 = icmp eq i1 %25, false                     ; [#uses = 1]
  br i1 %26, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %27 = load { i64, i8* }, { i64, i8* }* %source, align 8 ; [#uses = 1]
  %28 = call i8* @_D3std5range10primitives__T5frontThZQjFNaNbNcNdNiNfNkMANghZNgh({ i64, i8* } %27) #1 ; [#uses = 1]
  %29 = load i8, i8* %28, align 1                 ; [#uses = 1]
  %30 = zext i8 %29 to i32                        ; [#uses = 1]
  %31 = sub i32 %30, 48                           ; [#uses = 1]
  store i32 %31, i32* %c, align 4
  %32 = load i32, i32* %c, align 4                ; [#uses = 1]
  %33 = icmp ugt i32 %32, 9                       ; [#uses = 1]
  br i1 %33, label %if9, label %endif10

if9:                                              ; preds = %forbody
  br label %endfor

afterbreak11:                                     ; No predecessors!
  br label %endif10

endif10:                                          ; preds = %afterbreak11, %forbody
  %34 = load i32, i32* %v, align 4                ; [#uses = 1]
  %35 = icmp sge i32 %34, 0                       ; [#uses = 1]
  br i1 %35, label %andand, label %andandend

andand:                                           ; preds = %endif10
  %36 = load i32, i32* %v, align 4                ; [#uses = 1]
  %37 = icmp slt i32 %36, 214748364               ; [#uses = 1]
  br i1 %37, label %ororend, label %oror

oror:                                             ; preds = %andand
  %38 = load i32, i32* %v, align 4                ; [#uses = 1]
  %39 = icmp eq i32 %38, 214748364                ; [#uses = 1]
  br i1 %39, label %andand12, label %andandend13

andand12:                                         ; preds = %oror
  %40 = load i8, i8* %sign, align 1               ; [#uses = 1]
  %41 = trunc i8 %40 to i1                        ; [#uses = 1]
  %42 = zext i1 %41 to i32                        ; [#uses = 1]
  %43 = add i32 7, %42                            ; [#uses = 1]
  %44 = load i32, i32* %c, align 4                ; [#uses = 1]
  %45 = icmp ule i32 %44, %43                     ; [#uses = 1]
  br label %andandend13

andandend13:                                      ; preds = %andand12, %oror
  %andandval = phi i1 [ false, %oror ], [ %45, %andand12 ] ; [#uses = 1, type = i1]
  br label %ororend

ororend:                                          ; preds = %andandend13, %andand
  %ororval = phi i1 [ true, %andand ], [ %andandval, %andandend13 ] ; [#uses = 1, type = i1]
  br label %andandend

andandend:                                        ; preds = %ororend, %endif10
  %andandval14 = phi i1 [ false, %endif10 ], [ %ororval, %ororend ] ; [#uses = 1, type = i1]
  br i1 %andandval14, label %if15, label %else

if15:                                             ; preds = %andandend
  %46 = load i32, i32* %v, align 4                ; [#uses = 1]
  %47 = mul i32 %46, 10                           ; [#uses = 1]
  %48 = load i32, i32* %c, align 4                ; [#uses = 1]
  %49 = add i32 %47, %48                          ; [#uses = 1]
  store i32 %49, i32* %v, align 4
  %50 = load i64, i64* %count, align 8            ; [#uses = 1]
  %51 = add i64 %50, 1                            ; [#uses = 1]
  store i64 %51, i64* %count, align 8
  call void @_D3std5range10primitives__T8popFrontThZQmFNaNbNiNfMKANghZv({ i64, i8* }* dereferenceable(16) %source) #1
  br label %endif16

else:                                             ; preds = %andandend
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std4conv21ConvOverflowException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %std.conv.ConvOverflowException* ; [#uses = 5]
  %vtbl = getelementptr inbounds %std.conv.ConvOverflowException, %std.conv.ConvOverflowException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std4conv21ConvOverflowException6__vtblZ, [10 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %std.conv.ConvOverflowException, %std.conv.ConvOverflowException* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %52 = getelementptr inbounds %std.conv.ConvOverflowException, %std.conv.ConvOverflowException* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %53 = getelementptr inbounds %std.conv.ConvOverflowException, %std.conv.ConvOverflowException* @_D3std4conv21ConvOverflowException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %54 = bitcast { i64, i8* }* %52 to i8*          ; [#uses = 1]
  %55 = bitcast { i64, i8* }* %53 to i8*          ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %55, i64 68, i1 false)
  %56 = call %std.conv.ConvOverflowException* @_D3std4conv21ConvOverflowException6__ctorMFNaNbNfAyaQdmZCQCdQCcQCa(%std.conv.ConvOverflowException* nonnull returned %.newclass_gc, { i64, i8* } { i64 31, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.91, i32 0, i32 0) }, { i64, i8* } { i64 50, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.92, i32 0, i32 0) }, i64 2495) #1 ; [#uses = 0]
  %57 = bitcast %std.conv.ConvOverflowException* %.newclass_gc to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %57) #5
  unreachable

afterthrow:                                       ; No predecessors!
  br label %endif16

endif16:                                          ; preds = %afterthrow, %if15
  br label %forinc

forinc:                                           ; preds = %endif16
  br label %forcond

endfor:                                           ; preds = %if9, %forcond
  %58 = load i8, i8* %sign, align 1               ; [#uses = 1]
  %59 = trunc i8 %58 to i1                        ; [#uses = 1]
  br i1 %59, label %if17, label %endif18

if17:                                             ; preds = %endfor
  %60 = load i32, i32* %v, align 4                ; [#uses = 1]
  %negval = sub i32 0, %60                        ; [#uses = 1]
  store i32 %negval, i32* %v, align 4
  br label %endif18

endif18:                                          ; preds = %if17, %endfor
  %61 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len19 = load i64, i64* %61, align 8           ; [#uses = 1]
  %62 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %source, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len20 = load i64, i64* %62, align 8           ; [#uses = 1]
  %63 = sub i64 %.len19, %.len20                  ; [#uses = 4]
  %64 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len21 = load i64, i64* %64, align 8           ; [#uses = 3]
  %65 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len22 = load i64, i64* %65, align 8           ; [#uses = 1]
  %bounds.cmp.lo = icmp ule i64 %63, %.len21      ; [#uses = 1]
  br i1 %bounds.cmp.lo, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %endif18
  %66 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr23 = load i8*, i8** %66, align 8           ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr23, i64 %63 ; [#uses = 2, type = i8*]
  %67 = sub i64 %.len21, %63                      ; [#uses = 2]
  %68 = insertvalue { i64, i8* } undef, i64 %67, 0 ; [#uses = 1]
  %69 = insertvalue { i64, i8* } %68, i8* %lowerbound, 1 ; [#uses = 0]
  %70 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %67, i64* %70, align 8
  %71 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound, i8** %71, align 8
  %72 = load i32, i32* %v, align 4                ; [#uses = 0]
  %73 = load i32, i32* %v, align 4                ; [#uses = 1]
  ret i32 %73

dummy.afterreturn:                                ; No predecessors!
  br label %endif8

bounds.fail:                                      ; preds = %endif18
  call void @_d_arraybounds_slice({ i64, i8* } { i64 50, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.92, i32 0, i32 0) }, i32 2502, i64 %63, i64 %.len21, i64 %.len22) #5
  unreachable

endif8:                                           ; preds = %dummy.afterreturn, %switchend
  br label %label.Lerr

label.Lerr:                                       ; preds = %endif8, %if1, %if
  %74 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %source, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len24 = load i64, i64* %74, align 8           ; [#uses = 1]
  %75 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %source, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr25 = load i8*, i8** %75, align 8           ; [#uses = 1]
  %76 = insertvalue { i64, i8* } undef, i64 %.len24, 0 ; [#uses = 1]
  %77 = insertvalue { i64, i8* } %76, i8* %.ptr25, 1 ; [#uses = 1]
  %78 = call %std.conv.ConvException* @_D3std4conv__T9convErrorTAyaTiZQrFNaNfQnQpmZCQBrQBq13ConvException({ i64, i8* } %77, { i64, i8* } { i64 50, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.92, i32 0, i32 0) }, i64 2515) #1 ; [#uses = 1]
  %79 = bitcast %std.conv.ConvException* %78 to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %79) #5
  unreachable
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std6string__T14representationTyaZQuFNaNbNiNfAyaZAyh({ i64, i8* } %s_arg) #0 {
  %s = alloca { i64, i8* }, align 8               ; [#uses = 3, size/byte = 16]
  store { i64, i8* } %s_arg, { i64, i8* }* %s, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %2, align 8              ; [#uses = 1]
  %3 = insertvalue { i64, i8* } undef, i64 %.len, 0 ; [#uses = 1]
  %4 = insertvalue { i64, i8* } %3, i8* %.ptr, 1  ; [#uses = 1]
  ret { i64, i8* } %4
}

; [#uses = 3]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std5range10primitives__T5emptyTAyhZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %a) #0 {
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = icmp ne i64 %.len, 0                       ; [#uses = 1]
  %3 = icmp eq i1 %2, false                       ; [#uses = 1]
  ret i1 %3
}

; [#uses = 3]
declare i8* @_D3std5range10primitives__T5frontThZQjFNaNbNcNdNiNfNkMANghZNgh({ i64, i8* }) #1

; [#uses = 3]
declare void @_D3std5range10primitives__T8popFrontThZQmFNaNbNiNfMKANghZv({ i64, i8* }* dereferenceable(16)) #1

; [#uses = 1]
declare %std.conv.ConvOverflowException* @_D3std4conv21ConvOverflowException6__ctorMFNaNbNfAyaQdmZCQCdQCcQCa(%std.conv.ConvOverflowException* nonnull returned, { i64, i8* }, { i64, i8* }, i64) #1

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr %std.conv.ConvException* @_D3std4conv__T9convErrorTAyaTiZQrFNaNfQnQpmZCQBrQBq13ConvException({ i64, i8* } %source_arg, { i64, i8* } %fn_arg, i64 %ln_arg) #0 {
  %source = alloca { i64, i8* }, align 8          ; [#uses = 4, size/byte = 16]
  %fn = alloca { i64, i8* }, align 8              ; [#uses = 2, size/byte = 16]
  %ln = alloca i64, align 8                       ; [#uses = 2, size/byte = 8]
  %msg = alloca { i64, i8* }, align 8             ; [#uses = 8, size/byte = 16]
  %el = alloca i32, align 4                       ; [#uses = 3, size/byte = 4]
  store { i64, i8* } %source_arg, { i64, i8* }* %source, align 8
  store { i64, i8* } %fn_arg, { i64, i8* }* %fn, align 8
  store i64 %ln_arg, i64* %ln, align 8
  store { i64, i8* } zeroinitializer, { i64, i8* }* %msg, align 8
  %1 = call zeroext i1 @_D3std5range10primitives__T5emptyTAyaZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %source) #0 ; [#uses = 1]
  br i1 %1, label %if, label %else

if:                                               ; preds = %0
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %msg, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 68, i64* %2, align 8
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %msg, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.93, i32 0, i32 0), i8** %3, align 8
  br label %endif

else:                                             ; preds = %0
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %source, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %4, align 8              ; [#uses = 1]
  %5 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %source, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %5, align 8              ; [#uses = 1]
  %6 = insertvalue { i64, i8* } undef, i64 %.len, 0 ; [#uses = 1]
  %7 = insertvalue { i64, i8* } %6, i8* %.ptr, 1  ; [#uses = 1]
  %8 = call i32 @_D3std5range10primitives__T5frontTaZQjFNaNdNfMAxaZw({ i64, i8* } %7) #0 ; [#uses = 1]
  store i32 %8, i32* %el, align 4
  %9 = load i32, i32* %el, align 4                ; [#uses = 1]
  %10 = icmp eq i32 %9, 10                        ; [#uses = 1]
  br i1 %10, label %if1, label %else3

if1:                                              ; preds = %else
  %11 = call { i64, i8* } @_D3std4conv__T4textTAyaZQkFNaNbNiNfQpZQs({ i64, i8* } { i64 60, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.94, i32 0, i32 0) }) #1 ; [#uses = 2]
  %12 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %msg, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len4 = extractvalue { i64, i8* } %11, 0       ; [#uses = 1]
  store i64 %.len4, i64* %12, align 8
  %13 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %msg, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr5 = extractvalue { i64, i8* } %11, 1       ; [#uses = 1]
  store i8* %.ptr5, i8** %13, align 8
  br label %endif2

else3:                                            ; preds = %else
  %14 = load i32, i32* %el, align 4               ; [#uses = 1]
  %15 = call { i64, i8* } @_D3std4conv__T4textTAyaTwTQgZQpFNaNfQqwQtZQw({ i64, i8* } { i64 12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i32 0, i32 0) }, i32 %14, { i64, i8* } { i64 46, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.96, i32 0, i32 0) }) #1 ; [#uses = 2]
  %16 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %msg, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len6 = extractvalue { i64, i8* } %15, 0       ; [#uses = 1]
  store i64 %.len6, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %msg, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr7 = extractvalue { i64, i8* } %15, 1       ; [#uses = 1]
  store i8* %.ptr7, i8** %17, align 8
  br label %endif2

endif2:                                           ; preds = %else3, %if1
  br label %endif

endif:                                            ; preds = %endif2, %if
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std4conv13ConvException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %std.conv.ConvException* ; [#uses = 5]
  %vtbl = getelementptr inbounds %std.conv.ConvException, %std.conv.ConvException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std4conv13ConvException6__vtblZ, [10 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %std.conv.ConvException, %std.conv.ConvException* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %18 = getelementptr inbounds %std.conv.ConvException, %std.conv.ConvException* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %19 = getelementptr inbounds %std.conv.ConvException, %std.conv.ConvException* @_D3std4conv13ConvException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %20 = bitcast { i64, i8* }* %18 to i8*          ; [#uses = 1]
  %21 = bitcast { i64, i8* }* %19 to i8*          ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %21, i64 68, i1 false)
  %22 = load { i64, i8* }, { i64, i8* }* %msg, align 8 ; [#uses = 1]
  %23 = load { i64, i8* }, { i64, i8* }* %fn, align 8 ; [#uses = 1]
  %24 = load i64, i64* %ln, align 8               ; [#uses = 1]
  %25 = call %std.conv.ConvException* @_D3std4conv13ConvException8__mixin26__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCyQCxQCv(%std.conv.ConvException* nonnull returned %.newclass_gc, { i64, i8* } %22, { i64, i8* } %23, i64 %24, %object.Throwable* null) #1 ; [#uses = 0]
  ret %std.conv.ConvException* %.newclass_gc
}

; [#uses = 1]
declare { i64, i8* } @_D3std4conv__T4textTAyaZQkFNaNbNiNfQpZQs({ i64, i8* }) #1

; [#uses = 1]
declare { i64, i8* } @_D3std4conv__T4textTAyaTwTQgZQpFNaNfQqwQtZQw({ i64, i8* }, i32, { i64, i8* }) #1

; [#uses = 1]
declare %std.conv.ConvException* @_D3std4conv13ConvException8__mixin26__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCyQCxQCv(%std.conv.ConvException* nonnull returned, { i64, i8* }, { i64, i8* }, i64, %object.Throwable*) #1

; [#uses = 1]
declare { i64, i8* } @_D3std4conv__T6toImplTAyaTiZQoFNaNbNfiZQr(i32) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std4json9JSONValue__T13opIndexAssignTAyaZQuMFQiQkZ12__dgliteral3MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 32, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.88, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxhTaZQBxFKQBoKxhMKxSQDgQDf4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 46, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.82, i32 0, i32 0) }
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoThTaZQCaFNaNfKQBrxhMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %obj_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %obj = alloca i8, align 1                       ; [#uses = 2, size/byte = 1]
  %val = alloca i8, align 1                       ; [#uses = 3, size/byte = 1]
  %raw = alloca { i64, i8* }, align 8             ; [#uses = 6, size/byte = 16]
  %__r1529 = alloca { i64, i8* }, align 8         ; [#uses = 4, size/byte = 16]
  %__key1530 = alloca i64, align 8                ; [#uses = 4, size/byte = 8]
  %c = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %__r1531 = alloca { i64, i8* }, align 8         ; [#uses = 4, size/byte = 16]
  %__key1532 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %c14 = alloca i8, align 1                       ; [#uses = 2, size/byte = 1]
  %negative = alloca i8, align 1                  ; [#uses = 1, size/byte = 1]
  %arg = alloca i64, align 8                      ; [#uses = 4, size/byte = 8]
  store i8 %obj_arg, i8* %obj, align 1
  %1 = load i8, i8* %obj, align 1                 ; [#uses = 1]
  store i8 %1, i8* %val, align 1
  %2 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %3 = load i8, i8* %2, align 1                   ; [#uses = 1]
  %4 = zext i8 %3 to i32                          ; [#uses = 1]
  %5 = icmp eq i32 %4, 114                        ; [#uses = 1]
  br i1 %5, label %if, label %endif

if:                                               ; preds = %0
  %6 = call { i64, i8* } @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoThTaZQCaFKQBnxhMKxSQDrQDq4spec__T10FormatSpecTaZQpZ__T9__lambda5ThZQnFNaNbNiNeKhZAxa(i8* dereferenceable(1) %val) #0 ; [#uses = 2]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = extractvalue { i64, i8* } %6, 0         ; [#uses = 1]
  store i64 %.len, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = extractvalue { i64, i8* } %6, 1         ; [#uses = 1]
  store i8* %.ptr, i8** %8, align 8
  %9 = call zeroext i1 @_D3std6format8internal5write__T19needToSwapEndianessTaZQyFNaNbNiNfMKxSQCqQCp4spec__T10FormatSpecTaZQpZb(%"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1 ; [#uses = 1]
  br i1 %9, label %if1, label %else

if1:                                              ; preds = %if
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr3 = load i8*, i8** %10, align 8            ; [#uses = 2]
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len4 = load i64, i64* %11, align 8            ; [#uses = 2]
  %12 = insertvalue { i64, i8* } undef, i64 %.len4, 0 ; [#uses = 1]
  %13 = insertvalue { i64, i8* } %12, i8* %.ptr3, 1 ; [#uses = 0]
  %14 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1529, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %.len4, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1529, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %.ptr3, i8** %15, align 8
  %16 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1529, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len5 = load i64, i64* %16, align 8            ; [#uses = 1]
  store i64 %.len5, i64* %__key1530, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %if1
  %17 = load i64, i64* %__key1530, align 8        ; [#uses = 2]
  %18 = sub i64 %17, 1                            ; [#uses = 1]
  store i64 %18, i64* %__key1530, align 8
  %19 = icmp ne i64 %17, 0                        ; [#uses = 1]
  br i1 %19, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %20 = load i64, i64* %__key1530, align 8        ; [#uses = 1]
  %21 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1529, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr6 = load i8*, i8** %21, align 8            ; [#uses = 1]
  %22 = getelementptr inbounds i8, i8* %.ptr6, i64 %20 ; [#uses = 1, type = i8*]
  %23 = load i8, i8* %22, align 1                 ; [#uses = 1]
  store i8 %23, i8* %c, align 1
  %24 = load i8, i8* %c, align 1                  ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxaZQBmFNaNbNfKQBsxaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %24) #1
  br label %forinc

forinc:                                           ; preds = %forbody
  br label %forcond

endfor:                                           ; preds = %forcond
  br label %endif2

else:                                             ; preds = %if
  %25 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr7 = load i8*, i8** %25, align 8            ; [#uses = 2]
  %26 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len8 = load i64, i64* %26, align 8            ; [#uses = 2]
  %27 = insertvalue { i64, i8* } undef, i64 %.len8, 0 ; [#uses = 1]
  %28 = insertvalue { i64, i8* } %27, i8* %.ptr7, 1 ; [#uses = 0]
  %29 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1531, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %.len8, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1531, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %.ptr7, i8** %30, align 8
  store i64 0, i64* %__key1532, align 8
  br label %forcond9

forcond9:                                         ; preds = %forinc11, %else
  %31 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1531, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len13 = load i64, i64* %31, align 8           ; [#uses = 1]
  %32 = load i64, i64* %__key1532, align 8        ; [#uses = 1]
  %33 = icmp ult i64 %32, %.len13                 ; [#uses = 1]
  br i1 %33, label %forbody10, label %endfor12

forbody10:                                        ; preds = %forcond9
  %34 = load i64, i64* %__key1532, align 8        ; [#uses = 1]
  %35 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1531, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr15 = load i8*, i8** %35, align 8           ; [#uses = 1]
  %36 = getelementptr inbounds i8, i8* %.ptr15, i64 %34 ; [#uses = 1, type = i8*]
  %37 = load i8, i8* %36, align 1                 ; [#uses = 1]
  store i8 %37, i8* %c14, align 1
  %38 = load i8, i8* %c14, align 1                ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxaZQBmFNaNbNfKQBsxaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %38) #1
  br label %forinc11

forinc11:                                         ; preds = %forbody10
  %39 = load i64, i64* %__key1532, align 8        ; [#uses = 1]
  %40 = add i64 %39, 1                            ; [#uses = 1]
  store i64 %40, i64* %__key1532, align 8
  br label %forcond9

endfor12:                                         ; preds = %forcond9
  br label %endif2

endif2:                                           ; preds = %endfor12, %endfor
  ret void

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %0
  store i8 0, i8* %negative, align 1
  %41 = load i8, i8* %val, align 1                ; [#uses = 1]
  %42 = zext i8 %41 to i64                        ; [#uses = 1]
  store i64 %42, i64* %arg, align 8
  %43 = load i64, i64* %arg, align 8              ; [#uses = 1]
  %44 = and i64 %43, 255                          ; [#uses = 1]
  store i64 %44, i64* %arg, align 8
  %45 = load i64, i64* %arg, align 8              ; [#uses = 1]
  call void @_D3std6format8internal5write__T20formatValueImplUlongTSQCb5array__T8AppenderTAyaZQoTaZQCdFNaNfKQBpmIbMKxSQDzQDy4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i64 %45, i1 zeroext false, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoThTaZQCaFKQBnxhMKxSQDrQDq4spec__T10FormatSpecTaZQpZ__T9__lambda5ThZQnFNaNbNiNeKhZAxa(i8* dereferenceable(1) %val) #0 {
  %lowerbound = getelementptr inbounds i8, i8* %val, i64 0 ; [#uses = 1, type = i8*]
  %1 = insertvalue { i64, i8* } { i64 1, i8* undef }, i8* %lowerbound, 1 ; [#uses = 1]
  ret { i64, i8* } %1
}

; [#uses = 4]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std6format8internal5write__T19needToSwapEndianessTaZQyFNaNbNiNfMKxSQCqQCp4spec__T10FormatSpecTaZQpZb(%"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %1 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flPlusMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  br i1 %1, label %ororend, label %oror

oror:                                             ; preds = %0
  br label %ororend

ororend:                                          ; preds = %oror, %0
  %ororval = phi i1 [ true, %0 ], [ false, %oror ] ; [#uses = 1, type = i1]
  ret i1 %ororval
}

; [#uses = 4]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T20formatValueImplUlongTSQCb5array__T8AppenderTAyaZQoTaZQCdFNaNfKQBpmIbMKxSQDzQDy4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i64 %arg_arg, i1 zeroext %negative_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %arg = alloca i64, align 8                      ; [#uses = 6, size/byte = 8]
  %negative = alloca i8, align 1                  ; [#uses = 3, size/byte = 1]
  %base = alloca i32, align 4                     ; [#uses = 6, size/byte = 4]
  %zero = alloca i8, align 1                      ; [#uses = 3, size/byte = 1]
  %digits = alloca [64 x i8], align 1             ; [#uses = 15, size/byte = 64]
  %pos = alloca i64, align 8                      ; [#uses = 22, size/byte = 8]
  %condtmp = alloca i32*, align 8                 ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp = alloca i32, align 4           ; [#uses = 2, size/byte = 4]
  %.makelvaluetmp7 = alloca i32, align 4          ; [#uses = 2, size/byte = 4]
  %prefix = alloca [3 x i8], align 1              ; [#uses = 13, size/byte = 3]
  %left = alloca i64, align 8                     ; [#uses = 17, size/byte = 8]
  %right = alloca i64, align 8                    ; [#uses = 13, size/byte = 8]
  %.getAddressOf_dump = alloca { i64, i8* }, align 8 ; [#uses = 2, size/byte = 16]
  %fs = alloca %"std.format.spec.FormatSpec!char.FormatSpec", align 8 ; [#uses = 9, size/byte = 72]
  %.getAddressOf_dump122 = alloca { i64, i8* }, align 8 ; [#uses = 2, size/byte = 16]
  %.getAddressOf_dump123 = alloca { i64, i8* }, align 8 ; [#uses = 2, size/byte = 16]
  %condtmp124 = alloca i32*, align 8              ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp131 = alloca i32, align 4        ; [#uses = 2, size/byte = 4]
  %.makelvaluetmp132 = alloca i32, align 4        ; [#uses = 2, size/byte = 4]
  %digit_end = alloca i64, align 8                ; [#uses = 20, size/byte = 8]
  %condtmp142 = alloca i64*, align 8              ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp149 = alloca i64, align 8        ; [#uses = 2, size/byte = 8]
  %.makelvaluetmp150 = alloca i64, align 8        ; [#uses = 2, size/byte = 8]
  %rt = alloca i32, align 4                       ; [#uses = 6, size/byte = 4]
  %tie = alloca i8, align 1                       ; [#uses = 3, size/byte = 1]
  %condtmp155 = alloca i8*, align 8               ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp162 = alloca i8, align 1         ; [#uses = 2, size/byte = 1]
  %.makelvaluetmp163 = alloca i8, align 1         ; [#uses = 2, size/byte = 1]
  %condtmp188 = alloca i8*, align 8               ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp192 = alloca i8, align 1         ; [#uses = 2, size/byte = 1]
  %condtmp193 = alloca i8*, align 8               ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp197 = alloca i8, align 1         ; [#uses = 2, size/byte = 1]
  %.makelvaluetmp198 = alloca i8, align 1         ; [#uses = 2, size/byte = 1]
  %int_digit = alloca [1 x i8], align 1           ; [#uses = 2, size/byte = 1]
  %suffix = alloca [4 x i8], align 1              ; [#uses = 9, size/byte = 4]
  %condtmp219 = alloca i8*, align 8               ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp226 = alloca i8, align 1         ; [#uses = 2, size/byte = 1]
  %.makelvaluetmp227 = alloca i8, align 1         ; [#uses = 2, size/byte = 1]
  %condtmp230 = alloca i8*, align 8               ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp234 = alloca i8, align 1         ; [#uses = 2, size/byte = 1]
  %.makelvaluetmp235 = alloca i8, align 1         ; [#uses = 2, size/byte = 1]
  %condtmp236 = alloca i64*, align 8              ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp240 = alloca i64, align 8        ; [#uses = 2, size/byte = 8]
  %.makelvaluetmp241 = alloca i64, align 8        ; [#uses = 2, size/byte = 8]
  %condtmp242 = alloca i8*, align 8               ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp246 = alloca i8, align 1         ; [#uses = 2, size/byte = 1]
  %.makelvaluetmp247 = alloca i8, align 1         ; [#uses = 2, size/byte = 1]
  %.getAddressOf_dump279 = alloca { i64, i8* }, align 8 ; [#uses = 2, size/byte = 16]
  %.getAddressOf_dump281 = alloca { i64, i8* }, align 8 ; [#uses = 2, size/byte = 16]
  %condtmp282 = alloca i32*, align 8              ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp289 = alloca i32, align 4        ; [#uses = 2, size/byte = 4]
  %.makelvaluetmp290 = alloca i32, align 4        ; [#uses = 2, size/byte = 4]
  store i64 %arg_arg, i64* %arg, align 8
  %1 = zext i1 %negative_arg to i8                ; [#uses = 1]
  store i8 %1, i8* %negative, align 1
  %2 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %3 = load i8, i8* %2, align 1                   ; [#uses = 1]
  %4 = call i32 @_D3std6format8internal5write10baseOfSpecFNaNfIaZk(i8 zeroext %3) #1 ; [#uses = 1]
  store i32 %4, i32* %base, align 4
  %5 = load i64, i64* %arg, align 8               ; [#uses = 1]
  %6 = icmp eq i64 %5, 0                          ; [#uses = 1]
  %7 = zext i1 %6 to i8                           ; [#uses = 1]
  store i8 %7, i8* %zero, align 1
  store i64 63, i64* %pos, align 8
  br label %dowhile

dowhile:                                          ; preds = %dowhilecond, %0
  %8 = load i64, i64* %pos, align 8               ; [#uses = 4]
  %9 = sub i64 %8, 1                              ; [#uses = 1]
  store i64 %9, i64* %pos, align 8
  %bounds.cmp = icmp ult i64 %8, 64               ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %dowhile
  %10 = getelementptr inbounds [64 x i8], [64 x i8]* %digits, i32 0, i64 %8 ; [#uses = 1, type = i8*]
  %11 = load i64, i64* %arg, align 8              ; [#uses = 1]
  %12 = load i32, i32* %base, align 4             ; [#uses = 1]
  %13 = zext i32 %12 to i64                       ; [#uses = 1]
  %14 = urem i64 %11, %13                         ; [#uses = 1]
  %15 = add i64 48, %14                           ; [#uses = 1]
  %16 = trunc i64 %15 to i8                       ; [#uses = 1]
  store i8 %16, i8* %10, align 1
  %17 = load i32, i32* %base, align 4             ; [#uses = 1]
  %18 = icmp ugt i32 %17, 10                      ; [#uses = 1]
  br i1 %18, label %andand, label %andandend

andand:                                           ; preds = %bounds.ok
  %19 = load i64, i64* %pos, align 8              ; [#uses = 1]
  %20 = add i64 %19, 1                            ; [#uses = 3]
  %bounds.cmp1 = icmp ult i64 %20, 64             ; [#uses = 1]
  br i1 %bounds.cmp1, label %bounds.ok2, label %bounds.fail3

bounds.ok2:                                       ; preds = %andand
  %21 = getelementptr inbounds [64 x i8], [64 x i8]* %digits, i32 0, i64 %20 ; [#uses = 1, type = i8*]
  %22 = load i8, i8* %21, align 1                 ; [#uses = 1]
  %23 = zext i8 %22 to i32                        ; [#uses = 1]
  %24 = icmp sgt i32 %23, 57                      ; [#uses = 1]
  br label %andandend

bounds.fail3:                                     ; preds = %andand
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 191, i64 %20, i64 64) #5
  unreachable

andandend:                                        ; preds = %bounds.ok2, %bounds.ok
  %andandval = phi i1 [ false, %bounds.ok ], [ %24, %bounds.ok2 ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %if, label %endif

if:                                               ; preds = %andandend
  %25 = load i64, i64* %pos, align 8              ; [#uses = 1]
  %26 = add i64 %25, 1                            ; [#uses = 3]
  %bounds.cmp4 = icmp ult i64 %26, 64             ; [#uses = 1]
  br i1 %bounds.cmp4, label %bounds.ok5, label %bounds.fail6

bounds.ok5:                                       ; preds = %if
  %27 = getelementptr inbounds [64 x i8], [64 x i8]* %digits, i32 0, i64 %26 ; [#uses = 2, type = i8*]
  %28 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %29 = load i8, i8* %28, align 1                 ; [#uses = 1]
  %30 = zext i8 %29 to i32                        ; [#uses = 1]
  %31 = icmp eq i32 %30, 120                      ; [#uses = 1]
  br i1 %31, label %ororend, label %oror

oror:                                             ; preds = %bounds.ok5
  %32 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %33 = load i8, i8* %32, align 1                 ; [#uses = 1]
  %34 = zext i8 %33 to i32                        ; [#uses = 1]
  %35 = icmp eq i32 %34, 97                       ; [#uses = 1]
  br label %ororend

ororend:                                          ; preds = %oror, %bounds.ok5
  %ororval = phi i1 [ true, %bounds.ok5 ], [ %35, %oror ] ; [#uses = 1, type = i1]
  br i1 %ororval, label %condtrue, label %condfalse

condtrue:                                         ; preds = %ororend
  store i32 97, i32* %.makelvaluetmp, align 4
  store i32* %.makelvaluetmp, i32** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %ororend
  store i32 65, i32* %.makelvaluetmp7, align 4
  store i32* %.makelvaluetmp7, i32** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %36 = load i32*, i32** %condtmp, align 8        ; [#uses = 1]
  %37 = load i32, i32* %36, align 4               ; [#uses = 1]
  %38 = sub i32 %37, 48                           ; [#uses = 1]
  %39 = sub i32 %38, 10                           ; [#uses = 1]
  %40 = load i8, i8* %27, align 1                 ; [#uses = 1]
  %41 = zext i8 %40 to i32                        ; [#uses = 1]
  %42 = add i32 %41, %39                          ; [#uses = 1]
  %43 = trunc i32 %42 to i8                       ; [#uses = 1]
  store i8 %43, i8* %27, align 1
  br label %endif

bounds.fail6:                                     ; preds = %if
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 192, i64 %26, i64 64) #5
  unreachable

endif:                                            ; preds = %condend, %andandend
  %44 = load i32, i32* %base, align 4             ; [#uses = 1]
  %45 = zext i32 %44 to i64                       ; [#uses = 1]
  %46 = load i64, i64* %arg, align 8              ; [#uses = 1]
  %47 = udiv i64 %46, %45                         ; [#uses = 1]
  store i64 %47, i64* %arg, align 8
  br label %dowhilecond

bounds.fail:                                      ; preds = %dowhile
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 190, i64 %8, i64 64) #5
  unreachable

dowhilecond:                                      ; preds = %endif
  %48 = load i64, i64* %arg, align 8              ; [#uses = 1]
  %49 = icmp ugt i64 %48, 0                       ; [#uses = 1]
  br i1 %49, label %dowhile, label %enddowhile

enddowhile:                                       ; preds = %dowhilecond
  store i64 2, i64* %left, align 8
  store i64 2, i64* %right, align 8
  %50 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %51 = load i8, i8* %50, align 1                 ; [#uses = 1]
  %52 = zext i8 %51 to i32                        ; [#uses = 1]
  %53 = icmp ne i32 %52, 120                      ; [#uses = 1]
  br i1 %53, label %andand8, label %andandend9

andand8:                                          ; preds = %enddowhile
  %54 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %55 = load i8, i8* %54, align 1                 ; [#uses = 1]
  %56 = zext i8 %55 to i32                        ; [#uses = 1]
  %57 = icmp ne i32 %56, 88                       ; [#uses = 1]
  br label %andandend9

andandend9:                                       ; preds = %andand8, %enddowhile
  %andandval10 = phi i1 [ false, %enddowhile ], [ %57, %andand8 ] ; [#uses = 1, type = i1]
  br i1 %andandval10, label %andand11, label %andandend12

andand11:                                         ; preds = %andandend9
  %58 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %59 = load i8, i8* %58, align 1                 ; [#uses = 1]
  %60 = zext i8 %59 to i32                        ; [#uses = 1]
  %61 = icmp ne i32 %60, 98                       ; [#uses = 1]
  br label %andandend12

andandend12:                                      ; preds = %andand11, %andandend9
  %andandval13 = phi i1 [ false, %andandend9 ], [ %61, %andand11 ] ; [#uses = 1, type = i1]
  br i1 %andandval13, label %andand14, label %andandend15

andand14:                                         ; preds = %andandend12
  %62 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %63 = load i8, i8* %62, align 1                 ; [#uses = 1]
  %64 = zext i8 %63 to i32                        ; [#uses = 1]
  %65 = icmp ne i32 %64, 111                      ; [#uses = 1]
  br label %andandend15

andandend15:                                      ; preds = %andand14, %andandend12
  %andandval16 = phi i1 [ false, %andandend12 ], [ %65, %andand14 ] ; [#uses = 1, type = i1]
  br i1 %andandval16, label %andand17, label %andandend18

andand17:                                         ; preds = %andandend15
  %66 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %67 = load i8, i8* %66, align 1                 ; [#uses = 1]
  %68 = zext i8 %67 to i32                        ; [#uses = 1]
  %69 = icmp ne i32 %68, 117                      ; [#uses = 1]
  br label %andandend18

andandend18:                                      ; preds = %andand17, %andandend15
  %andandval19 = phi i1 [ false, %andandend15 ], [ %69, %andand17 ] ; [#uses = 1, type = i1]
  br i1 %andandval19, label %if20, label %endif21

if20:                                             ; preds = %andandend18
  %70 = load i8, i8* %negative, align 1           ; [#uses = 1]
  %71 = trunc i8 %70 to i1                        ; [#uses = 1]
  br i1 %71, label %if22, label %else

if22:                                             ; preds = %if20
  %72 = load i64, i64* %right, align 8            ; [#uses = 4]
  %73 = add i64 %72, 1                            ; [#uses = 1]
  store i64 %73, i64* %right, align 8
  %bounds.cmp24 = icmp ult i64 %72, 3             ; [#uses = 1]
  br i1 %bounds.cmp24, label %bounds.ok25, label %bounds.fail26

bounds.ok25:                                      ; preds = %if22
  %74 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix, i32 0, i64 %72 ; [#uses = 1, type = i8*]
  store i8 45, i8* %74, align 1
  br label %endif23

bounds.fail26:                                    ; preds = %if22
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 204, i64 %72, i64 3) #5
  unreachable

else:                                             ; preds = %if20
  %75 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flPlusMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  br i1 %75, label %if27, label %else29

if27:                                             ; preds = %else
  %76 = load i64, i64* %right, align 8            ; [#uses = 4]
  %77 = add i64 %76, 1                            ; [#uses = 1]
  store i64 %77, i64* %right, align 8
  %bounds.cmp30 = icmp ult i64 %76, 3             ; [#uses = 1]
  br i1 %bounds.cmp30, label %bounds.ok31, label %bounds.fail32

bounds.ok31:                                      ; preds = %if27
  %78 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix, i32 0, i64 %76 ; [#uses = 1, type = i8*]
  store i8 43, i8* %78, align 1
  br label %endif28

bounds.fail32:                                    ; preds = %if27
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 206, i64 %76, i64 3) #5
  unreachable

else29:                                           ; preds = %else
  %79 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp7flSpaceMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  br i1 %79, label %if33, label %endif34

if33:                                             ; preds = %else29
  %80 = load i64, i64* %right, align 8            ; [#uses = 4]
  %81 = add i64 %80, 1                            ; [#uses = 1]
  store i64 %81, i64* %right, align 8
  %bounds.cmp35 = icmp ult i64 %80, 3             ; [#uses = 1]
  br i1 %bounds.cmp35, label %bounds.ok36, label %bounds.fail37

bounds.ok36:                                      ; preds = %if33
  %82 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix, i32 0, i64 %80 ; [#uses = 1, type = i8*]
  store i8 32, i8* %82, align 1
  br label %endif34

bounds.fail37:                                    ; preds = %if33
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 208, i64 %80, i64 3) #5
  unreachable

endif34:                                          ; preds = %bounds.ok36, %else29
  br label %endif28

endif28:                                          ; preds = %endif34, %bounds.ok31
  br label %endif23

endif23:                                          ; preds = %endif28, %bounds.ok25
  br label %endif21

endif21:                                          ; preds = %endif23, %andandend18
  %83 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %84 = load i8, i8* %83, align 1                 ; [#uses = 1]
  %85 = zext i8 %84 to i32                        ; [#uses = 1]
  %86 = icmp eq i32 %85, 120                      ; [#uses = 1]
  br i1 %86, label %ororend39, label %oror38

oror38:                                           ; preds = %endif21
  %87 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %88 = load i8, i8* %87, align 1                 ; [#uses = 1]
  %89 = zext i8 %88 to i32                        ; [#uses = 1]
  %90 = icmp eq i32 %89, 88                       ; [#uses = 1]
  br label %ororend39

ororend39:                                        ; preds = %oror38, %endif21
  %ororval40 = phi i1 [ true, %endif21 ], [ %90, %oror38 ] ; [#uses = 1, type = i1]
  br i1 %ororval40, label %ororend42, label %oror41

oror41:                                           ; preds = %ororend39
  %91 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %92 = load i8, i8* %91, align 1                 ; [#uses = 1]
  %93 = zext i8 %92 to i32                        ; [#uses = 1]
  %94 = icmp eq i32 %93, 98                       ; [#uses = 1]
  br label %ororend42

ororend42:                                        ; preds = %oror41, %ororend39
  %ororval43 = phi i1 [ true, %ororend39 ], [ %94, %oror41 ] ; [#uses = 1, type = i1]
  br i1 %ororval43, label %ororend45, label %oror44

oror44:                                           ; preds = %ororend42
  %95 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %96 = load i8, i8* %95, align 1                 ; [#uses = 1]
  %97 = zext i8 %96 to i32                        ; [#uses = 1]
  %98 = icmp eq i32 %97, 111                      ; [#uses = 1]
  br label %ororend45

ororend45:                                        ; preds = %oror44, %ororend42
  %ororval46 = phi i1 [ true, %ororend42 ], [ %98, %oror44 ] ; [#uses = 1, type = i1]
  br i1 %ororval46, label %ororend48, label %oror47

oror47:                                           ; preds = %ororend45
  %99 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %100 = load i8, i8* %99, align 1                ; [#uses = 1]
  %101 = zext i8 %100 to i32                      ; [#uses = 1]
  %102 = icmp eq i32 %101, 117                    ; [#uses = 1]
  br label %ororend48

ororend48:                                        ; preds = %oror47, %ororend45
  %ororval49 = phi i1 [ true, %ororend45 ], [ %102, %oror47 ] ; [#uses = 1, type = i1]
  br i1 %ororval49, label %ororend51, label %oror50

oror50:                                           ; preds = %ororend48
  %103 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %104 = load i8, i8* %103, align 1               ; [#uses = 1]
  %105 = zext i8 %104 to i32                      ; [#uses = 1]
  %106 = icmp eq i32 %105, 100                    ; [#uses = 1]
  br label %ororend51

ororend51:                                        ; preds = %oror50, %ororend48
  %ororval52 = phi i1 [ true, %ororend48 ], [ %106, %oror50 ] ; [#uses = 1, type = i1]
  br i1 %ororval52, label %ororend54, label %oror53

oror53:                                           ; preds = %ororend51
  %107 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %108 = load i8, i8* %107, align 1               ; [#uses = 1]
  %109 = zext i8 %108 to i32                      ; [#uses = 1]
  %110 = icmp eq i32 %109, 115                    ; [#uses = 1]
  br label %ororend54

ororend54:                                        ; preds = %oror53, %ororend51
  %ororval55 = phi i1 [ true, %ororend51 ], [ %110, %oror53 ] ; [#uses = 1, type = i1]
  br i1 %ororval55, label %if56, label %endif57

if56:                                             ; preds = %ororend54
  %111 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flHashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  br i1 %111, label %andand58, label %andandend59

andand58:                                         ; preds = %if56
  %112 = load i32, i32* %base, align 4            ; [#uses = 1]
  %113 = icmp eq i32 %112, 16                     ; [#uses = 1]
  br label %andandend59

andandend59:                                      ; preds = %andand58, %if56
  %andandval60 = phi i1 [ false, %if56 ], [ %113, %andand58 ] ; [#uses = 1, type = i1]
  br i1 %andandval60, label %andand61, label %andandend62

andand61:                                         ; preds = %andandend59
  %114 = load i8, i8* %zero, align 1              ; [#uses = 1]
  %115 = trunc i8 %114 to i1                      ; [#uses = 1]
  %116 = icmp eq i1 %115, false                   ; [#uses = 1]
  br label %andandend62

andandend62:                                      ; preds = %andand61, %andandend59
  %andandval63 = phi i1 [ false, %andandend59 ], [ %116, %andand61 ] ; [#uses = 1, type = i1]
  br i1 %andandval63, label %if64, label %endif65

if64:                                             ; preds = %andandend62
  %117 = load i64, i64* %left, align 8            ; [#uses = 1]
  %118 = sub i64 %117, 1                          ; [#uses = 1]
  store i64 %118, i64* %left, align 8
  %119 = load i64, i64* %left, align 8            ; [#uses = 2]
  %bounds.cmp66 = icmp ult i64 %119, 3            ; [#uses = 1]
  br i1 %bounds.cmp66, label %bounds.ok67, label %bounds.fail68

bounds.ok67:                                      ; preds = %if64
  %120 = load i64, i64* %left, align 8            ; [#uses = 1]
  %121 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix, i32 0, i64 %120 ; [#uses = 1, type = i8*]
  %122 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %123 = load i8, i8* %122, align 1               ; [#uses = 1]
  store i8 %123, i8* %121, align 1
  %124 = load i64, i64* %left, align 8            ; [#uses = 1]
  %125 = sub i64 %124, 1                          ; [#uses = 1]
  store i64 %125, i64* %left, align 8
  %126 = load i64, i64* %left, align 8            ; [#uses = 2]
  %bounds.cmp69 = icmp ult i64 %126, 3            ; [#uses = 1]
  br i1 %bounds.cmp69, label %bounds.ok70, label %bounds.fail71

bounds.ok70:                                      ; preds = %bounds.ok67
  %127 = load i64, i64* %left, align 8            ; [#uses = 1]
  %128 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix, i32 0, i64 %127 ; [#uses = 1, type = i8*]
  store i8 48, i8* %128, align 1
  br label %endif65

bounds.fail71:                                    ; preds = %bounds.ok67
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 218, i64 %126, i64 3) #5
  unreachable

bounds.fail68:                                    ; preds = %if64
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 217, i64 %119, i64 3) #5
  unreachable

endif65:                                          ; preds = %bounds.ok70, %andandend62
  %129 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flHashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  br i1 %129, label %andand72, label %andandend73

andand72:                                         ; preds = %endif65
  %130 = load i32, i32* %base, align 4            ; [#uses = 1]
  %131 = icmp eq i32 %130, 8                      ; [#uses = 1]
  br label %andandend73

andandend73:                                      ; preds = %andand72, %endif65
  %andandval74 = phi i1 [ false, %endif65 ], [ %131, %andand72 ] ; [#uses = 1, type = i1]
  br i1 %andandval74, label %andand75, label %andandend76

andand75:                                         ; preds = %andandend73
  %132 = load i8, i8* %zero, align 1              ; [#uses = 1]
  %133 = trunc i8 %132 to i1                      ; [#uses = 1]
  %134 = icmp eq i1 %133, false                   ; [#uses = 1]
  br label %andandend76

andandend76:                                      ; preds = %andand75, %andandend73
  %andandval77 = phi i1 [ false, %andandend73 ], [ %134, %andand75 ] ; [#uses = 1, type = i1]
  br i1 %andandval77, label %andand78, label %andandend79

andand78:                                         ; preds = %andandend76
  %135 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %136 = add i64 %135, 1                          ; [#uses = 1]
  %137 = sub i64 64, %136                         ; [#uses = 1]
  %138 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %139 = load i32, i32* %138, align 4             ; [#uses = 1]
  %140 = sext i32 %139 to i64                     ; [#uses = 1]
  %141 = icmp uge i64 %137, %140                  ; [#uses = 1]
  br i1 %141, label %ororend81, label %oror80

oror80:                                           ; preds = %andand78
  %142 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %143 = load i32, i32* %142, align 4             ; [#uses = 1]
  %144 = icmp eq i32 %143, 2147483646             ; [#uses = 1]
  br label %ororend81

ororend81:                                        ; preds = %oror80, %andand78
  %ororval82 = phi i1 [ true, %andand78 ], [ %144, %oror80 ] ; [#uses = 1, type = i1]
  br label %andandend79

andandend79:                                      ; preds = %ororend81, %andandend76
  %andandval83 = phi i1 [ false, %andandend76 ], [ %ororval82, %ororend81 ] ; [#uses = 1, type = i1]
  br i1 %andandval83, label %if84, label %endif85

if84:                                             ; preds = %andandend79
  %145 = load i64, i64* %left, align 8            ; [#uses = 1]
  %146 = sub i64 %145, 1                          ; [#uses = 1]
  store i64 %146, i64* %left, align 8
  %147 = load i64, i64* %left, align 8            ; [#uses = 2]
  %bounds.cmp86 = icmp ult i64 %147, 3            ; [#uses = 1]
  br i1 %bounds.cmp86, label %bounds.ok87, label %bounds.fail88

bounds.ok87:                                      ; preds = %if84
  %148 = load i64, i64* %left, align 8            ; [#uses = 1]
  %149 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix, i32 0, i64 %148 ; [#uses = 1, type = i8*]
  store i8 48, i8* %149, align 1
  br label %endif85

bounds.fail88:                                    ; preds = %if84
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 222, i64 %147, i64 3) #5
  unreachable

endif85:                                          ; preds = %bounds.ok87, %andandend79
  %150 = load i64, i64* %left, align 8            ; [#uses = 4]
  %151 = load i64, i64* %right, align 8           ; [#uses = 4]
  %bounds.cmp.up = icmp ule i64 %151, 3           ; [#uses = 1]
  %bounds.cmp.lo = icmp ule i64 %150, %151        ; [#uses = 1]
  %152 = and i1 %bounds.cmp.up, %bounds.cmp.lo    ; [#uses = 1]
  br i1 %152, label %bounds.ok89, label %bounds.fail90

bounds.ok89:                                      ; preds = %endif85
  %153 = bitcast [3 x i8]* %prefix to i8*         ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %153, i64 %150 ; [#uses = 1, type = i8*]
  %154 = sub i64 %151, %150                       ; [#uses = 1]
  %155 = insertvalue { i64, i8* } undef, i64 %154, 0 ; [#uses = 1]
  %156 = insertvalue { i64, i8* } %155, i8* %lowerbound, 1 ; [#uses = 1]
  %157 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %158 = add i64 %157, 1                          ; [#uses = 4]
  %bounds.cmp.lo93 = icmp ule i64 %158, 64        ; [#uses = 1]
  br i1 %bounds.cmp.lo93, label %bounds.ok91, label %bounds.fail92

bounds.ok91:                                      ; preds = %bounds.ok89
  %159 = bitcast [64 x i8]* %digits to i8*        ; [#uses = 1]
  %lowerbound94 = getelementptr inbounds i8, i8* %159, i64 %158 ; [#uses = 1, type = i8*]
  %160 = sub i64 64, %158                         ; [#uses = 1]
  %161 = insertvalue { i64, i8* } undef, i64 %160, 0 ; [#uses = 1]
  %162 = insertvalue { i64, i8* } %161, i8* %lowerbound94, 1 ; [#uses = 1]
  store { i64, i8* } { i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0) }, { i64, i8* }* %.getAddressOf_dump, align 8
  call void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTAaTQdTQnTaZQCeFNaNfKQByQxQzQBiMKxSQEeQEd4spec__T10FormatSpecTaZQpbZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %156, { i64, i8* } %162, { i64, i8* }* byval({ i64, i8* }) align 8 %.getAddressOf_dump, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f, i1 zeroext true) #1
  ret void

dummy.afterreturn:                                ; No predecessors!
  br label %endif57

bounds.fail92:                                    ; preds = %bounds.ok89
  call void @_d_arraybounds_slice({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 224, i64 %158, i64 64, i64 64) #5
  unreachable

bounds.fail90:                                    ; preds = %endif85
  call void @_d_arraybounds_slice({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 224, i64 %150, i64 %151, i64 3) #5
  unreachable

endif57:                                          ; preds = %dummy.afterreturn, %ororend54
  %163 = bitcast %"std.format.spec.FormatSpec!char.FormatSpec"* %fs to i8* ; [#uses = 1]
  %164 = bitcast %"std.format.spec.FormatSpec!char.FormatSpec"* %f to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %163, i8* align 1 %164, i64 72, i1 false)
  %165 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %166 = load i32, i32* %165, align 4             ; [#uses = 1]
  %167 = icmp eq i32 %166, 2147483646             ; [#uses = 1]
  br i1 %167, label %if95, label %endif96

if95:                                             ; preds = %endif57
  %168 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %fs, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %169 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %170 = sub i64 64, %169                         ; [#uses = 1]
  %171 = sub i64 %170, 2                          ; [#uses = 1]
  %172 = trunc i64 %171 to i32                    ; [#uses = 1]
  store i32 %172, i32* %168, align 4
  br label %endif96

endif96:                                          ; preds = %if95, %endif57
  %173 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %174 = load i8, i8* %173, align 1               ; [#uses = 1]
  %175 = zext i8 %174 to i32                      ; [#uses = 1]
  %176 = icmp eq i32 %175, 102                    ; [#uses = 1]
  br i1 %176, label %ororend98, label %oror97

oror97:                                           ; preds = %endif96
  %177 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %178 = load i8, i8* %177, align 1               ; [#uses = 1]
  %179 = zext i8 %178 to i32                      ; [#uses = 1]
  %180 = icmp eq i32 %179, 70                     ; [#uses = 1]
  br label %ororend98

ororend98:                                        ; preds = %oror97, %endif96
  %ororval99 = phi i1 [ true, %endif96 ], [ %180, %oror97 ] ; [#uses = 1, type = i1]
  br i1 %ororval99, label %ororend101, label %oror100

oror100:                                          ; preds = %ororend98
  %181 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %182 = load i8, i8* %181, align 1               ; [#uses = 1]
  %183 = zext i8 %182 to i32                      ; [#uses = 1]
  %184 = icmp eq i32 %183, 103                    ; [#uses = 1]
  br i1 %184, label %ororend103, label %oror102

oror102:                                          ; preds = %oror100
  %185 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %186 = load i8, i8* %185, align 1               ; [#uses = 1]
  %187 = zext i8 %186 to i32                      ; [#uses = 1]
  %188 = icmp eq i32 %187, 71                     ; [#uses = 1]
  br label %ororend103

ororend103:                                       ; preds = %oror102, %oror100
  %ororval104 = phi i1 [ true, %oror100 ], [ %188, %oror102 ] ; [#uses = 1, type = i1]
  br i1 %ororval104, label %andand105, label %andandend106

andand105:                                        ; preds = %ororend103
  %189 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %fs, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %190 = load i32, i32* %189, align 4             ; [#uses = 1]
  %191 = sext i32 %190 to i64                     ; [#uses = 1]
  %192 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %193 = sub i64 64, %192                         ; [#uses = 1]
  %194 = sub i64 %193, 2                          ; [#uses = 1]
  %195 = icmp uge i64 %191, %194                  ; [#uses = 1]
  br label %andandend106

andandend106:                                     ; preds = %andand105, %ororend103
  %andandval107 = phi i1 [ false, %ororend103 ], [ %195, %andand105 ] ; [#uses = 1, type = i1]
  br label %ororend101

ororend101:                                       ; preds = %andandend106, %ororend98
  %ororval108 = phi i1 [ true, %ororend98 ], [ %andandval107, %andandend106 ] ; [#uses = 1, type = i1]
  br i1 %ororval108, label %if109, label %endif110

if109:                                            ; preds = %ororend101
  %196 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %197 = load i32, i32* %196, align 4             ; [#uses = 1]
  %198 = icmp eq i32 %197, 2147483646             ; [#uses = 1]
  br i1 %198, label %if111, label %endif112

if111:                                            ; preds = %if109
  %199 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %fs, i32 0, i32 1 ; [#uses = 1, type = i32*]
  store i32 0, i32* %199, align 4
  br label %endif112

endif112:                                         ; preds = %if111, %if109
  %200 = load i64, i64* %left, align 8            ; [#uses = 4]
  %201 = load i64, i64* %right, align 8           ; [#uses = 4]
  %bounds.cmp.up115 = icmp ule i64 %201, 3        ; [#uses = 1]
  %bounds.cmp.lo116 = icmp ule i64 %200, %201     ; [#uses = 1]
  %202 = and i1 %bounds.cmp.up115, %bounds.cmp.lo116 ; [#uses = 1]
  br i1 %202, label %bounds.ok113, label %bounds.fail114

bounds.ok113:                                     ; preds = %endif112
  %203 = bitcast [3 x i8]* %prefix to i8*         ; [#uses = 1]
  %lowerbound117 = getelementptr inbounds i8, i8* %203, i64 %200 ; [#uses = 1, type = i8*]
  %204 = sub i64 %201, %200                       ; [#uses = 1]
  %205 = insertvalue { i64, i8* } undef, i64 %204, 0 ; [#uses = 1]
  %206 = insertvalue { i64, i8* } %205, i8* %lowerbound117, 1 ; [#uses = 1]
  %207 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %208 = add i64 %207, 1                          ; [#uses = 4]
  %bounds.cmp.lo120 = icmp ule i64 %208, 64       ; [#uses = 1]
  br i1 %bounds.cmp.lo120, label %bounds.ok118, label %bounds.fail119

bounds.ok118:                                     ; preds = %bounds.ok113
  %209 = bitcast [64 x i8]* %digits to i8*        ; [#uses = 1]
  %lowerbound121 = getelementptr inbounds i8, i8* %209, i64 %208 ; [#uses = 1, type = i8*]
  %210 = sub i64 64, %208                         ; [#uses = 1]
  %211 = insertvalue { i64, i8* } undef, i64 %210, 0 ; [#uses = 1]
  %212 = insertvalue { i64, i8* } %211, i8* %lowerbound121, 1 ; [#uses = 1]
  store { i64, i8* } { i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.97, i32 0, i32 0) }, { i64, i8* }* %.getAddressOf_dump122, align 8
  store { i64, i8* } { i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0) }, { i64, i8* }* %.getAddressOf_dump123, align 8
  %213 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %214 = load i8, i8* %213, align 1               ; [#uses = 1]
  %215 = zext i8 %214 to i32                      ; [#uses = 1]
  %216 = icmp eq i32 %215, 103                    ; [#uses = 1]
  br i1 %216, label %ororend129, label %oror128

oror128:                                          ; preds = %bounds.ok118
  %217 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %218 = load i8, i8* %217, align 1               ; [#uses = 1]
  %219 = zext i8 %218 to i32                      ; [#uses = 1]
  %220 = icmp eq i32 %219, 71                     ; [#uses = 1]
  br label %ororend129

ororend129:                                       ; preds = %oror128, %bounds.ok118
  %ororval130 = phi i1 [ true, %bounds.ok118 ], [ %220, %oror128 ] ; [#uses = 1, type = i1]
  br i1 %ororval130, label %condtrue125, label %condfalse126

condtrue125:                                      ; preds = %ororend129
  store i32 3, i32* %.makelvaluetmp131, align 4
  store i32* %.makelvaluetmp131, i32** %condtmp124, align 8
  br label %condend127

condfalse126:                                     ; preds = %ororend129
  store i32 2, i32* %.makelvaluetmp132, align 4
  store i32* %.makelvaluetmp132, i32** %condtmp124, align 8
  br label %condend127

condend127:                                       ; preds = %condfalse126, %condtrue125
  %221 = load i32*, i32** %condtmp124, align 8    ; [#uses = 1]
  %222 = load i32, i32* %221, align 4             ; [#uses = 1]
  call void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTAaTQdTQnTQqTaZQChFNaNfKQCbQBaQBdQBnQBqMKxSQEmQEl4spec__T10FormatSpecTaZQpEQFsQFrQFnQFh13PrecisionTypeZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %206, { i64, i8* } %212, { i64, i8* }* byval({ i64, i8* }) align 8 %.getAddressOf_dump122, { i64, i8* }* byval({ i64, i8* }) align 8 %.getAddressOf_dump123, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %fs, i32 %222) #1
  ret void

dummy.afterreturn133:                             ; No predecessors!
  br label %endif110

bounds.fail119:                                   ; preds = %bounds.ok113
  call void @_d_arraybounds_slice({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 239, i64 %208, i64 64, i64 64) #5
  unreachable

bounds.fail114:                                   ; preds = %endif112
  call void @_d_arraybounds_slice({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 239, i64 %200, i64 %201, i64 3) #5
  unreachable

endif110:                                         ; preds = %dummy.afterreturn133, %ororend101
  %223 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %224 = load i8, i8* %223, align 1               ; [#uses = 1]
  %225 = zext i8 %224 to i32                      ; [#uses = 1]
  %226 = icmp eq i32 %225, 103                    ; [#uses = 1]
  br i1 %226, label %ororend135, label %oror134

oror134:                                          ; preds = %endif110
  %227 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %228 = load i8, i8* %227, align 1               ; [#uses = 1]
  %229 = zext i8 %228 to i32                      ; [#uses = 1]
  %230 = icmp eq i32 %229, 71                     ; [#uses = 1]
  br label %ororend135

ororend135:                                       ; preds = %oror134, %endif110
  %ororval136 = phi i1 [ true, %endif110 ], [ %230, %oror134 ] ; [#uses = 1, type = i1]
  br i1 %ororval136, label %andand137, label %andandend138

andand137:                                        ; preds = %ororend135
  %231 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %fs, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %232 = load i32, i32* %231, align 4             ; [#uses = 1]
  %233 = icmp eq i32 %232, 0                      ; [#uses = 1]
  br label %andandend138

andandend138:                                     ; preds = %andand137, %ororend135
  %andandval139 = phi i1 [ false, %ororend135 ], [ %233, %andand137 ] ; [#uses = 1, type = i1]
  br i1 %andandval139, label %if140, label %endif141

if140:                                            ; preds = %andandend138
  %234 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %fs, i32 0, i32 1 ; [#uses = 1, type = i32*]
  store i32 1, i32* %234, align 4
  br label %endif141

endif141:                                         ; preds = %if140, %andandend138
  %235 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %236 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %fs, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %237 = load i32, i32* %236, align 4             ; [#uses = 1]
  %238 = sext i32 %237 to i64                     ; [#uses = 1]
  %239 = add i64 %235, %238                       ; [#uses = 1]
  %240 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %241 = load i8, i8* %240, align 1               ; [#uses = 1]
  %242 = zext i8 %241 to i32                      ; [#uses = 1]
  %243 = icmp eq i32 %242, 103                    ; [#uses = 1]
  br i1 %243, label %ororend147, label %oror146

oror146:                                          ; preds = %endif141
  %244 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %245 = load i8, i8* %244, align 1               ; [#uses = 1]
  %246 = zext i8 %245 to i32                      ; [#uses = 1]
  %247 = icmp eq i32 %246, 71                     ; [#uses = 1]
  br label %ororend147

ororend147:                                       ; preds = %oror146, %endif141
  %ororval148 = phi i1 [ true, %endif141 ], [ %247, %oror146 ] ; [#uses = 1, type = i1]
  br i1 %ororval148, label %condtrue143, label %condfalse144

condtrue143:                                      ; preds = %ororend147
  store i64 1, i64* %.makelvaluetmp149, align 8
  store i64* %.makelvaluetmp149, i64** %condtmp142, align 8
  br label %condend145

condfalse144:                                     ; preds = %ororend147
  store i64 2, i64* %.makelvaluetmp150, align 8
  store i64* %.makelvaluetmp150, i64** %condtmp142, align 8
  br label %condend145

condend145:                                       ; preds = %condfalse144, %condtrue143
  %248 = load i64*, i64** %condtmp142, align 8    ; [#uses = 1]
  %249 = load i64, i64* %248, align 8             ; [#uses = 1]
  %250 = add i64 %239, %249                       ; [#uses = 1]
  store i64 %250, i64* %digit_end, align 8
  %251 = load i64, i64* %digit_end, align 8       ; [#uses = 1]
  %252 = icmp ule i64 %251, 64                    ; [#uses = 1]
  br i1 %252, label %if151, label %endif152

if151:                                            ; preds = %condend145
  store i32 0, i32* %rt, align 4
  %253 = load i64, i64* %digit_end, align 8       ; [#uses = 1]
  %254 = icmp ult i64 %253, 64                    ; [#uses = 1]
  br i1 %254, label %if153, label %endif154

if153:                                            ; preds = %if151
  %255 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %256 = load i8, i8* %255, align 1               ; [#uses = 1]
  %257 = zext i8 %256 to i32                      ; [#uses = 1]
  %258 = icmp eq i32 %257, 97                     ; [#uses = 1]
  br i1 %258, label %ororend160, label %oror159

oror159:                                          ; preds = %if153
  %259 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %260 = load i8, i8* %259, align 1               ; [#uses = 1]
  %261 = zext i8 %260 to i32                      ; [#uses = 1]
  %262 = icmp eq i32 %261, 65                     ; [#uses = 1]
  br label %ororend160

ororend160:                                       ; preds = %oror159, %if153
  %ororval161 = phi i1 [ true, %if153 ], [ %262, %oror159 ] ; [#uses = 1, type = i1]
  br i1 %ororval161, label %condtrue156, label %condfalse157

condtrue156:                                      ; preds = %ororend160
  store i8 56, i8* %.makelvaluetmp162, align 1
  store i8* %.makelvaluetmp162, i8** %condtmp155, align 8
  br label %condend158

condfalse157:                                     ; preds = %ororend160
  store i8 53, i8* %.makelvaluetmp163, align 1
  store i8* %.makelvaluetmp163, i8** %condtmp155, align 8
  br label %condend158

condend158:                                       ; preds = %condfalse157, %condtrue156
  %263 = load i8*, i8** %condtmp155, align 8      ; [#uses = 1]
  %264 = load i8, i8* %263, align 1               ; [#uses = 1]
  store i8 %264, i8* %tie, align 1
  %265 = load i64, i64* %digit_end, align 8       ; [#uses = 2]
  %bounds.cmp164 = icmp ult i64 %265, 64          ; [#uses = 1]
  br i1 %bounds.cmp164, label %bounds.ok165, label %bounds.fail166

bounds.ok165:                                     ; preds = %condend158
  %266 = load i64, i64* %digit_end, align 8       ; [#uses = 1]
  %267 = getelementptr inbounds [64 x i8], [64 x i8]* %digits, i32 0, i64 %266 ; [#uses = 1, type = i8*]
  %268 = load i8, i8* %267, align 1               ; [#uses = 1]
  %269 = zext i8 %268 to i32                      ; [#uses = 1]
  %270 = load i8, i8* %tie, align 1               ; [#uses = 1]
  %271 = zext i8 %270 to i32                      ; [#uses = 1]
  %272 = icmp sge i32 %269, %271                  ; [#uses = 1]
  br i1 %272, label %if167, label %else169

if167:                                            ; preds = %bounds.ok165
  store i32 3, i32* %rt, align 4
  %273 = load i64, i64* %digit_end, align 8       ; [#uses = 2]
  %bounds.cmp170 = icmp ult i64 %273, 64          ; [#uses = 1]
  br i1 %bounds.cmp170, label %bounds.ok171, label %bounds.fail172

bounds.ok171:                                     ; preds = %if167
  %274 = load i64, i64* %digit_end, align 8       ; [#uses = 1]
  %275 = getelementptr inbounds [64 x i8], [64 x i8]* %digits, i32 0, i64 %274 ; [#uses = 1, type = i8*]
  %276 = load i8, i8* %275, align 1               ; [#uses = 1]
  %277 = zext i8 %276 to i32                      ; [#uses = 1]
  %278 = load i8, i8* %tie, align 1               ; [#uses = 1]
  %279 = zext i8 %278 to i32                      ; [#uses = 1]
  %280 = icmp eq i32 %277, %279                   ; [#uses = 1]
  br i1 %280, label %andand173, label %andandend174

andand173:                                        ; preds = %bounds.ok171
  %281 = load i64, i64* %digit_end, align 8       ; [#uses = 1]
  %282 = add i64 %281, 1                          ; [#uses = 4]
  %bounds.cmp.lo177 = icmp ule i64 %282, 64       ; [#uses = 1]
  br i1 %bounds.cmp.lo177, label %bounds.ok175, label %bounds.fail176

bounds.ok175:                                     ; preds = %andand173
  %283 = bitcast [64 x i8]* %digits to i8*        ; [#uses = 1]
  %lowerbound178 = getelementptr inbounds i8, i8* %283, i64 %282 ; [#uses = 1, type = i8*]
  %284 = sub i64 64, %282                         ; [#uses = 1]
  %285 = insertvalue { i64, i8* } undef, i64 %284, 0 ; [#uses = 1]
  %286 = insertvalue { i64, i8* } %285, i8* %lowerbound178, 1 ; [#uses = 1]
  %287 = call zeroext i1 @_D3std9algorithm9searching__T3allSQBg6format8internal5write__T20formatValueImplUlongTSQDg5array__T8AppenderTAyaZQoTaZQCdFKQBlmIbMKxSQFaQDu4spec__T10FormatSpecTaZQpZ10__lambda16Z__TQFvTAaZQGcMFNaNfQmZb(i8* nonnull null, { i64, i8* } %286) #1 ; [#uses = 1]
  br label %andandend174

bounds.fail176:                                   ; preds = %andand173
  call void @_d_arraybounds_slice({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 262, i64 %282, i64 64, i64 64) #5
  unreachable

andandend174:                                     ; preds = %bounds.ok175, %bounds.ok171
  %andandval179 = phi i1 [ false, %bounds.ok171 ], [ %287, %bounds.ok175 ] ; [#uses = 1, type = i1]
  br i1 %andandval179, label %if180, label %endif181

if180:                                            ; preds = %andandend174
  store i32 2, i32* %rt, align 4
  br label %endif181

endif181:                                         ; preds = %if180, %andandend174
  br label %endif168

bounds.fail172:                                   ; preds = %if167
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 262, i64 %273, i64 64) #5
  unreachable

else169:                                          ; preds = %bounds.ok165
  store i32 1, i32* %rt, align 4
  %288 = load i64, i64* %digit_end, align 8       ; [#uses = 4]
  %bounds.cmp.lo184 = icmp ule i64 %288, 64       ; [#uses = 1]
  br i1 %bounds.cmp.lo184, label %bounds.ok182, label %bounds.fail183

bounds.ok182:                                     ; preds = %else169
  %289 = bitcast [64 x i8]* %digits to i8*        ; [#uses = 1]
  %lowerbound185 = getelementptr inbounds i8, i8* %289, i64 %288 ; [#uses = 1, type = i8*]
  %290 = sub i64 64, %288                         ; [#uses = 1]
  %291 = insertvalue { i64, i8* } undef, i64 %290, 0 ; [#uses = 1]
  %292 = insertvalue { i64, i8* } %291, i8* %lowerbound185, 1 ; [#uses = 1]
  %293 = call zeroext i1 @_D3std9algorithm9searching__T3allSQBg6format8internal5write__T20formatValueImplUlongTSQDg5array__T8AppenderTAyaZQoTaZQCdFKQBlmIbMKxSQFaQDu4spec__T10FormatSpecTaZQpZ10__lambda17Z__TQFvTAaZQGcMFNaNfQmZb(i8* nonnull null, { i64, i8* } %292) #1 ; [#uses = 1]
  br i1 %293, label %if186, label %endif187

if186:                                            ; preds = %bounds.ok182
  store i32 0, i32* %rt, align 4
  br label %endif187

endif187:                                         ; preds = %if186, %bounds.ok182
  br label %endif168

bounds.fail183:                                   ; preds = %else169
  call void @_d_arraybounds_slice({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 268, i64 %288, i64 64, i64 64) #5
  unreachable

endif168:                                         ; preds = %endif187, %endif181
  br label %endif154

bounds.fail166:                                   ; preds = %condend158
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 259, i64 %265, i64 64) #5
  unreachable

endif154:                                         ; preds = %endif168, %if151
  %294 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %295 = add i64 %294, 1                          ; [#uses = 1]
  %296 = load i64, i64* %digit_end, align 8       ; [#uses = 1]
  %297 = load i32, i32* %rt, align 4              ; [#uses = 1]
  %298 = load i8, i8* %negative, align 1          ; [#uses = 1]
  %299 = trunc i8 %298 to i1                      ; [#uses = 1]
  %300 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %301 = load i8, i8* %300, align 1               ; [#uses = 1]
  %302 = zext i8 %301 to i32                      ; [#uses = 1]
  %303 = icmp eq i32 %302, 97                     ; [#uses = 1]
  br i1 %303, label %condtrue189, label %condfalse190

condtrue189:                                      ; preds = %endif154
  store i8 102, i8* %.makelvaluetmp192, align 1
  store i8* %.makelvaluetmp192, i8** %condtmp188, align 8
  br label %condend191

condfalse190:                                     ; preds = %endif154
  %304 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %305 = load i8, i8* %304, align 1               ; [#uses = 1]
  %306 = zext i8 %305 to i32                      ; [#uses = 1]
  %307 = icmp eq i32 %306, 65                     ; [#uses = 1]
  br i1 %307, label %condtrue194, label %condfalse195

condtrue194:                                      ; preds = %condfalse190
  store i8 70, i8* %.makelvaluetmp197, align 1
  store i8* %.makelvaluetmp197, i8** %condtmp193, align 8
  br label %condend196

condfalse195:                                     ; preds = %condfalse190
  store i8 57, i8* %.makelvaluetmp198, align 1
  store i8* %.makelvaluetmp198, i8** %condtmp193, align 8
  br label %condend196

condend196:                                       ; preds = %condfalse195, %condtrue194
  %308 = load i8*, i8** %condtmp193, align 8      ; [#uses = 1]
  store i8* %308, i8** %condtmp188, align 8
  br label %condend191

condend191:                                       ; preds = %condend196, %condtrue189
  %309 = load i8*, i8** %condtmp188, align 8      ; [#uses = 1]
  %310 = load i8, i8* %309, align 1               ; [#uses = 1]
  %311 = call zeroext i1 @_D3std6format8internal5write__T5roundTG64aZQmFNaNbNiNfKQrmmEQCgQCfQCbQBv13RoundingClassbaZb([64 x i8]* dereferenceable(64) %digits, i64 %295, i64 %296, i32 %297, i1 zeroext %299, i8 zeroext %310) #1 ; [#uses = 1]
  br i1 %311, label %if199, label %endif200

if199:                                            ; preds = %condend191
  %312 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %313 = sub i64 %312, 1                          ; [#uses = 1]
  store i64 %313, i64* %pos, align 8
  %314 = load i64, i64* %digit_end, align 8       ; [#uses = 1]
  %315 = sub i64 %314, 1                          ; [#uses = 1]
  store i64 %315, i64* %digit_end, align 8
  br label %endif200

endif200:                                         ; preds = %if199, %condend191
  br label %endif152

endif152:                                         ; preds = %endif200, %condend145
  %316 = getelementptr inbounds [1 x i8], [1 x i8]* %int_digit, i32 0, i64 0 ; [#uses = 1, type = i8*]
  %317 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %318 = add i64 %317, 1                          ; [#uses = 3]
  %bounds.cmp201 = icmp ult i64 %318, 64          ; [#uses = 1]
  br i1 %bounds.cmp201, label %bounds.ok202, label %bounds.fail203

bounds.ok202:                                     ; preds = %endif152
  %319 = getelementptr inbounds [64 x i8], [64 x i8]* %digits, i32 0, i64 %318 ; [#uses = 1, type = i8*]
  %320 = load i8, i8* %319, align 1               ; [#uses = 1]
  store i8 %320, i8* %316, align 1
  %321 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %322 = add i64 %321, 1                          ; [#uses = 3]
  %bounds.cmp204 = icmp ult i64 %322, 64          ; [#uses = 1]
  br i1 %bounds.cmp204, label %bounds.ok205, label %bounds.fail206

bounds.ok205:                                     ; preds = %bounds.ok202
  %323 = getelementptr inbounds [64 x i8], [64 x i8]* %digits, i32 0, i64 %322 ; [#uses = 1, type = i8*]
  store i8 46, i8* %323, align 1
  %324 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %325 = load i8, i8* %324, align 1               ; [#uses = 1]
  %326 = zext i8 %325 to i32                      ; [#uses = 1]
  %327 = icmp eq i32 %326, 101                    ; [#uses = 1]
  br i1 %327, label %ororend208, label %oror207

oror207:                                          ; preds = %bounds.ok205
  %328 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %329 = load i8, i8* %328, align 1               ; [#uses = 1]
  %330 = zext i8 %329 to i32                      ; [#uses = 1]
  %331 = icmp eq i32 %330, 69                     ; [#uses = 1]
  br label %ororend208

ororend208:                                       ; preds = %oror207, %bounds.ok205
  %ororval209 = phi i1 [ true, %bounds.ok205 ], [ %331, %oror207 ] ; [#uses = 1, type = i1]
  br i1 %ororval209, label %ororend211, label %oror210

oror210:                                          ; preds = %ororend208
  %332 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %333 = load i8, i8* %332, align 1               ; [#uses = 1]
  %334 = zext i8 %333 to i32                      ; [#uses = 1]
  %335 = icmp eq i32 %334, 103                    ; [#uses = 1]
  br label %ororend211

ororend211:                                       ; preds = %oror210, %ororend208
  %ororval212 = phi i1 [ true, %ororend208 ], [ %335, %oror210 ] ; [#uses = 1, type = i1]
  br i1 %ororval212, label %ororend214, label %oror213

oror213:                                          ; preds = %ororend211
  %336 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %337 = load i8, i8* %336, align 1               ; [#uses = 1]
  %338 = zext i8 %337 to i32                      ; [#uses = 1]
  %339 = icmp eq i32 %338, 71                     ; [#uses = 1]
  br label %ororend214

ororend214:                                       ; preds = %oror213, %ororend211
  %ororval215 = phi i1 [ true, %ororend211 ], [ %339, %oror213 ] ; [#uses = 1, type = i1]
  br i1 %ororval215, label %if216, label %else218

if216:                                            ; preds = %ororend214
  %340 = getelementptr inbounds [4 x i8], [4 x i8]* %suffix, i32 0, i64 0 ; [#uses = 1, type = i8*]
  %341 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %342 = load i8, i8* %341, align 1               ; [#uses = 1]
  %343 = zext i8 %342 to i32                      ; [#uses = 1]
  %344 = icmp eq i32 %343, 101                    ; [#uses = 1]
  br i1 %344, label %ororend224, label %oror223

oror223:                                          ; preds = %if216
  %345 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %346 = load i8, i8* %345, align 1               ; [#uses = 1]
  %347 = zext i8 %346 to i32                      ; [#uses = 1]
  %348 = icmp eq i32 %347, 103                    ; [#uses = 1]
  br label %ororend224

ororend224:                                       ; preds = %oror223, %if216
  %ororval225 = phi i1 [ true, %if216 ], [ %348, %oror223 ] ; [#uses = 1, type = i1]
  br i1 %ororval225, label %condtrue220, label %condfalse221

condtrue220:                                      ; preds = %ororend224
  store i8 101, i8* %.makelvaluetmp226, align 1
  store i8* %.makelvaluetmp226, i8** %condtmp219, align 8
  br label %condend222

condfalse221:                                     ; preds = %ororend224
  store i8 69, i8* %.makelvaluetmp227, align 1
  store i8* %.makelvaluetmp227, i8** %condtmp219, align 8
  br label %condend222

condend222:                                       ; preds = %condfalse221, %condtrue220
  %349 = load i8*, i8** %condtmp219, align 8      ; [#uses = 1]
  %350 = load i8, i8* %349, align 1               ; [#uses = 1]
  store i8 %350, i8* %340, align 1
  %351 = getelementptr inbounds [4 x i8], [4 x i8]* %suffix, i32 0, i64 1 ; [#uses = 1, type = i8*]
  store i8 43, i8* %351, align 1
  %352 = getelementptr inbounds [4 x i8], [4 x i8]* %suffix, i32 0, i64 2 ; [#uses = 1, type = i8*]
  %353 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %354 = sub i64 64, %353                         ; [#uses = 1]
  %355 = sub i64 %354, 2                          ; [#uses = 1]
  %356 = udiv i64 %355, 10                        ; [#uses = 1]
  %357 = add i64 48, %356                         ; [#uses = 1]
  %358 = trunc i64 %357 to i8                     ; [#uses = 1]
  store i8 %358, i8* %352, align 1
  %359 = getelementptr inbounds [4 x i8], [4 x i8]* %suffix, i32 0, i64 3 ; [#uses = 1, type = i8*]
  %360 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %361 = sub i64 64, %360                         ; [#uses = 1]
  %362 = sub i64 %361, 2                          ; [#uses = 1]
  %363 = urem i64 %362, 10                        ; [#uses = 1]
  %364 = add i64 48, %363                         ; [#uses = 1]
  %365 = trunc i64 %364 to i8                     ; [#uses = 1]
  store i8 %365, i8* %359, align 1
  br label %endif217

else218:                                          ; preds = %ororend214
  %366 = load i64, i64* %right, align 8           ; [#uses = 1]
  %367 = icmp eq i64 %366, 3                      ; [#uses = 1]
  br i1 %367, label %if228, label %endif229

if228:                                            ; preds = %else218
  %368 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix, i32 0, i64 0 ; [#uses = 1, type = i8*]
  %369 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix, i32 0, i64 2 ; [#uses = 1, type = i8*]
  %370 = load i8, i8* %369, align 1               ; [#uses = 1]
  store i8 %370, i8* %368, align 1
  br label %endif229

endif229:                                         ; preds = %if228, %else218
  %371 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix, i32 0, i64 1 ; [#uses = 1, type = i8*]
  store i8 48, i8* %371, align 1
  %372 = getelementptr inbounds [3 x i8], [3 x i8]* %prefix, i32 0, i64 2 ; [#uses = 1, type = i8*]
  %373 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %374 = load i8, i8* %373, align 1               ; [#uses = 1]
  %375 = zext i8 %374 to i32                      ; [#uses = 1]
  %376 = icmp eq i32 %375, 97                     ; [#uses = 1]
  br i1 %376, label %condtrue231, label %condfalse232

condtrue231:                                      ; preds = %endif229
  store i8 120, i8* %.makelvaluetmp234, align 1
  store i8* %.makelvaluetmp234, i8** %condtmp230, align 8
  br label %condend233

condfalse232:                                     ; preds = %endif229
  store i8 88, i8* %.makelvaluetmp235, align 1
  store i8* %.makelvaluetmp235, i8** %condtmp230, align 8
  br label %condend233

condend233:                                       ; preds = %condfalse232, %condtrue231
  %377 = load i8*, i8** %condtmp230, align 8      ; [#uses = 1]
  %378 = load i8, i8* %377, align 1               ; [#uses = 1]
  store i8 %378, i8* %372, align 1
  %379 = load i64, i64* %right, align 8           ; [#uses = 1]
  %380 = icmp eq i64 %379, 3                      ; [#uses = 1]
  br i1 %380, label %condtrue237, label %condfalse238

condtrue237:                                      ; preds = %condend233
  store i64 0, i64* %.makelvaluetmp240, align 8
  store i64* %.makelvaluetmp240, i64** %condtmp236, align 8
  br label %condend239

condfalse238:                                     ; preds = %condend233
  store i64 1, i64* %.makelvaluetmp241, align 8
  store i64* %.makelvaluetmp241, i64** %condtmp236, align 8
  br label %condend239

condend239:                                       ; preds = %condfalse238, %condtrue237
  %381 = load i64*, i64** %condtmp236, align 8    ; [#uses = 1]
  %382 = load i64, i64* %381, align 8             ; [#uses = 1]
  store i64 %382, i64* %left, align 8
  store i64 3, i64* %right, align 8
  %383 = getelementptr inbounds [4 x i8], [4 x i8]* %suffix, i32 0, i64 0 ; [#uses = 1, type = i8*]
  %384 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %385 = load i8, i8* %384, align 1               ; [#uses = 1]
  %386 = zext i8 %385 to i32                      ; [#uses = 1]
  %387 = icmp eq i32 %386, 97                     ; [#uses = 1]
  br i1 %387, label %condtrue243, label %condfalse244

condtrue243:                                      ; preds = %condend239
  store i8 112, i8* %.makelvaluetmp246, align 1
  store i8* %.makelvaluetmp246, i8** %condtmp242, align 8
  br label %condend245

condfalse244:                                     ; preds = %condend239
  store i8 80, i8* %.makelvaluetmp247, align 1
  store i8* %.makelvaluetmp247, i8** %condtmp242, align 8
  br label %condend245

condend245:                                       ; preds = %condfalse244, %condtrue243
  %388 = load i8*, i8** %condtmp242, align 8      ; [#uses = 1]
  %389 = load i8, i8* %388, align 1               ; [#uses = 1]
  store i8 %389, i8* %383, align 1
  %390 = getelementptr inbounds [4 x i8], [4 x i8]* %suffix, i32 0, i64 1 ; [#uses = 1, type = i8*]
  store i8 43, i8* %390, align 1
  %391 = getelementptr inbounds [4 x i8], [4 x i8]* %suffix, i32 0, i64 2 ; [#uses = 1, type = i8*]
  %392 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %393 = sub i64 64, %392                         ; [#uses = 1]
  %394 = sub i64 %393, 2                          ; [#uses = 1]
  %395 = mul i64 %394, 4                          ; [#uses = 1]
  %396 = udiv i64 %395, 10                        ; [#uses = 1]
  %397 = add i64 48, %396                         ; [#uses = 1]
  %398 = trunc i64 %397 to i8                     ; [#uses = 1]
  store i8 %398, i8* %391, align 1
  %399 = getelementptr inbounds [4 x i8], [4 x i8]* %suffix, i32 0, i64 3 ; [#uses = 1, type = i8*]
  %400 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %401 = sub i64 64, %400                         ; [#uses = 1]
  %402 = sub i64 %401, 2                          ; [#uses = 1]
  %403 = mul i64 %402, 4                          ; [#uses = 1]
  %404 = urem i64 %403, 10                        ; [#uses = 1]
  %405 = add i64 48, %404                         ; [#uses = 1]
  %406 = trunc i64 %405 to i8                     ; [#uses = 1]
  store i8 %406, i8* %399, align 1
  br label %endif217

endif217:                                         ; preds = %condend245, %condend222
  %407 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %408 = load i8, i8* %407, align 1               ; [#uses = 1]
  %409 = zext i8 %408 to i32                      ; [#uses = 1]
  %410 = icmp eq i32 %409, 103                    ; [#uses = 1]
  br i1 %410, label %ororend249, label %oror248

oror248:                                          ; preds = %endif217
  %411 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %412 = load i8, i8* %411, align 1               ; [#uses = 1]
  %413 = zext i8 %412 to i32                      ; [#uses = 1]
  %414 = icmp eq i32 %413, 71                     ; [#uses = 1]
  br label %ororend249

ororend249:                                       ; preds = %oror248, %endif217
  %ororval250 = phi i1 [ true, %endif217 ], [ %414, %oror248 ] ; [#uses = 1, type = i1]
  br i1 %ororval250, label %andand251, label %andandend252

andand251:                                        ; preds = %ororend249
  %415 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flHashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  %416 = icmp eq i1 %415, false                   ; [#uses = 1]
  br label %andandend252

andandend252:                                     ; preds = %andand251, %ororend249
  %andandval253 = phi i1 [ false, %ororend249 ], [ %416, %andand251 ] ; [#uses = 1, type = i1]
  br i1 %andandval253, label %if254, label %endif255

if254:                                            ; preds = %andandend252
  %417 = load i64, i64* %digit_end, align 8       ; [#uses = 1]
  %418 = call i64 @_D3std9algorithm10comparison__T3minTmTmZQjFNaNbNiNfmmZm(i64 %417, i64 64) #1 ; [#uses = 1]
  store i64 %418, i64* %digit_end, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %if254
  %419 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %420 = add i64 %419, 1                          ; [#uses = 1]
  %421 = load i64, i64* %digit_end, align 8       ; [#uses = 1]
  %422 = icmp ugt i64 %421, %420                  ; [#uses = 1]
  br i1 %422, label %andand256, label %andandend257

andand256:                                        ; preds = %forcond
  %423 = load i64, i64* %digit_end, align 8       ; [#uses = 1]
  %424 = sub i64 %423, 1                          ; [#uses = 3]
  %bounds.cmp258 = icmp ult i64 %424, 64          ; [#uses = 1]
  br i1 %bounds.cmp258, label %bounds.ok259, label %bounds.fail260

bounds.ok259:                                     ; preds = %andand256
  %425 = getelementptr inbounds [64 x i8], [64 x i8]* %digits, i32 0, i64 %424 ; [#uses = 1, type = i8*]
  %426 = load i8, i8* %425, align 1               ; [#uses = 1]
  %427 = zext i8 %426 to i32                      ; [#uses = 1]
  %428 = icmp eq i32 %427, 48                     ; [#uses = 1]
  br i1 %428, label %ororend262, label %oror261

oror261:                                          ; preds = %bounds.ok259
  %429 = load i64, i64* %digit_end, align 8       ; [#uses = 1]
  %430 = sub i64 %429, 1                          ; [#uses = 3]
  %bounds.cmp263 = icmp ult i64 %430, 64          ; [#uses = 1]
  br i1 %bounds.cmp263, label %bounds.ok264, label %bounds.fail265

bounds.ok264:                                     ; preds = %oror261
  %431 = getelementptr inbounds [64 x i8], [64 x i8]* %digits, i32 0, i64 %430 ; [#uses = 1, type = i8*]
  %432 = load i8, i8* %431, align 1               ; [#uses = 1]
  %433 = zext i8 %432 to i32                      ; [#uses = 1]
  %434 = icmp eq i32 %433, 46                     ; [#uses = 1]
  br label %ororend262

bounds.fail265:                                   ; preds = %oror261
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 318, i64 %430, i64 64) #5
  unreachable

ororend262:                                       ; preds = %bounds.ok264, %bounds.ok259
  %ororval266 = phi i1 [ true, %bounds.ok259 ], [ %434, %bounds.ok264 ] ; [#uses = 1, type = i1]
  br label %andandend257

bounds.fail260:                                   ; preds = %andand256
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 318, i64 %424, i64 64) #5
  unreachable

andandend257:                                     ; preds = %ororend262, %forcond
  %andandval267 = phi i1 [ false, %forcond ], [ %ororval266, %ororend262 ] ; [#uses = 1, type = i1]
  br i1 %andandval267, label %forbody, label %endfor

forbody:                                          ; preds = %andandend257
  %435 = load i64, i64* %digit_end, align 8       ; [#uses = 1]
  %436 = sub i64 %435, 1                          ; [#uses = 1]
  store i64 %436, i64* %digit_end, align 8
  br label %forinc

forinc:                                           ; preds = %forbody
  br label %forcond

endfor:                                           ; preds = %andandend257
  br label %endif255

endif255:                                         ; preds = %endfor, %andandend252
  %437 = load i64, i64* %left, align 8            ; [#uses = 4]
  %438 = load i64, i64* %right, align 8           ; [#uses = 4]
  %bounds.cmp.up270 = icmp ule i64 %438, 3        ; [#uses = 1]
  %bounds.cmp.lo271 = icmp ule i64 %437, %438     ; [#uses = 1]
  %439 = and i1 %bounds.cmp.up270, %bounds.cmp.lo271 ; [#uses = 1]
  br i1 %439, label %bounds.ok268, label %bounds.fail269

bounds.ok268:                                     ; preds = %endif255
  %440 = bitcast [3 x i8]* %prefix to i8*         ; [#uses = 1]
  %lowerbound272 = getelementptr inbounds i8, i8* %440, i64 %437 ; [#uses = 1, type = i8*]
  %441 = sub i64 %438, %437                       ; [#uses = 1]
  %442 = insertvalue { i64, i8* } undef, i64 %441, 0 ; [#uses = 1]
  %443 = insertvalue { i64, i8* } %442, i8* %lowerbound272, 1 ; [#uses = 1]
  %444 = bitcast [1 x i8]* %int_digit to i8*      ; [#uses = 1]
  %lowerbound273 = getelementptr inbounds i8, i8* %444, i64 0 ; [#uses = 1, type = i8*]
  %445 = insertvalue { i64, i8* } { i64 1, i8* undef }, i8* %lowerbound273, 1 ; [#uses = 1]
  %446 = load i64, i64* %pos, align 8             ; [#uses = 1]
  %447 = add i64 %446, 1                          ; [#uses = 4]
  %448 = load i64, i64* %digit_end, align 8       ; [#uses = 1]
  %449 = call i64 @_D3std9algorithm10comparison__T3minTmTmZQjFNaNbNiNfmmZm(i64 %448, i64 64) #1 ; [#uses = 4]
  %bounds.cmp.up276 = icmp ule i64 %449, 64       ; [#uses = 1]
  %bounds.cmp.lo277 = icmp ule i64 %447, %449     ; [#uses = 1]
  %450 = and i1 %bounds.cmp.up276, %bounds.cmp.lo277 ; [#uses = 1]
  br i1 %450, label %bounds.ok274, label %bounds.fail275

bounds.ok274:                                     ; preds = %bounds.ok268
  %451 = bitcast [64 x i8]* %digits to i8*        ; [#uses = 1]
  %lowerbound278 = getelementptr inbounds i8, i8* %451, i64 %447 ; [#uses = 1, type = i8*]
  %452 = sub i64 %449, %447                       ; [#uses = 1]
  %453 = insertvalue { i64, i8* } undef, i64 %452, 0 ; [#uses = 1]
  %454 = insertvalue { i64, i8* } %453, i8* %lowerbound278, 1 ; [#uses = 1]
  store { i64, i8* } %454, { i64, i8* }* %.getAddressOf_dump279, align 8
  %455 = bitcast [4 x i8]* %suffix to i8*         ; [#uses = 1]
  %lowerbound280 = getelementptr inbounds i8, i8* %455, i64 0 ; [#uses = 1, type = i8*]
  %456 = insertvalue { i64, i8* } { i64 4, i8* undef }, i8* %lowerbound280, 1 ; [#uses = 1]
  store { i64, i8* } %456, { i64, i8* }* %.getAddressOf_dump281, align 8
  %457 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %458 = load i8, i8* %457, align 1               ; [#uses = 1]
  %459 = zext i8 %458 to i32                      ; [#uses = 1]
  %460 = icmp eq i32 %459, 103                    ; [#uses = 1]
  br i1 %460, label %ororend287, label %oror286

oror286:                                          ; preds = %bounds.ok274
  %461 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %462 = load i8, i8* %461, align 1               ; [#uses = 1]
  %463 = zext i8 %462 to i32                      ; [#uses = 1]
  %464 = icmp eq i32 %463, 71                     ; [#uses = 1]
  br label %ororend287

ororend287:                                       ; preds = %oror286, %bounds.ok274
  %ororval288 = phi i1 [ true, %bounds.ok274 ], [ %464, %oror286 ] ; [#uses = 1, type = i1]
  br i1 %ororval288, label %condtrue283, label %condfalse284

condtrue283:                                      ; preds = %ororend287
  store i32 3, i32* %.makelvaluetmp289, align 4
  store i32* %.makelvaluetmp289, i32** %condtmp282, align 8
  br label %condend285

condfalse284:                                     ; preds = %ororend287
  store i32 2, i32* %.makelvaluetmp290, align 4
  store i32* %.makelvaluetmp290, i32** %condtmp282, align 8
  br label %condend285

condend285:                                       ; preds = %condfalse284, %condtrue283
  %465 = load i32*, i32** %condtmp282, align 8    ; [#uses = 1]
  %466 = load i32, i32* %465, align 4             ; [#uses = 1]
  call void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTAaTQdTQgTQjTaZQChFNaNfKQCbQBaQBdQBgQBjMKxSQEmQEl4spec__T10FormatSpecTaZQpEQFsQFrQFnQFh13PrecisionTypeZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %443, { i64, i8* } %445, { i64, i8* }* byval({ i64, i8* }) align 8 %.getAddressOf_dump279, { i64, i8* }* byval({ i64, i8* }) align 8 %.getAddressOf_dump281, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %fs, i32 %466) #1
  ret void

bounds.fail275:                                   ; preds = %bounds.ok268
  call void @_d_arraybounds_slice({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 323, i64 %447, i64 %449, i64 64) #5
  unreachable

bounds.fail269:                                   ; preds = %endif255
  call void @_d_arraybounds_slice({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 322, i64 %437, i64 %438, i64 3) #5
  unreachable

bounds.fail206:                                   ; preds = %bounds.ok202
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 284, i64 %322, i64 64) #5
  unreachable

bounds.fail203:                                   ; preds = %endif152
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 283, i64 %318, i64 64) #5
  unreachable
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxiTaZQBxFKQBoKxiMKxSQDgQDf4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 46, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.82, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTiTaZQCaFNaNfKQBrxiMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32 %obj_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %obj = alloca i32, align 4                      ; [#uses = 2, size/byte = 4]
  %val = alloca i32, align 4                      ; [#uses = 5, size/byte = 4]
  %raw = alloca { i64, i8* }, align 8             ; [#uses = 6, size/byte = 16]
  %__r2161 = alloca { i64, i8* }, align 8         ; [#uses = 4, size/byte = 16]
  %__key2162 = alloca i64, align 8                ; [#uses = 4, size/byte = 8]
  %c = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %__r2163 = alloca { i64, i8* }, align 8         ; [#uses = 4, size/byte = 16]
  %__key2164 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %c14 = alloca i8, align 1                       ; [#uses = 2, size/byte = 1]
  %negative = alloca i8, align 1                  ; [#uses = 3, size/byte = 1]
  %arg = alloca i64, align 8                      ; [#uses = 4, size/byte = 8]
  %condtmp = alloca i64*, align 8                 ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp = alloca i64, align 8           ; [#uses = 2, size/byte = 8]
  %.makelvaluetmp28 = alloca i64, align 8         ; [#uses = 2, size/byte = 8]
  store i32 %obj_arg, i32* %obj, align 4
  %1 = load i32, i32* %obj, align 4               ; [#uses = 1]
  store i32 %1, i32* %val, align 4
  %2 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %3 = load i8, i8* %2, align 1                   ; [#uses = 1]
  %4 = zext i8 %3 to i32                          ; [#uses = 1]
  %5 = icmp eq i32 %4, 114                        ; [#uses = 1]
  br i1 %5, label %if, label %endif

if:                                               ; preds = %0
  %6 = call { i64, i8* } @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTiTaZQCaFKQBnxiMKxSQDrQDq4spec__T10FormatSpecTaZQpZ__T9__lambda5TiZQnFNaNbNiNeKiZAxa(i32* dereferenceable(4) %val) #0 ; [#uses = 2]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = extractvalue { i64, i8* } %6, 0         ; [#uses = 1]
  store i64 %.len, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = extractvalue { i64, i8* } %6, 1         ; [#uses = 1]
  store i8* %.ptr, i8** %8, align 8
  %9 = call zeroext i1 @_D3std6format8internal5write__T19needToSwapEndianessTaZQyFNaNbNiNfMKxSQCqQCp4spec__T10FormatSpecTaZQpZb(%"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1 ; [#uses = 1]
  br i1 %9, label %if1, label %else

if1:                                              ; preds = %if
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr3 = load i8*, i8** %10, align 8            ; [#uses = 2]
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len4 = load i64, i64* %11, align 8            ; [#uses = 2]
  %12 = insertvalue { i64, i8* } undef, i64 %.len4, 0 ; [#uses = 1]
  %13 = insertvalue { i64, i8* } %12, i8* %.ptr3, 1 ; [#uses = 0]
  %14 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2161, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %.len4, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2161, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %.ptr3, i8** %15, align 8
  %16 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2161, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len5 = load i64, i64* %16, align 8            ; [#uses = 1]
  store i64 %.len5, i64* %__key2162, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %if1
  %17 = load i64, i64* %__key2162, align 8        ; [#uses = 2]
  %18 = sub i64 %17, 1                            ; [#uses = 1]
  store i64 %18, i64* %__key2162, align 8
  %19 = icmp ne i64 %17, 0                        ; [#uses = 1]
  br i1 %19, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %20 = load i64, i64* %__key2162, align 8        ; [#uses = 1]
  %21 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2161, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr6 = load i8*, i8** %21, align 8            ; [#uses = 1]
  %22 = getelementptr inbounds i8, i8* %.ptr6, i64 %20 ; [#uses = 1, type = i8*]
  %23 = load i8, i8* %22, align 1                 ; [#uses = 1]
  store i8 %23, i8* %c, align 1
  %24 = load i8, i8* %c, align 1                  ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxaZQBmFNaNbNfKQBsxaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %24) #1
  br label %forinc

forinc:                                           ; preds = %forbody
  br label %forcond

endfor:                                           ; preds = %forcond
  br label %endif2

else:                                             ; preds = %if
  %25 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr7 = load i8*, i8** %25, align 8            ; [#uses = 2]
  %26 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len8 = load i64, i64* %26, align 8            ; [#uses = 2]
  %27 = insertvalue { i64, i8* } undef, i64 %.len8, 0 ; [#uses = 1]
  %28 = insertvalue { i64, i8* } %27, i8* %.ptr7, 1 ; [#uses = 0]
  %29 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2163, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %.len8, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2163, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %.ptr7, i8** %30, align 8
  store i64 0, i64* %__key2164, align 8
  br label %forcond9

forcond9:                                         ; preds = %forinc11, %else
  %31 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2163, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len13 = load i64, i64* %31, align 8           ; [#uses = 1]
  %32 = load i64, i64* %__key2164, align 8        ; [#uses = 1]
  %33 = icmp ult i64 %32, %.len13                 ; [#uses = 1]
  br i1 %33, label %forbody10, label %endfor12

forbody10:                                        ; preds = %forcond9
  %34 = load i64, i64* %__key2164, align 8        ; [#uses = 1]
  %35 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2163, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr15 = load i8*, i8** %35, align 8           ; [#uses = 1]
  %36 = getelementptr inbounds i8, i8* %.ptr15, i64 %34 ; [#uses = 1, type = i8*]
  %37 = load i8, i8* %36, align 1                 ; [#uses = 1]
  store i8 %37, i8* %c14, align 1
  %38 = load i8, i8* %c14, align 1                ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxaZQBmFNaNbNfKQBsxaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %38) #1
  br label %forinc11

forinc11:                                         ; preds = %forbody10
  %39 = load i64, i64* %__key2164, align 8        ; [#uses = 1]
  %40 = add i64 %39, 1                            ; [#uses = 1]
  store i64 %40, i64* %__key2164, align 8
  br label %forcond9

endfor12:                                         ; preds = %forcond9
  br label %endif2

endif2:                                           ; preds = %endfor12, %endfor
  ret void

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %0
  %41 = load i32, i32* %val, align 4              ; [#uses = 1]
  %42 = icmp slt i32 %41, 0                       ; [#uses = 1]
  br i1 %42, label %andand, label %andandend

andand:                                           ; preds = %endif
  %43 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %44 = load i8, i8* %43, align 1                 ; [#uses = 1]
  %45 = zext i8 %44 to i32                        ; [#uses = 1]
  %46 = icmp ne i32 %45, 120                      ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %endif
  %andandval = phi i1 [ false, %endif ], [ %46, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand16, label %andandend17

andand16:                                         ; preds = %andandend
  %47 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %48 = load i8, i8* %47, align 1                 ; [#uses = 1]
  %49 = zext i8 %48 to i32                        ; [#uses = 1]
  %50 = icmp ne i32 %49, 88                       ; [#uses = 1]
  br label %andandend17

andandend17:                                      ; preds = %andand16, %andandend
  %andandval18 = phi i1 [ false, %andandend ], [ %50, %andand16 ] ; [#uses = 1, type = i1]
  br i1 %andandval18, label %andand19, label %andandend20

andand19:                                         ; preds = %andandend17
  %51 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %52 = load i8, i8* %51, align 1                 ; [#uses = 1]
  %53 = zext i8 %52 to i32                        ; [#uses = 1]
  %54 = icmp ne i32 %53, 98                       ; [#uses = 1]
  br label %andandend20

andandend20:                                      ; preds = %andand19, %andandend17
  %andandval21 = phi i1 [ false, %andandend17 ], [ %54, %andand19 ] ; [#uses = 1, type = i1]
  br i1 %andandval21, label %andand22, label %andandend23

andand22:                                         ; preds = %andandend20
  %55 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %56 = load i8, i8* %55, align 1                 ; [#uses = 1]
  %57 = zext i8 %56 to i32                        ; [#uses = 1]
  %58 = icmp ne i32 %57, 111                      ; [#uses = 1]
  br label %andandend23

andandend23:                                      ; preds = %andand22, %andandend20
  %andandval24 = phi i1 [ false, %andandend20 ], [ %58, %andand22 ] ; [#uses = 1, type = i1]
  br i1 %andandval24, label %andand25, label %andandend26

andand25:                                         ; preds = %andandend23
  %59 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %60 = load i8, i8* %59, align 1                 ; [#uses = 1]
  %61 = zext i8 %60 to i32                        ; [#uses = 1]
  %62 = icmp ne i32 %61, 117                      ; [#uses = 1]
  br label %andandend26

andandend26:                                      ; preds = %andand25, %andandend23
  %andandval27 = phi i1 [ false, %andandend23 ], [ %62, %andand25 ] ; [#uses = 1, type = i1]
  %63 = zext i1 %andandval27 to i8                ; [#uses = 1]
  store i8 %63, i8* %negative, align 1
  %64 = load i8, i8* %negative, align 1           ; [#uses = 1]
  %65 = trunc i8 %64 to i1                        ; [#uses = 1]
  br i1 %65, label %condtrue, label %condfalse

condtrue:                                         ; preds = %andandend26
  %66 = load i32, i32* %val, align 4              ; [#uses = 1]
  %67 = sext i32 %66 to i64                       ; [#uses = 1]
  %negval = sub i64 0, %67                        ; [#uses = 1]
  store i64 %negval, i64* %.makelvaluetmp, align 8
  store i64* %.makelvaluetmp, i64** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %andandend26
  %68 = load i32, i32* %val, align 4              ; [#uses = 1]
  %69 = sext i32 %68 to i64                       ; [#uses = 1]
  store i64 %69, i64* %.makelvaluetmp28, align 8
  store i64* %.makelvaluetmp28, i64** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %70 = load i64*, i64** %condtmp, align 8        ; [#uses = 1]
  %71 = load i64, i64* %70, align 8               ; [#uses = 1]
  store i64 %71, i64* %arg, align 8
  %72 = load i64, i64* %arg, align 8              ; [#uses = 1]
  %73 = and i64 %72, 4294967295                   ; [#uses = 1]
  store i64 %73, i64* %arg, align 8
  %74 = load i64, i64* %arg, align 8              ; [#uses = 1]
  %75 = load i8, i8* %negative, align 1           ; [#uses = 1]
  %76 = trunc i8 %75 to i1                        ; [#uses = 1]
  call void @_D3std6format8internal5write__T20formatValueImplUlongTSQCb5array__T8AppenderTAyaZQoTaZQCdFNaNfKQBpmIbMKxSQDzQDy4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i64 %74, i1 zeroext %76, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTiTaZQCaFKQBnxiMKxSQDrQDq4spec__T10FormatSpecTaZQpZ__T9__lambda5TiZQnFNaNbNiNeKiZAxa(i32* dereferenceable(4) %val) #0 {
  %1 = bitcast i32* %val to i8*                   ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %1, i64 0 ; [#uses = 1, type = i8*]
  %2 = insertvalue { i64, i8* } { i64 4, i8* undef }, i8* %lowerbound, 1 ; [#uses = 1]
  ret { i64, i8* } %2
}

; [#uses = 1]
declare i32 @_D3std6format8internal5write10baseOfSpecFNaNfIaZk(i8 zeroext) #1

; [#uses = 1]
declare void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTAaTQdTQnTaZQCeFNaNfKQByQxQzQBiMKxSQEeQEd4spec__T10FormatSpecTaZQpbZv(%"std.array.Appender!string.Appender"* dereferenceable(8), { i64, i8* }, { i64, i8* }, { i64, i8* }* byval({ i64, i8* }) align 8, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72), i1 zeroext) #1

; [#uses = 1]
declare void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTAaTQdTQnTQqTaZQChFNaNfKQCbQBaQBdQBnQBqMKxSQEmQEl4spec__T10FormatSpecTaZQpEQFsQFrQFnQFh13PrecisionTypeZv(%"std.array.Appender!string.Appender"* dereferenceable(8), { i64, i8* }, { i64, i8* }, { i64, i8* }* byval({ i64, i8* }) align 8, { i64, i8* }* byval({ i64, i8* }) align 8, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72), i32) #1

; [#uses = 1]
declare zeroext i1 @_D3std9algorithm9searching__T3allSQBg6format8internal5write__T20formatValueImplUlongTSQDg5array__T8AppenderTAyaZQoTaZQCdFKQBlmIbMKxSQFaQDu4spec__T10FormatSpecTaZQpZ10__lambda16Z__TQFvTAaZQGcMFNaNfQmZb(i8* nonnull, { i64, i8* }) #1

; [#uses = 1]
declare zeroext i1 @_D3std9algorithm9searching__T3allSQBg6format8internal5write__T20formatValueImplUlongTSQDg5array__T8AppenderTAyaZQoTaZQCdFKQBlmIbMKxSQFaQDu4spec__T10FormatSpecTaZQpZ10__lambda17Z__TQFvTAaZQGcMFNaNfQmZb(i8* nonnull, { i64, i8* }) #1

; [#uses = 1]
declare zeroext i1 @_D3std6format8internal5write__T5roundTG64aZQmFNaNbNiNfKQrmmEQCgQCfQCbQBv13RoundingClassbaZb([64 x i8]* dereferenceable(64), i64, i64, i32, i1 zeroext, i8 zeroext) #1

; [#uses = 2]
declare i64 @_D3std9algorithm10comparison__T3minTmTmZQjFNaNbNiNfmmZm(i64, i64) #1

; [#uses = 1]
declare void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTAaTQdTQgTQjTaZQChFNaNfKQCbQBaQBdQBgQBjMKxSQEmQEl4spec__T10FormatSpecTaZQpEQFsQFrQFnQFh13PrecisionTypeZv(%"std.array.Appender!string.Appender"* dereferenceable(8), { i64, i8* }, { i64, i8* }, { i64, i8* }* byval({ i64, i8* }) align 8, { i64, i8* }* byval({ i64, i8* }) align 8, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72), i32) #1

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format4spec__T10singleSpecTyaZQqFNaNfAyaZSQBvQBuQBq__T10FormatSpecTaZQp(%"std.format.spec.FormatSpec!char.FormatSpec"* noalias sret(%"std.format.spec.FormatSpec!char.FormatSpec") align 8 %.sret_arg, { i64, i8* } %fmt_arg) #0 {
  %fmt = alloca { i64, i8* }, align 8             ; [#uses = 7, size/byte = 16]
  %.frame = alloca %nest.singleSpec, align 8      ; [#uses = 5, size/byte = 8]
  %a = alloca %"std.format.spec.singleSpec!(immutable(char)).singleSpec.DummyOutputRange", align 1 ; [#uses = 2, size/byte = 1]
  store { i64, i8* } %fmt_arg, { i64, i8* }* %fmt, align 8
  %spec = getelementptr inbounds %nest.singleSpec, %nest.singleSpec* %.frame, i32 0, i32 0 ; [#uses = 1, type = %"std.format.spec.FormatSpec!char.FormatSpec"**]
  store %"std.format.spec.FormatSpec!char.FormatSpec"* %.sret_arg, %"std.format.spec.FormatSpec!char.FormatSpec"** %spec, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fmt, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = icmp uge i64 %.len, 2                      ; [#uses = 1]
  %3 = bitcast %nest.singleSpec* %.frame to i8*   ; [#uses = 1]
  %4 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %3, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, { i64, i8* } (i8*)* } %4, { i64, i8* } (i8*)* @_D3std6format4spec__T10singleSpecTyaZQqFAyaZ12__dgliteral2MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %5 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %2, { i8*, { i64, i8* } (i8*)* } %.func, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 859) #0 ; [#uses = 0]
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fmt, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %6, align 8             ; [#uses = 1]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fmt, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %7, align 8              ; [#uses = 1]
  %8 = insertvalue { i64, i8* } undef, i64 %.len1, 0 ; [#uses = 1]
  %9 = insertvalue { i64, i8* } %8, i8* %.ptr, 1  ; [#uses = 1]
  %10 = call i32 @_D3std5range10primitives__T5frontTaZQjFNaNdNfMAxaZw({ i64, i8* } %9) #0 ; [#uses = 1]
  %11 = icmp eq i32 %10, 37                       ; [#uses = 1]
  %12 = bitcast %nest.singleSpec* %.frame to i8*  ; [#uses = 1]
  %13 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %12, 0 ; [#uses = 1]
  %.func2 = insertvalue { i8*, { i64, i8* } (i8*)* } %13, { i64, i8* } (i8*)* @_D3std6format4spec__T10singleSpecTyaZQqFAyaZ12__dgliteral3MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %14 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %11, { i8*, { i64, i8* } (i8*)* } %.func2, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 860) #0 ; [#uses = 0]
  %15 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fmt, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len3 = load i64, i64* %15, align 8            ; [#uses = 2]
  %bounds.cmp = icmp ult i64 1, %.len3            ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %0
  %16 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fmt, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr4 = load i8*, i8** %16, align 8            ; [#uses = 1]
  %17 = getelementptr inbounds i8, i8* %.ptr4, i64 1 ; [#uses = 1, type = i8*]
  %18 = load i8, i8* %17, align 1                 ; [#uses = 1]
  %19 = zext i8 %18 to i32                        ; [#uses = 1]
  %20 = icmp ne i32 %19, 37                       ; [#uses = 1]
  %21 = bitcast %nest.singleSpec* %.frame to i8*  ; [#uses = 1]
  %22 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %21, 0 ; [#uses = 1]
  %.func5 = insertvalue { i8*, { i64, i8* } (i8*)* } %22, { i64, i8* } (i8*)* @_D3std6format4spec__T10singleSpecTyaZQqFAyaZ12__dgliteral4MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %23 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %20, { i8*, { i64, i8* } (i8*)* } %.func5, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 861) #0 ; [#uses = 0]
  %24 = bitcast %"std.format.spec.singleSpec!(immutable(char)).singleSpec.DummyOutputRange"* %a to i8* ; [#uses = 1]
  %.padding = getelementptr inbounds i8, i8* %24, i32 0 ; [#uses = 1, type = i8*]
  call void @llvm.memset.p0i8.i64(i8* align 1 %.padding, i8 0, i64 1, i1 false)
  %25 = bitcast %"std.format.spec.FormatSpec!char.FormatSpec"* %.sret_arg to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 bitcast (%"std.format.spec.FormatSpec!char.FormatSpec"* @_D3std6format4spec__T10FormatSpecTaZQp6__initZ to i8*), i64 72, i1 false)
  %26 = load { i64, i8* }, { i64, i8* }* %fmt, align 8 ; [#uses = 1]
  %27 = call %"std.format.spec.FormatSpec!char.FormatSpec"* @_D3std6format4spec__T10FormatSpecTaZQp6__ctorMFNaNbNcNiNfIAaZSQCiQChQCd__TQCbTaZQCh(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull returned %.sret_arg, { i64, i8* } %26) #0 ; [#uses = 0]
  %28 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp__T17writeUpToNextSpecTSQCiQChQCd__T10singleSpecTyaZQqFAyaZ16DummyOutputRangeZQCxMFNaNlNfKQCpZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.sret_arg, %"std.format.spec.singleSpec!(immutable(char)).singleSpec.DummyOutputRange"* dereferenceable(1) %a) #1 ; [#uses = 0]
  %29 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.sret_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %30 = call zeroext i1 @_D3std5range10primitives__T5emptyTAxaZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %29) #0 ; [#uses = 1]
  %31 = bitcast %nest.singleSpec* %.frame to i8*  ; [#uses = 1]
  %32 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %31, 0 ; [#uses = 1]
  %.func6 = insertvalue { i8*, { i64, i8* } (i8*)* } %32, { i64, i8* } (i8*)* @_D3std6format4spec__T10singleSpecTyaZQqFAyaZ12__dgliteral8MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %33 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %30, { i8*, { i64, i8* } (i8*)* } %.func6, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 872) #0 ; [#uses = 0]
  ret void

bounds.fail:                                      ; preds = %0
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 861, i64 1, i64 %.len3) #5
  unreachable
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTPxSQCpQCo4spec__T10FormatSpecTaZQpTaZQDdFNaNfKQCyQBxMKxQCbZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, %"std.format.spec.FormatSpec!char.FormatSpec"* %val_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %val = alloca %"std.format.spec.FormatSpec!char.FormatSpec"*, align 8 ; [#uses = 2, size/byte = 8]
  store %"std.format.spec.FormatSpec!char.FormatSpec"* %val_arg, %"std.format.spec.FormatSpec!char.FormatSpec"** %val, align 8
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %2 = load i32, i32* %1, align 4                 ; [#uses = 1]
  %3 = icmp ne i32 %2, 2147483647                 ; [#uses = 1]
  br i1 %3, label %andand, label %andandend

andand:                                           ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %5 = load i32, i32* %4, align 4                 ; [#uses = 1]
  %6 = icmp ne i32 %5, 2147483647                 ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %0
  %andandval = phi i1 [ false, %0 ], [ %6, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand1, label %andandend2

andand1:                                          ; preds = %andandend
  %7 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %8 = load i32, i32* %7, align 4                 ; [#uses = 1]
  %9 = icmp ne i32 %8, 2147483647                 ; [#uses = 1]
  br label %andandend2

andandend2:                                       ; preds = %andand1, %andandend
  %andandval3 = phi i1 [ false, %andandend ], [ %9, %andand1 ] ; [#uses = 1, type = i1]
  br i1 %andandval3, label %andand4, label %andandend5

andand4:                                          ; preds = %andandend2
  %10 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %11 = load i8, i8* %10, align 1                 ; [#uses = 1]
  %12 = trunc i8 %11 to i1                        ; [#uses = 1]
  %13 = icmp eq i1 %12, false                     ; [#uses = 1]
  br label %andandend5

andandend5:                                       ; preds = %andand4, %andandend2
  %andandval6 = phi i1 [ false, %andandend2 ], [ %13, %andand4 ] ; [#uses = 1, type = i1]
  %14 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %andandval6, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTPxSQCpQCo4spec__T10FormatSpecTaZQpTaZQDdFKQCuQBtMKxQBxZ12__dgliteral4MFNaNbNiNfZAxa }, { i64, i8* } { i64 58, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0) }, i64 1235) #0 ; [#uses = 0]
  %15 = load %"std.format.spec.FormatSpec!char.FormatSpec"*, %"std.format.spec.FormatSpec!char.FormatSpec"** %val, align 8 ; [#uses = 1]
  call void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTPxSQDcQDb4spec__T10FormatSpecTaZQpTaZQDhFNaNfKQCyMxPQByMKxQCeZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, %"std.format.spec.FormatSpec!char.FormatSpec"* %15, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  ret void
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxaTaZQBxFNaNfKQBsKxaMKxSQDkQDj4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8* dereferenceable(1) %val, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %2 = load i32, i32* %1, align 4                 ; [#uses = 1]
  %3 = icmp ne i32 %2, 2147483647                 ; [#uses = 1]
  br i1 %3, label %andand, label %andandend

andand:                                           ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %5 = load i32, i32* %4, align 4                 ; [#uses = 1]
  %6 = icmp ne i32 %5, 2147483647                 ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %0
  %andandval = phi i1 [ false, %0 ], [ %6, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand1, label %andandend2

andand1:                                          ; preds = %andandend
  %7 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %8 = load i32, i32* %7, align 4                 ; [#uses = 1]
  %9 = icmp ne i32 %8, 2147483647                 ; [#uses = 1]
  br label %andandend2

andandend2:                                       ; preds = %andand1, %andandend
  %andandval3 = phi i1 [ false, %andandend ], [ %9, %andand1 ] ; [#uses = 1, type = i1]
  br i1 %andandval3, label %andand4, label %andandend5

andand4:                                          ; preds = %andandend2
  %10 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %11 = load i8, i8* %10, align 1                 ; [#uses = 1]
  %12 = trunc i8 %11 to i1                        ; [#uses = 1]
  %13 = icmp eq i1 %12, false                     ; [#uses = 1]
  br label %andandend5

andandend5:                                       ; preds = %andand4, %andandend2
  %andandval6 = phi i1 [ false, %andandend2 ], [ %13, %andand4 ] ; [#uses = 1, type = i1]
  %14 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %andandval6, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxaTaZQBxFKQBoKxaMKxSQDgQDf4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa }, { i64, i8* } { i64 58, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0) }, i64 1235) #0 ; [#uses = 0]
  %15 = load i8, i8* %val, align 1                ; [#uses = 1]
  call void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTaTaZQCaFNaNfKQBrxaMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %15, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  ret void
}

; [#uses = 7]
; Function Attrs: uwtable
define weak_odr void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTbTaZQBwFNaNfKQBrbMKxSQDhQDg4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i1 zeroext %val_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %val = alloca i8, align 1                       ; [#uses = 2, size/byte = 1]
  %1 = zext i1 %val_arg to i8                     ; [#uses = 1]
  store i8 %1, i8* %val, align 1
  %2 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %3 = load i32, i32* %2, align 4                 ; [#uses = 1]
  %4 = icmp ne i32 %3, 2147483647                 ; [#uses = 1]
  br i1 %4, label %andand, label %andandend

andand:                                           ; preds = %0
  %5 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %6 = load i32, i32* %5, align 4                 ; [#uses = 1]
  %7 = icmp ne i32 %6, 2147483647                 ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %0
  %andandval = phi i1 [ false, %0 ], [ %7, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand1, label %andandend2

andand1:                                          ; preds = %andandend
  %8 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %9 = load i32, i32* %8, align 4                 ; [#uses = 1]
  %10 = icmp ne i32 %9, 2147483647                ; [#uses = 1]
  br label %andandend2

andandend2:                                       ; preds = %andand1, %andandend
  %andandval3 = phi i1 [ false, %andandend ], [ %10, %andand1 ] ; [#uses = 1, type = i1]
  br i1 %andandval3, label %andand4, label %andandend5

andand4:                                          ; preds = %andandend2
  %11 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %12 = load i8, i8* %11, align 1                 ; [#uses = 1]
  %13 = trunc i8 %12 to i1                        ; [#uses = 1]
  %14 = icmp eq i1 %13, false                     ; [#uses = 1]
  br label %andandend5

andandend5:                                       ; preds = %andand4, %andandend2
  %andandval6 = phi i1 [ false, %andandend2 ], [ %14, %andand4 ] ; [#uses = 1, type = i1]
  %15 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %andandval6, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTbTaZQBwFKQBnbMKxSQDdQDc4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa }, { i64, i8* } { i64 58, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0) }, i64 1235) #0 ; [#uses = 0]
  %16 = load i8, i8* %val, align 1                ; [#uses = 1]
  %17 = trunc i8 %16 to i1                        ; [#uses = 1]
  call void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTbTaZQCaFNaNfKQBrxbMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i1 zeroext %17, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  ret void
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxAaTaZQByFNaNfKQBtKxQtMKxSQDmQDl4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* }* dereferenceable(16) %val, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %2 = load i32, i32* %1, align 4                 ; [#uses = 1]
  %3 = icmp ne i32 %2, 2147483647                 ; [#uses = 1]
  br i1 %3, label %andand, label %andandend

andand:                                           ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %5 = load i32, i32* %4, align 4                 ; [#uses = 1]
  %6 = icmp ne i32 %5, 2147483647                 ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %0
  %andandval = phi i1 [ false, %0 ], [ %6, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand1, label %andandend2

andand1:                                          ; preds = %andandend
  %7 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %8 = load i32, i32* %7, align 4                 ; [#uses = 1]
  %9 = icmp ne i32 %8, 2147483647                 ; [#uses = 1]
  br label %andandend2

andandend2:                                       ; preds = %andand1, %andandend
  %andandval3 = phi i1 [ false, %andandend ], [ %9, %andand1 ] ; [#uses = 1, type = i1]
  br i1 %andandval3, label %andand4, label %andandend5

andand4:                                          ; preds = %andandend2
  %10 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %11 = load i8, i8* %10, align 1                 ; [#uses = 1]
  %12 = trunc i8 %11 to i1                        ; [#uses = 1]
  %13 = icmp eq i1 %12, false                     ; [#uses = 1]
  br label %andandend5

andandend5:                                       ; preds = %andand4, %andandend2
  %andandval6 = phi i1 [ false, %andandend2 ], [ %13, %andand4 ] ; [#uses = 1, type = i1]
  %14 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %andandval6, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxAaTaZQByFKQBpKxQpMKxSQDiQDh4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa }, { i64, i8* } { i64 58, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0) }, i64 1235) #0 ; [#uses = 0]
  %15 = load { i64, i8* }, { i64, i8* }* %val, align 8 ; [#uses = 1]
  call void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTAxaTaZQCcFNaNfKQBtMxAaMKxSQDzQDy4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %15, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format4spec__T10singleSpecTyaZQqFAyaZ12__dgliteral2MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 38, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.113, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format4spec__T10singleSpecTyaZQqFAyaZ12__dgliteral3MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 35, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.114, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format4spec__T10singleSpecTyaZQqFAyaZ12__dgliteral4MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 42, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.115, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp__T17writeUpToNextSpecTSQCiQChQCd__T10singleSpecTyaZQqFAyaZ16DummyOutputRangeZQCxMFNaNlNfKQCpZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg, %"std.format.spec.singleSpec!(immutable(char)).singleSpec.DummyOutputRange"* dereferenceable(1) %writer) #0 {
  %i = alloca i64, align 8                        ; [#uses = 9, size/byte = 8]
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %2 = call zeroext i1 @_D3std5range10primitives__T5emptyTAxaZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %1) #0 ; [#uses = 1]
  br i1 %2, label %if, label %endif

if:                                               ; preds = %0
  ret i1 false

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %0
  store i64 0, i64* %i, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %endif
  %3 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %3, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %4, align 8              ; [#uses = 1]
  %5 = load i64, i64* %i, align 8                 ; [#uses = 1]
  %6 = icmp ult i64 %5, %.len                     ; [#uses = 1]
  br i1 %6, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %7 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %8 = load i64, i64* %i, align 8                 ; [#uses = 2]
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %7, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %9, align 8             ; [#uses = 2]
  %bounds.cmp = icmp ult i64 %8, %.len1           ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %forbody
  %10 = load i64, i64* %i, align 8                ; [#uses = 1]
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %7, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %11, align 8             ; [#uses = 1]
  %12 = getelementptr inbounds i8, i8* %.ptr, i64 %10 ; [#uses = 1, type = i8*]
  %13 = load i8, i8* %12, align 1                 ; [#uses = 1]
  %14 = zext i8 %13 to i32                        ; [#uses = 1]
  %15 = icmp ne i32 %14, 37                       ; [#uses = 1]
  br i1 %15, label %if2, label %endif3

if2:                                              ; preds = %bounds.ok
  br label %forinc

aftercontinue:                                    ; No predecessors!
  br label %endif3

endif3:                                           ; preds = %aftercontinue, %bounds.ok
  %16 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %17 = load i64, i64* %i, align 8                ; [#uses = 3]
  %18 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %16, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len6 = load i64, i64* %18, align 8            ; [#uses = 2]
  %bounds.cmp.up = icmp ule i64 %17, %.len6       ; [#uses = 1]
  br i1 %bounds.cmp.up, label %bounds.ok4, label %bounds.fail5

bounds.ok4:                                       ; preds = %endif3
  %19 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %16, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr7 = load i8*, i8** %19, align 8            ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr7, i64 0 ; [#uses = 1, type = i8*]
  %20 = sub i64 %17, 0                            ; [#uses = 1]
  %21 = insertvalue { i64, i8* } undef, i64 %20, 0 ; [#uses = 1]
  %22 = insertvalue { i64, i8* } %21, i8* %lowerbound, 1 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf6format4spec__T10singleSpecTyaZQqFAyaZ16DummyOutputRangeTAxaZQCsFNaNbNiNfKQDaQuZv(%"std.format.spec.singleSpec!(immutable(char)).singleSpec.DummyOutputRange"* dereferenceable(1) %writer, { i64, i8* } %22) #1
  %23 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %24 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %25 = load i64, i64* %i, align 8                ; [#uses = 4]
  %26 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %24, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len8 = load i64, i64* %26, align 8            ; [#uses = 3]
  %27 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %24, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len11 = load i64, i64* %27, align 8           ; [#uses = 1]
  %bounds.cmp.lo = icmp ule i64 %25, %.len8       ; [#uses = 1]
  br i1 %bounds.cmp.lo, label %bounds.ok9, label %bounds.fail10

bounds.ok9:                                       ; preds = %bounds.ok4
  %28 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %24, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr12 = load i8*, i8** %28, align 8           ; [#uses = 1]
  %lowerbound13 = getelementptr inbounds i8, i8* %.ptr12, i64 %25 ; [#uses = 2, type = i8*]
  %29 = sub i64 %.len8, %25                       ; [#uses = 2]
  %30 = insertvalue { i64, i8* } undef, i64 %29, 0 ; [#uses = 1]
  %31 = insertvalue { i64, i8* } %30, i8* %lowerbound13, 1 ; [#uses = 0]
  %32 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %23, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %29, i64* %32, align 8
  %33 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %23, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound13, i8** %33, align 8
  %34 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %35 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %34, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len14 = load i64, i64* %35, align 8           ; [#uses = 1]
  %36 = icmp uge i64 %.len14, 2                   ; [#uses = 1]
  %37 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %36, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std6format4spec__T10FormatSpecTaZQp__T17writeUpToNextSpecTSQCiQChQCd__T10singleSpecTyaZQqFAyaZ16DummyOutputRangeZQCxMFNlKQClZ12__dgliteral3MFNaNbNiNfZAxa }, { i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i64 260) #0 ; [#uses = 0]
  %38 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %39 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 3, type = { i64, i8* }*]
  %40 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %39, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len15 = load i64, i64* %40, align 8           ; [#uses = 3]
  %41 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %39, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len18 = load i64, i64* %41, align 8           ; [#uses = 1]
  %bounds.cmp.lo19 = icmp ule i64 1, %.len15      ; [#uses = 1]
  br i1 %bounds.cmp.lo19, label %bounds.ok16, label %bounds.fail17

bounds.ok16:                                      ; preds = %bounds.ok9
  %42 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %39, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr20 = load i8*, i8** %42, align 8           ; [#uses = 1]
  %lowerbound21 = getelementptr inbounds i8, i8* %.ptr20, i64 1 ; [#uses = 2, type = i8*]
  %43 = sub i64 %.len15, 1                        ; [#uses = 2]
  %44 = insertvalue { i64, i8* } undef, i64 %43, 0 ; [#uses = 1]
  %45 = insertvalue { i64, i8* } %44, i8* %lowerbound21, 1 ; [#uses = 0]
  %46 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %38, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %43, i64* %46, align 8
  %47 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %38, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound21, i8** %47, align 8
  %48 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %49 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %48, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len22 = load i64, i64* %49, align 8           ; [#uses = 2]
  %bounds.cmp23 = icmp ult i64 0, %.len22         ; [#uses = 1]
  br i1 %bounds.cmp23, label %bounds.ok24, label %bounds.fail25

bounds.ok24:                                      ; preds = %bounds.ok16
  %50 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %48, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr26 = load i8*, i8** %50, align 8           ; [#uses = 1]
  %51 = getelementptr inbounds i8, i8* %.ptr26, i64 0 ; [#uses = 1, type = i8*]
  %52 = load i8, i8* %51, align 1                 ; [#uses = 1]
  %53 = zext i8 %52 to i32                        ; [#uses = 1]
  %54 = icmp ne i32 %53, 37                       ; [#uses = 1]
  br i1 %54, label %if27, label %endif28

if27:                                             ; preds = %bounds.ok24
  call void @_D3std6format4spec__T10FormatSpecTaZQp6fillUpMFNaNlNfZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %.this_arg) #0
  ret i1 true

dummy.afterreturn29:                              ; No predecessors!
  br label %endif28

endif28:                                          ; preds = %dummy.afterreturn29, %bounds.ok24
  store i64 0, i64* %i, align 8
  br label %forinc

bounds.fail25:                                    ; preds = %bounds.ok16
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 263, i64 0, i64 %.len22) #5
  unreachable

bounds.fail17:                                    ; preds = %bounds.ok9
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 261, i64 1, i64 %.len15, i64 %.len18) #5
  unreachable

bounds.fail10:                                    ; preds = %bounds.ok4
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 259, i64 %25, i64 %.len8, i64 %.len11) #5
  unreachable

bounds.fail5:                                     ; preds = %endif3
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 258, i64 0, i64 %17, i64 %.len6) #5
  unreachable

bounds.fail:                                      ; preds = %forbody
  call void @_d_arraybounds_index({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.65, i32 0, i32 0) }, i32 257, i64 %8, i64 %.len1) #5
  unreachable

forinc:                                           ; preds = %endif28, %if2
  %55 = load i64, i64* %i, align 8                ; [#uses = 1]
  %56 = add i64 %55, 1                            ; [#uses = 1]
  store i64 %56, i64* %i, align 8
  br label %forcond

endfor:                                           ; preds = %forcond
  %57 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %58 = load { i64, i8* }, { i64, i8* }* %57, align 8 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf6format4spec__T10singleSpecTyaZQqFAyaZ16DummyOutputRangeTAxaZQCsFNaNbNiNfKQDaQuZv(%"std.format.spec.singleSpec!(immutable(char)).singleSpec.DummyOutputRange"* dereferenceable(1) %writer, { i64, i8* } %58) #1
  %59 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %.this_arg, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  store { i64, i8* } zeroinitializer, { i64, i8* }* %59, align 8
  ret i1 false
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format4spec__T10singleSpecTyaZQqFAyaZ12__dgliteral8MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.singleSpec* ; [#uses = 1]
  %spec = getelementptr inbounds %nest.singleSpec, %nest.singleSpec* %1, i32 0, i32 0 ; [#uses = 1, type = %"std.format.spec.FormatSpec!char.FormatSpec"**]
  %2 = load %"std.format.spec.FormatSpec!char.FormatSpec"*, %"std.format.spec.FormatSpec!char.FormatSpec"** %spec, align 8 ; [#uses = 1]
  %3 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %2, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %4 = load { i64, i8* }, { i64, i8* }* %3, align 8 ; [#uses = 1]
  %5 = call { i64, i8* } @_D3std4conv__T4textTAyaTAxaZQoFNaNbNfQrQpZQw({ i64, i8* } { i64 36, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.116, i32 0, i32 0) }, { i64, i8* } %4) #1 ; [#uses = 1]
  ret { i64, i8* } %5
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T3putTSQBf6format4spec__T10singleSpecTyaZQqFAyaZ16DummyOutputRangeTAxaZQCsFNaNbNiNfKQDaQuZv(%"std.format.spec.singleSpec!(immutable(char)).singleSpec.DummyOutputRange"* dereferenceable(1) %r, { i64, i8* } %e_arg) #0 {
  %e = alloca { i64, i8* }, align 8               ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %e_arg, { i64, i8* }* %e, align 8
  call void @_D3std5range10primitives__T5doPutTSQBh6format4spec__T10singleSpecTyaZQqFAyaZ16DummyOutputRangeTAxaZQCuFNaNbNiNfKQDaKQvZv(%"std.format.spec.singleSpec!(immutable(char)).singleSpec.DummyOutputRange"* dereferenceable(1) %r, { i64, i8* }* dereferenceable(16) %e) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format4spec__T10FormatSpecTaZQp__T17writeUpToNextSpecTSQCiQChQCd__T10singleSpecTyaZQqFAyaZ16DummyOutputRangeZQCxMFNlKQClZ12__dgliteral3MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 34, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.71, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T5doPutTSQBh6format4spec__T10singleSpecTyaZQqFAyaZ16DummyOutputRangeTAxaZQCuFNaNbNiNfKQDaKQvZv(%"std.format.spec.singleSpec!(immutable(char)).singleSpec.DummyOutputRange"* dereferenceable(1) %r, { i64, i8* }* dereferenceable(16) %e) #0 {
  %1 = load { i64, i8* }, { i64, i8* }* %e, align 8 ; [#uses = 1]
  call void @_D3std6format4spec__T10singleSpecTyaZQqFAyaZ16DummyOutputRange__T3putTaZQhMFNaNbNiNfMxAaZv(%"std.format.spec.singleSpec!(immutable(char)).singleSpec.DummyOutputRange"* nonnull %r, { i64, i8* } %1) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format4spec__T10singleSpecTyaZQqFAyaZ16DummyOutputRange__T3putTaZQhMFNaNbNiNfMxAaZv(%"std.format.spec.singleSpec!(immutable(char)).singleSpec.DummyOutputRange"* nonnull %.this_arg, { i64, i8* } %buf_arg) #0 {
  %buf = alloca { i64, i8* }, align 8             ; [#uses = 1, size/byte = 16]
  store { i64, i8* } %buf_arg, { i64, i8* }* %buf, align 8
  ret void
}

; [#uses = 1]
declare { i64, i8* } @_D3std4conv__T8textImplTAyaTQeTAxaZQvFNaNbNfQuQpZQz({ i64, i8* }, { i64, i8* }) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTPxSQCpQCo4spec__T10FormatSpecTaZQpTaZQDdFKQCuQBtMKxQBxZ12__dgliteral4MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 46, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.82, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTPxSQDcQDb4spec__T10FormatSpecTaZQpTaZQDhFNaNfKQCyMxPQByMKxQCeZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, %"std.format.spec.FormatSpec!char.FormatSpec"* %val_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %val = alloca %"std.format.spec.FormatSpec!char.FormatSpec"*, align 8 ; [#uses = 2, size/byte = 8]
  %.frame = alloca %nest.formatValueImpl, align 8 ; [#uses = 3, size/byte = 8]
  %pnum = alloca i64, align 8                     ; [#uses = 3, size/byte = 8]
  %fs = alloca %"std.format.spec.FormatSpec!char.FormatSpec", align 8 ; [#uses = 3, size/byte = 72]
  store %"std.format.spec.FormatSpec!char.FormatSpec"* %val_arg, %"std.format.spec.FormatSpec!char.FormatSpec"** %val, align 8
  %p = getelementptr inbounds %nest.formatValueImpl, %nest.formatValueImpl* %.frame, i32 0, i32 0 ; [#uses = 2, type = i8**]
  %1 = load %"std.format.spec.FormatSpec!char.FormatSpec"*, %"std.format.spec.FormatSpec!char.FormatSpec"** %val, align 8 ; [#uses = 1]
  %2 = bitcast %"std.format.spec.FormatSpec!char.FormatSpec"* %1 to i8* ; [#uses = 1]
  store i8* %2, i8** %p, align 8
  %3 = bitcast %nest.formatValueImpl* %.frame to i8* ; [#uses = 1]
  %4 = insertvalue { i8*, i64 (i8*)* } undef, i8* %3, 0 ; [#uses = 1]
  %.func = insertvalue { i8*, i64 (i8*)* } %4, i64 (i8*)* @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTPxSQDcQDb4spec__T10FormatSpecTaZQpTaZQDhFKQCuMxPQBuMKxQCaZ9__lambda7MFNaNbNiNeZm, 1 ; [#uses = 2]
  %.funcptr = extractvalue { i8*, i64 (i8*)* } %.func, 1 ; [#uses = 1]
  %.ptr = extractvalue { i8*, i64 (i8*)* } %.func, 0 ; [#uses = 1]
  %5 = call i64 %.funcptr(i8* nonnull %.ptr)      ; [#uses = 1]
  store i64 %5, i64* %pnum, align 8
  %6 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %7 = load i8, i8* %6, align 1                   ; [#uses = 1]
  %8 = zext i8 %7 to i32                          ; [#uses = 1]
  %9 = icmp eq i32 %8, 115                        ; [#uses = 1]
  br i1 %9, label %if, label %else

if:                                               ; preds = %0
  %10 = load i8*, i8** %p, align 8                ; [#uses = 1]
  %11 = icmp eq i8* %10, null                     ; [#uses = 1]
  br i1 %11, label %if1, label %endif2

if1:                                              ; preds = %if
  call void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTQhTaZQByFNaNfKQBsQyMKxSQDtQDs4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } { i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0) }, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  ret void

dummy.afterreturn:                                ; No predecessors!
  br label %endif2

endif2:                                           ; preds = %dummy.afterreturn, %if
  %12 = bitcast %"std.format.spec.FormatSpec!char.FormatSpec"* %fs to i8* ; [#uses = 1]
  %13 = bitcast %"std.format.spec.FormatSpec!char.FormatSpec"* %f to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %13, i64 72, i1 false)
  %14 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %fs, i32 0, i32 6 ; [#uses = 1, type = i8*]
  store i8 88, i8* %14, align 1
  %15 = load i64, i64* %pnum, align 8             ; [#uses = 1]
  call void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTmTaZQCaFNaNfKQBrxmMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i64 %15, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %fs) #1
  br label %endif

else:                                             ; preds = %0
  %16 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %17 = load i8, i8* %16, align 1                 ; [#uses = 1]
  %18 = zext i8 %17 to i32                        ; [#uses = 1]
  %19 = icmp eq i32 %18, 88                       ; [#uses = 1]
  br i1 %19, label %ororend, label %oror

oror:                                             ; preds = %else
  %20 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %21 = load i8, i8* %20, align 1                 ; [#uses = 1]
  %22 = zext i8 %21 to i32                        ; [#uses = 1]
  %23 = icmp eq i32 %22, 120                      ; [#uses = 1]
  br label %ororend

ororend:                                          ; preds = %oror, %else
  %ororval = phi i1 [ true, %else ], [ %23, %oror ] ; [#uses = 1, type = i1]
  %24 = bitcast %nest.formatValueImpl* %.frame to i8* ; [#uses = 1]
  %25 = insertvalue { i8*, { i64, i8* } (i8*)* } undef, i8* %24, 0 ; [#uses = 1]
  %.func3 = insertvalue { i8*, { i64, i8* } (i8*)* } %25, { i64, i8* } (i8*)* @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTPxSQDcQDb4spec__T10FormatSpecTaZQpTaZQDhFKQCuMxPQBuMKxQCaZ13__dgliteral10MFNaNbNiNfZAxa, 1 ; [#uses = 1]
  %26 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %ororval, { i8*, { i64, i8* } (i8*)* } %.func3, { i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i64 2961) #0 ; [#uses = 0]
  %27 = load i64, i64* %pnum, align 8             ; [#uses = 1]
  call void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTmTaZQCaFNaNfKQBrxmMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i64 %27, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  br label %endif

endif:                                            ; preds = %ororend, %endif2
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal i64 @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTPxSQDcQDb4spec__T10FormatSpecTaZQpTaZQDhFKQCuMxPQBuMKxQCaZ9__lambda7MFNaNbNiNeZm(i8* nonnull %.nest_arg) #0 {
  %1 = bitcast i8* %.nest_arg to %nest.formatValueImpl* ; [#uses = 1]
  %p = getelementptr inbounds %nest.formatValueImpl, %nest.formatValueImpl* %1, i32 0, i32 0 ; [#uses = 1, type = i8**]
  %2 = load i8*, i8** %p, align 8                 ; [#uses = 1]
  %3 = ptrtoint i8* %2 to i64                     ; [#uses = 1]
  ret i64 %3
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTQhTaZQByFNaNfKQBsQyMKxSQDtQDs4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %s_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %s = alloca { i64, i8* }, align 8               ; [#uses = 2, size/byte = 16]
  %fs = alloca %"std.format.spec.FormatSpec!char.FormatSpec", align 8 ; [#uses = 3, size/byte = 72]
  %.lval_copy_for_ImplicitByvalRewrite = alloca { i64, i8* }, align 8 ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %s_arg, { i64, i8* }* %s, align 8
  %1 = bitcast %"std.format.spec.FormatSpec!char.FormatSpec"* %fs to i8* ; [#uses = 1]
  %2 = bitcast %"std.format.spec.FormatSpec!char.FormatSpec"* %f to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 72, i1 false)
  call void @_D3std6format4spec__T10FormatSpecTaZQp6flZeroMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %fs, i1 zeroext false) #0
  %3 = bitcast { i64, i8* }* %.lval_copy_for_ImplicitByvalRewrite to i8* ; [#uses = 1]
  %4 = bitcast { i64, i8* }* %s to i8*            ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  call void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTQhTQkTQnTaZQCeFNaNfKQByQBeQBhQBkMKxSQEgQEf4spec__T10FormatSpecTaZQpbZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } { i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0) }, { i64, i8* } { i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0) }, { i64, i8* }* byval({ i64, i8* }) align 8 %.lval_copy_for_ImplicitByvalRewrite, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %fs, i1 zeroext false) #1
  ret void
}

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTmTaZQCaFNaNfKQBrxmMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i64 %obj_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %obj = alloca i64, align 8                      ; [#uses = 2, size/byte = 8]
  %val = alloca i64, align 8                      ; [#uses = 3, size/byte = 8]
  %raw = alloca { i64, i8* }, align 8             ; [#uses = 6, size/byte = 16]
  %__r1216 = alloca { i64, i8* }, align 8         ; [#uses = 4, size/byte = 16]
  %__key1217 = alloca i64, align 8                ; [#uses = 4, size/byte = 8]
  %c = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %__r1218 = alloca { i64, i8* }, align 8         ; [#uses = 4, size/byte = 16]
  %__key1219 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %c14 = alloca i8, align 1                       ; [#uses = 2, size/byte = 1]
  %negative = alloca i8, align 1                  ; [#uses = 1, size/byte = 1]
  %arg = alloca i64, align 8                      ; [#uses = 4, size/byte = 8]
  store i64 %obj_arg, i64* %obj, align 8
  %1 = load i64, i64* %obj, align 8               ; [#uses = 1]
  store i64 %1, i64* %val, align 8
  %2 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %3 = load i8, i8* %2, align 1                   ; [#uses = 1]
  %4 = zext i8 %3 to i32                          ; [#uses = 1]
  %5 = icmp eq i32 %4, 114                        ; [#uses = 1]
  br i1 %5, label %if, label %endif

if:                                               ; preds = %0
  %6 = call { i64, i8* } @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTmTaZQCaFKQBnxmMKxSQDrQDq4spec__T10FormatSpecTaZQpZ__T9__lambda5TmZQnFNaNbNiNeKmZAxa(i64* dereferenceable(8) %val) #0 ; [#uses = 2]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = extractvalue { i64, i8* } %6, 0         ; [#uses = 1]
  store i64 %.len, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = extractvalue { i64, i8* } %6, 1         ; [#uses = 1]
  store i8* %.ptr, i8** %8, align 8
  %9 = call zeroext i1 @_D3std6format8internal5write__T19needToSwapEndianessTaZQyFNaNbNiNfMKxSQCqQCp4spec__T10FormatSpecTaZQpZb(%"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 ; [#uses = 1]
  br i1 %9, label %if1, label %else

if1:                                              ; preds = %if
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr3 = load i8*, i8** %10, align 8            ; [#uses = 2]
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len4 = load i64, i64* %11, align 8            ; [#uses = 2]
  %12 = insertvalue { i64, i8* } undef, i64 %.len4, 0 ; [#uses = 1]
  %13 = insertvalue { i64, i8* } %12, i8* %.ptr3, 1 ; [#uses = 0]
  %14 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1216, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %.len4, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1216, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %.ptr3, i8** %15, align 8
  %16 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1216, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len5 = load i64, i64* %16, align 8            ; [#uses = 1]
  store i64 %.len5, i64* %__key1217, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %if1
  %17 = load i64, i64* %__key1217, align 8        ; [#uses = 2]
  %18 = sub i64 %17, 1                            ; [#uses = 1]
  store i64 %18, i64* %__key1217, align 8
  %19 = icmp ne i64 %17, 0                        ; [#uses = 1]
  br i1 %19, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %20 = load i64, i64* %__key1217, align 8        ; [#uses = 1]
  %21 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1216, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr6 = load i8*, i8** %21, align 8            ; [#uses = 1]
  %22 = getelementptr inbounds i8, i8* %.ptr6, i64 %20 ; [#uses = 1, type = i8*]
  %23 = load i8, i8* %22, align 1                 ; [#uses = 1]
  store i8 %23, i8* %c, align 1
  %24 = load i8, i8* %c, align 1                  ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxaZQBmFNaNbNfKQBsxaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %24) #0
  br label %forinc

forinc:                                           ; preds = %forbody
  br label %forcond

endfor:                                           ; preds = %forcond
  br label %endif2

else:                                             ; preds = %if
  %25 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr7 = load i8*, i8** %25, align 8            ; [#uses = 2]
  %26 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len8 = load i64, i64* %26, align 8            ; [#uses = 2]
  %27 = insertvalue { i64, i8* } undef, i64 %.len8, 0 ; [#uses = 1]
  %28 = insertvalue { i64, i8* } %27, i8* %.ptr7, 1 ; [#uses = 0]
  %29 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1218, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %.len8, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1218, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %.ptr7, i8** %30, align 8
  store i64 0, i64* %__key1219, align 8
  br label %forcond9

forcond9:                                         ; preds = %forinc11, %else
  %31 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1218, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len13 = load i64, i64* %31, align 8           ; [#uses = 1]
  %32 = load i64, i64* %__key1219, align 8        ; [#uses = 1]
  %33 = icmp ult i64 %32, %.len13                 ; [#uses = 1]
  br i1 %33, label %forbody10, label %endfor12

forbody10:                                        ; preds = %forcond9
  %34 = load i64, i64* %__key1219, align 8        ; [#uses = 1]
  %35 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r1218, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr15 = load i8*, i8** %35, align 8           ; [#uses = 1]
  %36 = getelementptr inbounds i8, i8* %.ptr15, i64 %34 ; [#uses = 1, type = i8*]
  %37 = load i8, i8* %36, align 1                 ; [#uses = 1]
  store i8 %37, i8* %c14, align 1
  %38 = load i8, i8* %c14, align 1                ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxaZQBmFNaNbNfKQBsxaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %38) #0
  br label %forinc11

forinc11:                                         ; preds = %forbody10
  %39 = load i64, i64* %__key1219, align 8        ; [#uses = 1]
  %40 = add i64 %39, 1                            ; [#uses = 1]
  store i64 %40, i64* %__key1219, align 8
  br label %forcond9

endfor12:                                         ; preds = %forcond9
  br label %endif2

endif2:                                           ; preds = %endfor12, %endfor
  ret void

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %0
  store i8 0, i8* %negative, align 1
  %41 = load i64, i64* %val, align 8              ; [#uses = 1]
  store i64 %41, i64* %arg, align 8
  %42 = load i64, i64* %arg, align 8              ; [#uses = 1]
  %43 = and i64 %42, -1                           ; [#uses = 1]
  store i64 %43, i64* %arg, align 8
  %44 = load i64, i64* %arg, align 8              ; [#uses = 1]
  call void @_D3std6format8internal5write__T20formatValueImplUlongTSQCb5array__T8AppenderTAyaZQoTaZQCdFNaNfKQBpmIbMKxSQDzQDy4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i64 %44, i1 zeroext false, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTPxSQDcQDb4spec__T10FormatSpecTaZQpTaZQDhFKQCuMxPQBuMKxQCaZ13__dgliteral10MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 46, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.117, i32 0, i32 0) }
}

; [#uses = 1]
declare void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTQhTQkTQnTaZQCeFNaNfKQByQBeQBhQBkMKxSQEgQEf4spec__T10FormatSpecTaZQpbZv(%"std.array.Appender!string.Appender"* dereferenceable(8), { i64, i8* }, { i64, i8* }, { i64, i8* }* byval({ i64, i8* }) align 8, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72), i1 zeroext) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTmTaZQCaFKQBnxmMKxSQDrQDq4spec__T10FormatSpecTaZQpZ__T9__lambda5TmZQnFNaNbNiNeKmZAxa(i64* dereferenceable(8) %val) #0 {
  %1 = bitcast i64* %val to i8*                   ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %1, i64 0 ; [#uses = 1, type = i8*]
  %2 = insertvalue { i64, i8* } { i64 8, i8* undef }, i8* %lowerbound, 1 ; [#uses = 1]
  ret { i64, i8* } %2
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxaTaZQBxFKQBoKxaMKxSQDgQDf4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 46, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.82, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTaTaZQCaFNaNfKQBrxaMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %obj_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %obj = alloca i8, align 1                       ; [#uses = 2, size/byte = 1]
  %val = alloca [1 x i8], align 1                 ; [#uses = 4, size/byte = 1]
  store i8 %obj_arg, i8* %obj, align 1
  %1 = bitcast [1 x i8]* %val to i8*              ; [#uses = 1]
  %2 = load i8, i8* %obj, align 1                 ; [#uses = 1]
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 %2, i64 1, i1 false)
  %3 = bitcast [1 x i8]* %val to i8*              ; [#uses = 1]
  %4 = insertvalue { i64, i8* } { i64 1, i8* undef }, i8* %3, 1 ; [#uses = 0]
  %5 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %6 = load i8, i8* %5, align 1                   ; [#uses = 1]
  %7 = zext i8 %6 to i32                          ; [#uses = 1]
  %8 = icmp eq i32 %7, 115                        ; [#uses = 1]
  br i1 %8, label %ororend, label %oror

oror:                                             ; preds = %0
  %9 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %10 = load i8, i8* %9, align 1                  ; [#uses = 1]
  %11 = zext i8 %10 to i32                        ; [#uses = 1]
  %12 = icmp eq i32 %11, 99                       ; [#uses = 1]
  br label %ororend

ororend:                                          ; preds = %oror, %0
  %ororval = phi i1 [ true, %0 ], [ %12, %oror ]  ; [#uses = 1, type = i1]
  br i1 %ororval, label %if, label %else

if:                                               ; preds = %ororend
  %13 = bitcast [1 x i8]* %val to i8*             ; [#uses = 1]
  %14 = insertvalue { i64, i8* } { i64 1, i8* undef }, i8* %13, 1 ; [#uses = 1]
  call void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTAaTaZQByFNaNfKQBsQrMKxSQDtQDs4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %14, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  br label %endif

else:                                             ; preds = %ororend
  %15 = getelementptr inbounds [1 x i8], [1 x i8]* %val, i32 0, i64 0 ; [#uses = 1, type = i8*]
  %16 = load i8, i8* %15, align 1                 ; [#uses = 1]
  call void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoThTaZQCaFNaNfKQBrxhMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %16, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 1]
declare void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTAaTaZQByFNaNfKQBsQrMKxSQDtQDs4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8), { i64, i8* }, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72)) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTbTaZQBwFKQBnbMKxSQDdQDc4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 46, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.82, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTbTaZQCaFNaNfKQBrxbMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i1 zeroext %obj_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %obj = alloca i8, align 1                       ; [#uses = 2, size/byte = 1]
  %val = alloca i8, align 1                       ; [#uses = 3, size/byte = 1]
  %condtmp = alloca { i64, i8* }*, align 8        ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp = alloca { i64, i8* }, align 8  ; [#uses = 3, size/byte = 16]
  %.makelvaluetmp1 = alloca { i64, i8* }, align 8 ; [#uses = 3, size/byte = 16]
  %1 = zext i1 %obj_arg to i8                     ; [#uses = 1]
  store i8 %1, i8* %obj, align 1
  %2 = load i8, i8* %obj, align 1                 ; [#uses = 1]
  %3 = trunc i8 %2 to i1                          ; [#uses = 1]
  %4 = zext i1 %3 to i8                           ; [#uses = 1]
  store i8 %4, i8* %val, align 1
  %5 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %6 = load i8, i8* %5, align 1                   ; [#uses = 1]
  %7 = zext i8 %6 to i32                          ; [#uses = 1]
  %8 = icmp eq i32 %7, 115                        ; [#uses = 1]
  br i1 %8, label %if, label %else

if:                                               ; preds = %0
  %9 = load i8, i8* %val, align 1                 ; [#uses = 1]
  %10 = trunc i8 %9 to i1                         ; [#uses = 1]
  br i1 %10, label %condtrue, label %condfalse

condtrue:                                         ; preds = %if
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 4, i64* %11, align 8
  %12 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0), i8** %12, align 8
  store { i64, i8* }* %.makelvaluetmp, { i64, i8* }** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %if
  %13 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp1, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 5, i64* %13, align 8
  %14 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %.makelvaluetmp1, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i32 0, i32 0), i8** %14, align 8
  store { i64, i8* }* %.makelvaluetmp1, { i64, i8* }** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %15 = load { i64, i8* }*, { i64, i8* }** %condtmp, align 8 ; [#uses = 1]
  %16 = load { i64, i8* }, { i64, i8* }* %15, align 8 ; [#uses = 1]
  call void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTQhTaZQByFNaNfKQBsQyMKxSQDtQDs4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %16, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0
  br label %endif

else:                                             ; preds = %0
  %17 = load i8, i8* %val, align 1                ; [#uses = 1]
  %18 = trunc i8 %17 to i1                        ; [#uses = 1]
  %19 = zext i1 %18 to i8                         ; [#uses = 1]
  call void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTgTaZQCaFNaNfKQBrxgMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 signext %19, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  br label %endif

endif:                                            ; preds = %else, %condend
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTgTaZQCaFNaNfKQBrxgMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 signext %obj_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %obj = alloca i8, align 1                       ; [#uses = 2, size/byte = 1]
  %val = alloca i8, align 1                       ; [#uses = 5, size/byte = 1]
  %raw = alloca { i64, i8* }, align 8             ; [#uses = 6, size/byte = 16]
  %__r2190 = alloca { i64, i8* }, align 8         ; [#uses = 4, size/byte = 16]
  %__key2191 = alloca i64, align 8                ; [#uses = 4, size/byte = 8]
  %c = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %__r2192 = alloca { i64, i8* }, align 8         ; [#uses = 4, size/byte = 16]
  %__key2193 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %c14 = alloca i8, align 1                       ; [#uses = 2, size/byte = 1]
  %negative = alloca i8, align 1                  ; [#uses = 3, size/byte = 1]
  %arg = alloca i64, align 8                      ; [#uses = 4, size/byte = 8]
  %condtmp = alloca i64*, align 8                 ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp = alloca i64, align 8           ; [#uses = 2, size/byte = 8]
  %.makelvaluetmp28 = alloca i64, align 8         ; [#uses = 2, size/byte = 8]
  store i8 %obj_arg, i8* %obj, align 1
  %1 = load i8, i8* %obj, align 1                 ; [#uses = 1]
  store i8 %1, i8* %val, align 1
  %2 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %3 = load i8, i8* %2, align 1                   ; [#uses = 1]
  %4 = zext i8 %3 to i32                          ; [#uses = 1]
  %5 = icmp eq i32 %4, 114                        ; [#uses = 1]
  br i1 %5, label %if, label %endif

if:                                               ; preds = %0
  %6 = call { i64, i8* } @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTgTaZQCaFKQBnxgMKxSQDrQDq4spec__T10FormatSpecTaZQpZ__T9__lambda5TgZQnFNaNbNiNeKgZAxa(i8* dereferenceable(1) %val) #0 ; [#uses = 2]
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = extractvalue { i64, i8* } %6, 0         ; [#uses = 1]
  store i64 %.len, i64* %7, align 8
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = extractvalue { i64, i8* } %6, 1         ; [#uses = 1]
  store i8* %.ptr, i8** %8, align 8
  %9 = call zeroext i1 @_D3std6format8internal5write__T19needToSwapEndianessTaZQyFNaNbNiNfMKxSQCqQCp4spec__T10FormatSpecTaZQpZb(%"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 ; [#uses = 1]
  br i1 %9, label %if1, label %else

if1:                                              ; preds = %if
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr3 = load i8*, i8** %10, align 8            ; [#uses = 2]
  %11 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len4 = load i64, i64* %11, align 8            ; [#uses = 2]
  %12 = insertvalue { i64, i8* } undef, i64 %.len4, 0 ; [#uses = 1]
  %13 = insertvalue { i64, i8* } %12, i8* %.ptr3, 1 ; [#uses = 0]
  %14 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2190, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %.len4, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2190, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %.ptr3, i8** %15, align 8
  %16 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2190, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len5 = load i64, i64* %16, align 8            ; [#uses = 1]
  store i64 %.len5, i64* %__key2191, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %if1
  %17 = load i64, i64* %__key2191, align 8        ; [#uses = 2]
  %18 = sub i64 %17, 1                            ; [#uses = 1]
  store i64 %18, i64* %__key2191, align 8
  %19 = icmp ne i64 %17, 0                        ; [#uses = 1]
  br i1 %19, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %20 = load i64, i64* %__key2191, align 8        ; [#uses = 1]
  %21 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2190, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr6 = load i8*, i8** %21, align 8            ; [#uses = 1]
  %22 = getelementptr inbounds i8, i8* %.ptr6, i64 %20 ; [#uses = 1, type = i8*]
  %23 = load i8, i8* %22, align 1                 ; [#uses = 1]
  store i8 %23, i8* %c, align 1
  %24 = load i8, i8* %c, align 1                  ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxaZQBmFNaNbNfKQBsxaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %24) #0
  br label %forinc

forinc:                                           ; preds = %forbody
  br label %forcond

endfor:                                           ; preds = %forcond
  br label %endif2

else:                                             ; preds = %if
  %25 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr7 = load i8*, i8** %25, align 8            ; [#uses = 2]
  %26 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %raw, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len8 = load i64, i64* %26, align 8            ; [#uses = 2]
  %27 = insertvalue { i64, i8* } undef, i64 %.len8, 0 ; [#uses = 1]
  %28 = insertvalue { i64, i8* } %27, i8* %.ptr7, 1 ; [#uses = 0]
  %29 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2192, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %.len8, i64* %29, align 8
  %30 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2192, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %.ptr7, i8** %30, align 8
  store i64 0, i64* %__key2193, align 8
  br label %forcond9

forcond9:                                         ; preds = %forinc11, %else
  %31 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2192, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len13 = load i64, i64* %31, align 8           ; [#uses = 1]
  %32 = load i64, i64* %__key2193, align 8        ; [#uses = 1]
  %33 = icmp ult i64 %32, %.len13                 ; [#uses = 1]
  br i1 %33, label %forbody10, label %endfor12

forbody10:                                        ; preds = %forcond9
  %34 = load i64, i64* %__key2193, align 8        ; [#uses = 1]
  %35 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2192, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr15 = load i8*, i8** %35, align 8           ; [#uses = 1]
  %36 = getelementptr inbounds i8, i8* %.ptr15, i64 %34 ; [#uses = 1, type = i8*]
  %37 = load i8, i8* %36, align 1                 ; [#uses = 1]
  store i8 %37, i8* %c14, align 1
  %38 = load i8, i8* %c14, align 1                ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxaZQBmFNaNbNfKQBsxaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %38) #0
  br label %forinc11

forinc11:                                         ; preds = %forbody10
  %39 = load i64, i64* %__key2193, align 8        ; [#uses = 1]
  %40 = add i64 %39, 1                            ; [#uses = 1]
  store i64 %40, i64* %__key2193, align 8
  br label %forcond9

endfor12:                                         ; preds = %forcond9
  br label %endif2

endif2:                                           ; preds = %endfor12, %endfor
  ret void

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %0
  %41 = load i8, i8* %val, align 1                ; [#uses = 1]
  %42 = sext i8 %41 to i32                        ; [#uses = 1]
  %43 = icmp slt i32 %42, 0                       ; [#uses = 1]
  br i1 %43, label %andand, label %andandend

andand:                                           ; preds = %endif
  %44 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %45 = load i8, i8* %44, align 1                 ; [#uses = 1]
  %46 = zext i8 %45 to i32                        ; [#uses = 1]
  %47 = icmp ne i32 %46, 120                      ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %endif
  %andandval = phi i1 [ false, %endif ], [ %47, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand16, label %andandend17

andand16:                                         ; preds = %andandend
  %48 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %49 = load i8, i8* %48, align 1                 ; [#uses = 1]
  %50 = zext i8 %49 to i32                        ; [#uses = 1]
  %51 = icmp ne i32 %50, 88                       ; [#uses = 1]
  br label %andandend17

andandend17:                                      ; preds = %andand16, %andandend
  %andandval18 = phi i1 [ false, %andandend ], [ %51, %andand16 ] ; [#uses = 1, type = i1]
  br i1 %andandval18, label %andand19, label %andandend20

andand19:                                         ; preds = %andandend17
  %52 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %53 = load i8, i8* %52, align 1                 ; [#uses = 1]
  %54 = zext i8 %53 to i32                        ; [#uses = 1]
  %55 = icmp ne i32 %54, 98                       ; [#uses = 1]
  br label %andandend20

andandend20:                                      ; preds = %andand19, %andandend17
  %andandval21 = phi i1 [ false, %andandend17 ], [ %55, %andand19 ] ; [#uses = 1, type = i1]
  br i1 %andandval21, label %andand22, label %andandend23

andand22:                                         ; preds = %andandend20
  %56 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %57 = load i8, i8* %56, align 1                 ; [#uses = 1]
  %58 = zext i8 %57 to i32                        ; [#uses = 1]
  %59 = icmp ne i32 %58, 111                      ; [#uses = 1]
  br label %andandend23

andandend23:                                      ; preds = %andand22, %andandend20
  %andandval24 = phi i1 [ false, %andandend20 ], [ %59, %andand22 ] ; [#uses = 1, type = i1]
  br i1 %andandval24, label %andand25, label %andandend26

andand25:                                         ; preds = %andandend23
  %60 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %61 = load i8, i8* %60, align 1                 ; [#uses = 1]
  %62 = zext i8 %61 to i32                        ; [#uses = 1]
  %63 = icmp ne i32 %62, 117                      ; [#uses = 1]
  br label %andandend26

andandend26:                                      ; preds = %andand25, %andandend23
  %andandval27 = phi i1 [ false, %andandend23 ], [ %63, %andand25 ] ; [#uses = 1, type = i1]
  %64 = zext i1 %andandval27 to i8                ; [#uses = 1]
  store i8 %64, i8* %negative, align 1
  %65 = load i8, i8* %negative, align 1           ; [#uses = 1]
  %66 = trunc i8 %65 to i1                        ; [#uses = 1]
  br i1 %66, label %condtrue, label %condfalse

condtrue:                                         ; preds = %andandend26
  %67 = load i8, i8* %val, align 1                ; [#uses = 1]
  %68 = sext i8 %67 to i64                        ; [#uses = 1]
  %negval = sub i64 0, %68                        ; [#uses = 1]
  store i64 %negval, i64* %.makelvaluetmp, align 8
  store i64* %.makelvaluetmp, i64** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %andandend26
  %69 = load i8, i8* %val, align 1                ; [#uses = 1]
  %70 = sext i8 %69 to i32                        ; [#uses = 1]
  %71 = sext i32 %70 to i64                       ; [#uses = 1]
  store i64 %71, i64* %.makelvaluetmp28, align 8
  store i64* %.makelvaluetmp28, i64** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %72 = load i64*, i64** %condtmp, align 8        ; [#uses = 1]
  %73 = load i64, i64* %72, align 8               ; [#uses = 1]
  store i64 %73, i64* %arg, align 8
  %74 = load i64, i64* %arg, align 8              ; [#uses = 1]
  %75 = and i64 %74, 255                          ; [#uses = 1]
  store i64 %75, i64* %arg, align 8
  %76 = load i64, i64* %arg, align 8              ; [#uses = 1]
  %77 = load i8, i8* %negative, align 1           ; [#uses = 1]
  %78 = trunc i8 %77 to i1                        ; [#uses = 1]
  call void @_D3std6format8internal5write__T20formatValueImplUlongTSQCb5array__T8AppenderTAyaZQoTaZQCdFNaNfKQBpmIbMKxSQDzQDy4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i64 %76, i1 zeroext %78, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTgTaZQCaFKQBnxgMKxSQDrQDq4spec__T10FormatSpecTaZQpZ__T9__lambda5TgZQnFNaNbNiNeKgZAxa(i8* dereferenceable(1) %val) #0 {
  %lowerbound = getelementptr inbounds i8, i8* %val, i64 0 ; [#uses = 1, type = i8*]
  %1 = insertvalue { i64, i8* } { i64 1, i8* undef }, i8* %lowerbound, 1 ; [#uses = 1]
  ret { i64, i8* } %1
}

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxAaTaZQByFKQBpKxQpMKxSQDiQDh4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 46, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.82, i32 0, i32 0) }
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTAxaTaZQCcFNaNfKQBtMxAaMKxSQDzQDy4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %obj_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %obj = alloca { i64, i8* }, align 8             ; [#uses = 3, size/byte = 16]
  %val = alloca { i64, i8* }, align 8             ; [#uses = 3, size/byte = 16]
  store { i64, i8* } %obj_arg, { i64, i8* }* %obj, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %val, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %obj, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %2, align 8              ; [#uses = 1]
  store i64 %.len, i64* %1, align 8
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %val, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %obj, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %4, align 8              ; [#uses = 1]
  store i8* %.ptr, i8** %3, align 8
  call void @_D3std6format8internal5write__T11formatRangeTSQBs5array__T8AppenderTAyaZQoTAxaTaZQByFNaNfKQBtKQtMKxSQDuQDt4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* }* dereferenceable(16) %val, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T11formatRangeTSQBs5array__T8AppenderTAyaZQoTAxaTaZQByFNaNfKQBtKQtMKxSQDuQDt4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* }* dereferenceable(16) %val, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %condtmp = alloca i64*, align 8                 ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp = alloca i64, align 8           ; [#uses = 2, size/byte = 8]
  %.makelvaluetmp2 = alloca i64, align 8          ; [#uses = 2, size/byte = 8]
  %a = alloca { i64, i8* }, align 8               ; [#uses = 4, size/byte = 16]
  %__r2221 = alloca { i64, i8* }, align 8         ; [#uses = 4, size/byte = 16]
  %__key2222 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %e = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %fmt = alloca %"std.format.spec.FormatSpec!char.FormatSpec", align 8 ; [#uses = 9, size/byte = 72]
  %r = alloca i8, align 1                         ; [#uses = 2, size/byte = 1]
  %__key2223 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %__limit2224 = alloca i64, align 8              ; [#uses = 2, size/byte = 8]
  %i = alloca i64, align 8                        ; [#uses = 3, size/byte = 8]
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %2 = load i8, i8* %1, align 1                   ; [#uses = 1]
  %3 = zext i8 %2 to i32                          ; [#uses = 1]
  %4 = icmp eq i32 %3, 115                        ; [#uses = 1]
  br i1 %4, label %if, label %else

if:                                               ; preds = %0
  %5 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %6 = load i32, i32* %5, align 4                 ; [#uses = 1]
  %7 = sext i32 %6 to i64                         ; [#uses = 1]
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %val, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %8, align 8              ; [#uses = 1]
  %9 = icmp ult i64 %7, %.len                     ; [#uses = 1]
  br i1 %9, label %condtrue, label %condfalse

condtrue:                                         ; preds = %if
  %10 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %11 = load i32, i32* %10, align 4               ; [#uses = 1]
  %12 = sext i32 %11 to i64                       ; [#uses = 1]
  store i64 %12, i64* %.makelvaluetmp, align 8
  store i64* %.makelvaluetmp, i64** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %if
  %13 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %val, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %13, align 8            ; [#uses = 1]
  store i64 %.len1, i64* %.makelvaluetmp2, align 8
  store i64* %.makelvaluetmp2, i64** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %14 = load i64*, i64** %condtmp, align 8        ; [#uses = 1]
  %15 = load i64, i64* %14, align 8               ; [#uses = 3]
  %16 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %val, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len3 = load i64, i64* %16, align 8            ; [#uses = 2]
  %bounds.cmp.up = icmp ule i64 %15, %.len3       ; [#uses = 1]
  br i1 %bounds.cmp.up, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %condend
  %17 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %val, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %17, align 8             ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr, i64 0 ; [#uses = 1, type = i8*]
  %18 = sub i64 %15, 0                            ; [#uses = 1]
  %19 = insertvalue { i64, i8* } undef, i64 %18, 0 ; [#uses = 1]
  %20 = insertvalue { i64, i8* } %19, i8* %lowerbound, 1 ; [#uses = 1]
  call void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTAxaTaZQBzFNaNfKQBtQsMKxSQDuQDt4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %20, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  br label %endif

bounds.fail:                                      ; preds = %condend
  call void @_d_arraybounds_slice({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 1425, i64 0, i64 %15, i64 %.len3) #5
  unreachable

else:                                             ; preds = %0
  %21 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %22 = load i8, i8* %21, align 1                 ; [#uses = 1]
  %23 = zext i8 %22 to i32                        ; [#uses = 1]
  %24 = icmp eq i32 %23, 114                      ; [#uses = 1]
  br i1 %24, label %if4, label %else6

if4:                                              ; preds = %else
  %25 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %26 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %val, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len7 = load i64, i64* %26, align 8            ; [#uses = 1]
  store i64 %.len7, i64* %25, align 8
  %27 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %28 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %val, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr8 = load i8*, i8** %28, align 8            ; [#uses = 1]
  store i8* %.ptr8, i8** %27, align 8
  %29 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr9 = load i8*, i8** %29, align 8            ; [#uses = 2]
  %30 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len10 = load i64, i64* %30, align 8           ; [#uses = 2]
  %31 = insertvalue { i64, i8* } undef, i64 %.len10, 0 ; [#uses = 1]
  %32 = insertvalue { i64, i8* } %31, i8* %.ptr9, 1 ; [#uses = 0]
  %33 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2221, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %.len10, i64* %33, align 8
  %34 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2221, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %.ptr9, i8** %34, align 8
  store i64 0, i64* %__key2222, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %if4
  %35 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2221, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len11 = load i64, i64* %35, align 8           ; [#uses = 1]
  %36 = load i64, i64* %__key2222, align 8        ; [#uses = 1]
  %37 = icmp ult i64 %36, %.len11                 ; [#uses = 1]
  br i1 %37, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %38 = load i64, i64* %__key2222, align 8        ; [#uses = 1]
  %39 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %__r2221, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr12 = load i8*, i8** %39, align 8           ; [#uses = 1]
  %40 = getelementptr inbounds i8, i8* %.ptr12, i64 %38 ; [#uses = 1, type = i8*]
  %41 = load i8, i8* %40, align 1                 ; [#uses = 1]
  store i8 %41, i8* %e, align 1
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTxaTaZQBxFNaNfKQBsKxaMKxSQDkQDj4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8* dereferenceable(1) %e, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0
  br label %forinc

forinc:                                           ; preds = %forbody
  %42 = load i64, i64* %__key2222, align 8        ; [#uses = 1]
  %43 = add i64 %42, 1                            ; [#uses = 1]
  store i64 %43, i64* %__key2222, align 8
  br label %forcond

endfor:                                           ; preds = %forcond
  br label %endif5

else6:                                            ; preds = %else
  %44 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %45 = load i8, i8* %44, align 1                 ; [#uses = 1]
  %46 = zext i8 %45 to i32                        ; [#uses = 1]
  %47 = icmp eq i32 %46, 40                       ; [#uses = 1]
  br i1 %47, label %if13, label %else15

if13:                                             ; preds = %else6
  %48 = call zeroext i1 @_D3std5range10primitives__T5emptyTAxaZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %val) #0 ; [#uses = 1]
  br i1 %48, label %if16, label %endif17

if16:                                             ; preds = %if13
  ret void

dummy.afterreturn:                                ; No predecessors!
  br label %endif17

endif17:                                          ; preds = %dummy.afterreturn, %if13
  br label %forcond18

forcond18:                                        ; preds = %forinc20, %endif17
  br i1 true, label %forbody19, label %endfor21

forbody19:                                        ; preds = %forcond18
  %49 = bitcast %"std.format.spec.FormatSpec!char.FormatSpec"* %fmt to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 bitcast (%"std.format.spec.FormatSpec!char.FormatSpec"* @_D3std6format4spec__T10FormatSpecTaZQp6__initZ to i8*), i64 72, i1 false)
  %50 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 10 ; [#uses = 1, type = { i64, i8* }*]
  %51 = load { i64, i8* }, { i64, i8* }* %50, align 8 ; [#uses = 1]
  %52 = call %"std.format.spec.FormatSpec!char.FormatSpec"* @_D3std6format4spec__T10FormatSpecTaZQp6__ctorMFNaNbNcNiNfIAaZSQCiQChQCd__TQCbTaZQCh(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull returned %fmt, { i64, i8* } %51) #0 ; [#uses = 0]
  br label %label.w

label.w:                                          ; preds = %forbody19
  br label %forcond22

forcond22:                                        ; preds = %forinc24, %label.w
  br i1 true, label %forbody23, label %endfor25

forbody23:                                        ; preds = %forcond22
  %53 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp__T17writeUpToNextSpecTSQCi5array__T8AppenderTAyaZQoZQByMFNaNlNfKQBqZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %fmt, %"std.array.Appender!string.Appender"* dereferenceable(8) %w) #0 ; [#uses = 1]
  %54 = zext i1 %53 to i8                         ; [#uses = 1]
  store i8 %54, i8* %r, align 1
  %55 = load i8, i8* %r, align 1                  ; [#uses = 1]
  %56 = trunc i8 %55 to i1                        ; [#uses = 1]
  %57 = icmp eq i1 %56, false                     ; [#uses = 1]
  br i1 %57, label %if26, label %endif27

if26:                                             ; preds = %forbody23
  br label %endfor25

afterbreak:                                       ; No predecessors!
  br label %endif27

endif27:                                          ; preds = %afterbreak, %forbody23
  %58 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flDashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  br i1 %58, label %if28, label %else30

if28:                                             ; preds = %endif27
  %59 = load { i64, i8* }, { i64, i8* }* %val, align 8 ; [#uses = 1]
  %60 = call i32 @_D3std5range10primitives__T5frontTaZQjFNaNdNfMAxaZw({ i64, i8* } %59) #0 ; [#uses = 1]
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTwTaZQBwFNaNfKQBrwMKxSQDhQDg4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32 %60, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %fmt) #1
  br label %endif29

else30:                                           ; preds = %endif27
  %61 = load { i64, i8* }, { i64, i8* }* %val, align 8 ; [#uses = 1]
  %62 = call i32 @_D3std5range10primitives__T5frontTaZQjFNaNdNfMAxaZw({ i64, i8* } %61) #0 ; [#uses = 1]
  call void @_D3std6format8internal5write__T13formatElementTSQBu5array__T8AppenderTAyaZQoTwTaZQByFNaNfKQBrwMKxSQDsQDr4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32 %62, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %fmt) #1
  br label %endif29

endif29:                                          ; preds = %else30, %if28
  store i64 0, i64* %__key2223, align 8
  %63 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %fmt, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %64 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %63, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len31 = load i64, i64* %64, align 8           ; [#uses = 1]
  store i64 %.len31, i64* %__limit2224, align 8
  br label %forcond32

forcond32:                                        ; preds = %forinc34, %endif29
  %65 = load i64, i64* %__key2223, align 8        ; [#uses = 1]
  %66 = load i64, i64* %__limit2224, align 8      ; [#uses = 1]
  %67 = icmp ult i64 %65, %66                     ; [#uses = 1]
  br i1 %67, label %forbody33, label %endfor35

forbody33:                                        ; preds = %forcond32
  %68 = load i64, i64* %__key2223, align 8        ; [#uses = 1]
  store i64 %68, i64* %i, align 8
  %69 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %fmt, i32 0, i32 12 ; [#uses = 2, type = { i64, i8* }*]
  %70 = load i64, i64* %i, align 8                ; [#uses = 2]
  %71 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %69, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len36 = load i64, i64* %71, align 8           ; [#uses = 2]
  %bounds.cmp = icmp ult i64 %70, %.len36         ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok37, label %bounds.fail38

bounds.ok37:                                      ; preds = %forbody33
  %72 = load i64, i64* %i, align 8                ; [#uses = 1]
  %73 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %69, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr39 = load i8*, i8** %73, align 8           ; [#uses = 1]
  %74 = getelementptr inbounds i8, i8* %.ptr39, i64 %72 ; [#uses = 1, type = i8*]
  %75 = load i8, i8* %74, align 1                 ; [#uses = 1]
  %76 = zext i8 %75 to i32                        ; [#uses = 1]
  %77 = icmp eq i32 %76, 37                       ; [#uses = 1]
  br i1 %77, label %if40, label %endif41

if40:                                             ; preds = %bounds.ok37
  br label %forinc24

aftercontinue:                                    ; No predecessors!
  br label %endif41

endif41:                                          ; preds = %aftercontinue, %bounds.ok37
  br label %forinc34

bounds.fail38:                                    ; preds = %forbody33
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 1555, i64 %70, i64 %.len36) #5
  unreachable

forinc34:                                         ; preds = %endif41
  %78 = load i64, i64* %__key2223, align 8        ; [#uses = 1]
  %79 = add i64 %78, 1                            ; [#uses = 1]
  store i64 %79, i64* %__key2223, align 8
  br label %forcond32

endfor35:                                         ; preds = %forcond32
  br label %endfor25

afterbreak42:                                     ; No predecessors!
  br label %forinc24

forinc24:                                         ; preds = %afterbreak42, %if40
  br label %forcond22

endfor25:                                         ; preds = %endfor35, %if26, %forcond22
  %80 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 11 ; [#uses = 2, type = { i64, i8* }*]
  %81 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %80, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len43 = load i64, i64* %81, align 8           ; [#uses = 1]
  %82 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %80, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr44 = load i8*, i8** %82, align 8           ; [#uses = 1]
  %83 = icmp ne i64 %.len43, 0                    ; [#uses = 1]
  %84 = icmp ne i8* %.ptr44, null                 ; [#uses = 1]
  %85 = or i1 %83, %84                            ; [#uses = 1]
  br i1 %85, label %if45, label %else47

if45:                                             ; preds = %endfor25
  %86 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %fmt, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %87 = load { i64, i8* }, { i64, i8* }* %86, align 8 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTAxaZQBnFNaNbNfKQBtQsZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %87) #0
  call void @_D3std5range10primitives__T8popFrontTaZQmFNaNbNiNeMKANgaZv({ i64, i8* }* dereferenceable(16) %val) #0
  %88 = call zeroext i1 @_D3std5range10primitives__T5emptyTAxaZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %val) #0 ; [#uses = 1]
  br i1 %88, label %if48, label %endif49

if48:                                             ; preds = %if45
  br label %endfor21

afterbreak50:                                     ; No predecessors!
  br label %endif49

endif49:                                          ; preds = %afterbreak50, %if45
  %89 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 11 ; [#uses = 1, type = { i64, i8* }*]
  %90 = load { i64, i8* }, { i64, i8* }* %89, align 8 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTAxaZQBnFNaNbNfKQBtQsZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %90) #0
  br label %endif46

else47:                                           ; preds = %endfor25
  call void @_D3std5range10primitives__T8popFrontTaZQmFNaNbNiNeMKANgaZv({ i64, i8* }* dereferenceable(16) %val) #0
  %91 = call zeroext i1 @_D3std5range10primitives__T5emptyTAxaZQlFNaNbNdNiNfMKQtZb({ i64, i8* }* dereferenceable(16) %val) #0 ; [#uses = 1]
  br i1 %91, label %if51, label %endif52

if51:                                             ; preds = %else47
  br label %endfor21

afterbreak53:                                     ; No predecessors!
  br label %endif52

endif52:                                          ; preds = %afterbreak53, %else47
  %92 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %fmt, i32 0, i32 12 ; [#uses = 1, type = { i64, i8* }*]
  %93 = load { i64, i8* }, { i64, i8* }* %92, align 8 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTAxaZQBnFNaNbNfKQBtQsZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %93) #0
  br label %endif46

endif46:                                          ; preds = %endif52, %endif49
  br label %forinc20

forinc20:                                         ; preds = %endif46
  br label %forcond18

endfor21:                                         ; preds = %if51, %if48, %forcond18
  br label %endif14

else15:                                           ; preds = %else6
  %.newclass_gc_alloc = call %object.Object* @_d_allocclass(%object.TypeInfo_Class* @_D3std6format15FormatException7__ClassZ) #2 ; [#uses = 1]
  %.newclass_gc = bitcast %object.Object* %.newclass_gc_alloc to %std.format.FormatException* ; [#uses = 5]
  %vtbl = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 0 ; [#uses = 1, type = [10 x i8*]**]
  store [10 x i8*]* @_D3std6format15FormatException6__vtblZ, [10 x i8*]** %vtbl, align 8
  %monitor = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* null, i8** %monitor, align 8
  %94 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* %.newclass_gc, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %95 = getelementptr inbounds %std.format.FormatException, %std.format.FormatException* @_D3std6format15FormatException6__initZ, i32 0, i32 2 ; [#uses = 1, type = { i64, i8* }*]
  %96 = bitcast { i64, i8* }* %94 to i8*          ; [#uses = 1]
  %97 = bitcast { i64, i8* }* %95 to i8*          ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %97, i64 68, i1 false)
  %98 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %99 = load i8, i8* %98, align 1                 ; [#uses = 1]
  %100 = call { i64, i8* } @_D3std4conv__T4textTAyaTxaZQnFNaNbNfQqxaZQv({ i64, i8* } { i64 39, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.118, i32 0, i32 0) }, i8 zeroext %99) #1 ; [#uses = 1]
  %101 = call %std.format.FormatException* @_D3std6format15FormatException6__ctorMFNaNbNiNfAyaQdmC6object9ThrowableZCQCtQCsQCo(%std.format.FormatException* nonnull returned %.newclass_gc, { i64, i8* } %100, { i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i64 1584, %object.Throwable* null) #1 ; [#uses = 0]
  %102 = bitcast %std.format.FormatException* %.newclass_gc to %object.Throwable* ; [#uses = 1]
  call void @_d_throw_exception(%object.Throwable* %102) #5
  unreachable

afterthrow:                                       ; No predecessors!
  br label %endif14

endif14:                                          ; preds = %afterthrow, %endfor21
  br label %endif5

endif5:                                           ; preds = %endif14, %endfor
  br label %endif

endif:                                            ; preds = %endif5, %bounds.ok
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTAxaTaZQBzFNaNfKQBtQsMKxSQDuQDt4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %s_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %s = alloca { i64, i8* }, align 8               ; [#uses = 2, size/byte = 16]
  %fs = alloca %"std.format.spec.FormatSpec!char.FormatSpec", align 8 ; [#uses = 3, size/byte = 72]
  %.lval_copy_for_ImplicitByvalRewrite = alloca { i64, i8* }, align 8 ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %s_arg, { i64, i8* }* %s, align 8
  %1 = bitcast %"std.format.spec.FormatSpec!char.FormatSpec"* %fs to i8* ; [#uses = 1]
  %2 = bitcast %"std.format.spec.FormatSpec!char.FormatSpec"* %f to i8* ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %2, i64 72, i1 false)
  call void @_D3std6format4spec__T10FormatSpecTaZQp6flZeroMFNaNbNdNiNfbZv(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %fs, i1 zeroext false) #0
  %3 = bitcast { i64, i8* }* %.lval_copy_for_ImplicitByvalRewrite to i8* ; [#uses = 1]
  %4 = bitcast { i64, i8* }* %s to i8*            ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  call void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTQhTQkTAxaTaZQCfFNaNfKQBzQBfQBiQyMKxSQEgQEf4spec__T10FormatSpecTaZQpbZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } { i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0) }, { i64, i8* } { i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0) }, { i64, i8* }* byval({ i64, i8* }) align 8 %.lval_copy_for_ImplicitByvalRewrite, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %fs, i1 zeroext false) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTwTaZQBwFNaNfKQBrwMKxSQDhQDg4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32 %val_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %val = alloca i32, align 4                      ; [#uses = 2, size/byte = 4]
  store i32 %val_arg, i32* %val, align 4
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %2 = load i32, i32* %1, align 4                 ; [#uses = 1]
  %3 = icmp ne i32 %2, 2147483647                 ; [#uses = 1]
  br i1 %3, label %andand, label %andandend

andand:                                           ; preds = %0
  %4 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %5 = load i32, i32* %4, align 4                 ; [#uses = 1]
  %6 = icmp ne i32 %5, 2147483647                 ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %0
  %andandval = phi i1 [ false, %0 ], [ %6, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %andand1, label %andandend2

andand1:                                          ; preds = %andandend
  %7 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %8 = load i32, i32* %7, align 4                 ; [#uses = 1]
  %9 = icmp ne i32 %8, 2147483647                 ; [#uses = 1]
  br label %andandend2

andandend2:                                       ; preds = %andand1, %andandend
  %andandval3 = phi i1 [ false, %andandend ], [ %9, %andand1 ] ; [#uses = 1, type = i1]
  br i1 %andandval3, label %andand4, label %andandend5

andand4:                                          ; preds = %andandend2
  %10 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 3 ; [#uses = 1, type = i8*]
  %11 = load i8, i8* %10, align 1                 ; [#uses = 1]
  %12 = trunc i8 %11 to i1                        ; [#uses = 1]
  %13 = icmp eq i1 %12, false                     ; [#uses = 1]
  br label %andandend5

andandend5:                                       ; preds = %andand4, %andandend2
  %andandval6 = phi i1 [ false, %andandend2 ], [ %13, %andand4 ] ; [#uses = 1, type = i1]
  %14 = call zeroext i1 @_D3std9exception__T7enforceHTCQBc6format15FormatExceptionZ__TQBqTbZQBwFNaNfbLAxaAyamZb(i1 zeroext %andandval6, { i8*, { i64, i8* } (i8*)* } { i8* null, { i64, i8* } (i8*)* @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTwTaZQBwFKQBnwMKxSQDdQDc4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa }, { i64, i8* } { i64 58, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i32 0, i32 0) }, i64 1235) #0 ; [#uses = 0]
  %15 = load i32, i32* %val, align 4              ; [#uses = 1]
  call void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTwTaZQCaFNaNfKQBrxwMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32 %15, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T13formatElementTSQBu5array__T8AppenderTAyaZQoTwTaZQByFNaNfKQBrwMKxSQDsQDr4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32 %val_arg, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #0 {
  %val = alloca i32, align 4                      ; [#uses = 3, size/byte = 4]
  store i32 %val_arg, i32* %val, align 4
  %1 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 6 ; [#uses = 1, type = i8*]
  %2 = load i8, i8* %1, align 1                   ; [#uses = 1]
  %3 = zext i8 %2 to i32                          ; [#uses = 1]
  %4 = icmp eq i32 %3, 115                        ; [#uses = 1]
  br i1 %4, label %if, label %else

if:                                               ; preds = %0
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 39) #0
  %5 = load i32, i32* %val, align 4               ; [#uses = 1]
  call void @_D3std6format8internal5write__T10formatCharTSQBr5array__T8AppenderTAyaZQoZQBrFNaNfKQBnIwIaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32 %5, i8 zeroext 39) #1
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 39) #0
  br label %endif

else:                                             ; preds = %0
  call void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTwTaZQBwFNaNfKQBrKwMKxSQDiQDh4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32* dereferenceable(4) %val, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f) #1
  br label %endif

endif:                                            ; preds = %else, %if
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std4conv__T4textTAyaTxaZQnFNaNbNfQqxaZQv({ i64, i8* } %__param_0_arg, i8 zeroext %__param_1_arg) #0 {
  %__param_0 = alloca { i64, i8* }, align 8       ; [#uses = 2, size/byte = 16]
  %__param_1 = alloca i8, align 1                 ; [#uses = 2, size/byte = 1]
  store { i64, i8* } %__param_0_arg, { i64, i8* }* %__param_0, align 8
  store i8 %__param_1_arg, i8* %__param_1, align 1
  %1 = load { i64, i8* }, { i64, i8* }* %__param_0, align 8 ; [#uses = 1]
  %2 = load i8, i8* %__param_1, align 1           ; [#uses = 1]
  %3 = call { i64, i8* } @_D3std4conv__T8textImplTAyaTQeTxaZQuFNaNbNfQtxaZQy({ i64, i8* } %1, i8 zeroext %2) #1 ; [#uses = 1]
  ret { i64, i8* } %3
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTQhTQkTAxaTaZQCfFNaNfKQBzQBfQBiQyMKxSQEgQEf4spec__T10FormatSpecTaZQpbZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %prefix_arg, { i64, i8* } %grouped_arg, { i64, i8* }* byval({ i64, i8* }) align 8 %suffix, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f, i1 zeroext %integer_precision_arg) #0 {
  %prefix = alloca { i64, i8* }, align 8          ; [#uses = 2, size/byte = 16]
  %grouped = alloca { i64, i8* }, align 8         ; [#uses = 2, size/byte = 16]
  %integer_precision = alloca i8, align 1         ; [#uses = 2, size/byte = 1]
  %.getAddressOf_dump = alloca { i64, i8* }, align 8 ; [#uses = 2, size/byte = 16]
  %.lval_copy_for_ImplicitByvalRewrite = alloca { i64, i8* }, align 8 ; [#uses = 2, size/byte = 16]
  %condtmp = alloca i32*, align 8                 ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp = alloca i32, align 4           ; [#uses = 2, size/byte = 4]
  %.makelvaluetmp1 = alloca i32, align 4          ; [#uses = 2, size/byte = 4]
  store { i64, i8* } %prefix_arg, { i64, i8* }* %prefix, align 8
  store { i64, i8* } %grouped_arg, { i64, i8* }* %grouped, align 8
  %1 = zext i1 %integer_precision_arg to i8       ; [#uses = 1]
  store i8 %1, i8* %integer_precision, align 1
  %2 = load { i64, i8* }, { i64, i8* }* %prefix, align 8 ; [#uses = 1]
  %3 = load { i64, i8* }, { i64, i8* }* %grouped, align 8 ; [#uses = 1]
  store { i64, i8* } { i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.33, i32 0, i32 0) }, { i64, i8* }* %.getAddressOf_dump, align 8
  %4 = bitcast { i64, i8* }* %.lval_copy_for_ImplicitByvalRewrite to i8* ; [#uses = 1]
  %5 = bitcast { i64, i8* }* %suffix to i8*       ; [#uses = 1]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = load i8, i8* %integer_precision, align 1   ; [#uses = 1]
  %7 = trunc i8 %6 to i1                          ; [#uses = 1]
  br i1 %7, label %condtrue, label %condfalse

condtrue:                                         ; preds = %0
  store i32 1, i32* %.makelvaluetmp, align 4
  store i32* %.makelvaluetmp, i32** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %0
  store i32 0, i32* %.makelvaluetmp1, align 4
  store i32* %.makelvaluetmp1, i32** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %8 = load i32*, i32** %condtmp, align 8         ; [#uses = 1]
  %9 = load i32, i32* %8, align 4                 ; [#uses = 1]
  call void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTQhTQkTQnTAxaTaZQCiFNaNfKQCcQBiQBlQBoQBbMKxSQEnQEm4spec__T10FormatSpecTaZQpEQFtQFsQFoQFi13PrecisionTypeZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %2, { i64, i8* } %3, { i64, i8* }* byval({ i64, i8* }) align 8 %.getAddressOf_dump, { i64, i8* }* byval({ i64, i8* }) align 8 %.lval_copy_for_ImplicitByvalRewrite, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f, i32 %9) #1
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr void @_D3std6format8internal5write__T12writeAlignedTSQBt5array__T8AppenderTAyaZQoTQhTQkTQnTAxaTaZQCiFNaNfKQCcQBiQBlQBoQBbMKxSQEnQEm4spec__T10FormatSpecTaZQpEQFtQFsQFoQFi13PrecisionTypeZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %prefix_arg, { i64, i8* } %grouped_arg, { i64, i8* }* byval({ i64, i8* }) align 8 %fracts, { i64, i8* }* byval({ i64, i8* }) align 8 %suffix, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72) %f, i32 %p_arg) #0 {
  %prefix = alloca { i64, i8* }, align 8          ; [#uses = 3, size/byte = 16]
  %grouped = alloca { i64, i8* }, align 8         ; [#uses = 7, size/byte = 16]
  %p = alloca i32, align 4                        ; [#uses = 8, size/byte = 4]
  %prefixWidth = alloca i64, align 8              ; [#uses = 3, size/byte = 8]
  %groupedWidth = alloca i64, align 8             ; [#uses = 8, size/byte = 8]
  %fractsWidth = alloca i64, align 8              ; [#uses = 6, size/byte = 8]
  %suffixWidth = alloca i64, align 8              ; [#uses = 3, size/byte = 8]
  %doGrouping = alloca i8, align 1                ; [#uses = 6, size/byte = 1]
  %front = alloca i64, align 8                    ; [#uses = 10, size/byte = 8]
  %condtmp = alloca i64*, align 8                 ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp = alloca i64, align 8           ; [#uses = 2, size/byte = 8]
  %.makelvaluetmp13 = alloca i64, align 8         ; [#uses = 2, size/byte = 8]
  %sepCount = alloca i64, align 8                 ; [#uses = 3, size/byte = 8]
  %condtmp14 = alloca i64*, align 8               ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp18 = alloca i64, align 8         ; [#uses = 2, size/byte = 8]
  %.makelvaluetmp19 = alloca i64, align 8         ; [#uses = 2, size/byte = 8]
  %trailingZeros = alloca i64, align 8            ; [#uses = 8, size/byte = 8]
  %__key2201 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %__limit2202 = alloca i64, align 8              ; [#uses = 2, size/byte = 8]
  %i = alloca i64, align 8                        ; [#uses = 6, size/byte = 8]
  %nodot = alloca i8, align 1                     ; [#uses = 3, size/byte = 1]
  %width = alloca i64, align 8                    ; [#uses = 2, size/byte = 8]
  %delta = alloca i64, align 8                    ; [#uses = 20, size/byte = 8]
  %pregrouped = alloca i64, align 8               ; [#uses = 8, size/byte = 8]
  %__key2203 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %__limit2204 = alloca i64, align 8              ; [#uses = 2, size/byte = 8]
  %condtmp65 = alloca i64*, align 8               ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp72 = alloca i64, align 8         ; [#uses = 2, size/byte = 8]
  %.makelvaluetmp73 = alloca i64, align 8         ; [#uses = 2, size/byte = 8]
  %i78 = alloca i64, align 8                      ; [#uses = 1, size/byte = 8]
  %__key2205 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %__limit2206 = alloca i64, align 8              ; [#uses = 2, size/byte = 8]
  %i85 = alloca i64, align 8                      ; [#uses = 1, size/byte = 8]
  %front2 = alloca i64, align 8                   ; [#uses = 7, size/byte = 8]
  %sepCount2 = alloca i64, align 8                ; [#uses = 2, size/byte = 8]
  %__key2207 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %__limit2208 = alloca i64, align 8              ; [#uses = 2, size/byte = 8]
  %i106 = alloca i64, align 8                     ; [#uses = 1, size/byte = 8]
  %__key2209 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %__limit2210 = alloca i64, align 8              ; [#uses = 2, size/byte = 8]
  %i115 = alloca i64, align 8                     ; [#uses = 1, size/byte = 8]
  %__key2211 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %__limit2212 = alloca i64, align 8              ; [#uses = 2, size/byte = 8]
  %i124 = alloca i64, align 8                     ; [#uses = 3, size/byte = 8]
  %condtmp127 = alloca i8*, align 8               ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp131 = alloca i8, align 1         ; [#uses = 2, size/byte = 1]
  %__key2213 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %__limit2214 = alloca i64, align 8              ; [#uses = 2, size/byte = 8]
  %i141 = alloca i64, align 8                     ; [#uses = 1, size/byte = 8]
  %__key2215 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %__limit2216 = alloca i64, align 8              ; [#uses = 2, size/byte = 8]
  %i148 = alloca i64, align 8                     ; [#uses = 1, size/byte = 8]
  %__key2217 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %__limit2218 = alloca i64, align 8              ; [#uses = 2, size/byte = 8]
  %condtmp154 = alloca i64*, align 8              ; [#uses = 3, size/byte = 8]
  %.makelvaluetmp161 = alloca i64, align 8        ; [#uses = 2, size/byte = 8]
  %.makelvaluetmp162 = alloca i64, align 8        ; [#uses = 2, size/byte = 8]
  %i167 = alloca i64, align 8                     ; [#uses = 1, size/byte = 8]
  %__key2219 = alloca i64, align 8                ; [#uses = 5, size/byte = 8]
  %__limit2220 = alloca i64, align 8              ; [#uses = 2, size/byte = 8]
  %i174 = alloca i64, align 8                     ; [#uses = 1, size/byte = 8]
  store { i64, i8* } %prefix_arg, { i64, i8* }* %prefix, align 8
  store { i64, i8* } %grouped_arg, { i64, i8* }* %grouped, align 8
  store i32 %p_arg, i32* %p, align 4
  %1 = load i32, i32* %p, align 4                 ; [#uses = 1]
  %2 = icmp eq i32 %1, 1                          ; [#uses = 1]
  br i1 %2, label %andand, label %andandend

andand:                                           ; preds = %0
  %3 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %4 = load i32, i32* %3, align 4                 ; [#uses = 1]
  %5 = icmp eq i32 %4, 2147483646                 ; [#uses = 1]
  br label %andandend

andandend:                                        ; preds = %andand, %0
  %andandval = phi i1 [ false, %0 ], [ %5, %andand ] ; [#uses = 1, type = i1]
  br i1 %andandval, label %if, label %endif

if:                                               ; preds = %andandend
  store i32 0, i32* %p, align 4
  br label %endif

endif:                                            ; preds = %if, %andandend
  store i64 0, i64* %prefixWidth, align 8
  %6 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %grouped, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %6, align 8              ; [#uses = 1]
  store i64 %.len, i64* %groupedWidth, align 8
  %7 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fracts, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %7, align 8             ; [#uses = 1]
  store i64 %.len1, i64* %fractsWidth, align 8
  store i64 0, i64* %suffixWidth, align 8
  %8 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %9 = load i32, i32* %8, align 4                 ; [#uses = 1]
  %10 = icmp sgt i32 %9, 0                        ; [#uses = 1]
  br i1 %10, label %if2, label %endif3

if2:                                              ; preds = %endif
  %11 = load { i64, i8* }, { i64, i8* }* %prefix, align 8 ; [#uses = 1]
  %12 = call i64 @_D3std6format8internal5write__T8getWidthTAyaZQoFNaNfQlZl({ i64, i8* } %11) #1 ; [#uses = 1]
  store i64 %12, i64* %prefixWidth, align 8
  %13 = load { i64, i8* }, { i64, i8* }* %suffix, align 8 ; [#uses = 1]
  %14 = call i64 @_D3std6format8internal5write__T8getWidthTAxaZQoFNaNfQlZl({ i64, i8* } %13) #1 ; [#uses = 1]
  store i64 %14, i64* %suffixWidth, align 8
  br label %endif3

endif3:                                           ; preds = %if2, %endif
  %15 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp11flSeparatorMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  br i1 %15, label %andand4, label %andandend5

andand4:                                          ; preds = %endif3
  %16 = load i64, i64* %groupedWidth, align 8     ; [#uses = 1]
  %17 = icmp sgt i64 %16, 0                       ; [#uses = 1]
  br label %andandend5

andandend5:                                       ; preds = %andand4, %endif3
  %andandval6 = phi i1 [ false, %endif3 ], [ %17, %andand4 ] ; [#uses = 1, type = i1]
  br i1 %andandval6, label %andand7, label %andandend8

andand7:                                          ; preds = %andandend5
  %18 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %19 = load i32, i32* %18, align 4               ; [#uses = 1]
  %20 = icmp sgt i32 %19, 0                       ; [#uses = 1]
  br label %andandend8

andandend8:                                       ; preds = %andand7, %andandend5
  %andandval9 = phi i1 [ false, %andandend5 ], [ %20, %andand7 ] ; [#uses = 1, type = i1]
  br i1 %andandval9, label %andand10, label %andandend11

andand10:                                         ; preds = %andandend8
  %21 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %22 = load i32, i32* %21, align 4               ; [#uses = 1]
  %23 = icmp ne i32 %22, 2147483646               ; [#uses = 1]
  br label %andandend11

andandend11:                                      ; preds = %andand10, %andandend8
  %andandval12 = phi i1 [ false, %andandend8 ], [ %23, %andand10 ] ; [#uses = 1, type = i1]
  %24 = zext i1 %andandval12 to i8                ; [#uses = 1]
  store i8 %24, i8* %doGrouping, align 1
  %25 = load i8, i8* %doGrouping, align 1         ; [#uses = 1]
  %26 = trunc i8 %25 to i1                        ; [#uses = 1]
  br i1 %26, label %condtrue, label %condfalse

condtrue:                                         ; preds = %andandend11
  %27 = load i64, i64* %groupedWidth, align 8     ; [#uses = 1]
  %28 = sub i64 %27, 1                            ; [#uses = 1]
  %29 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %30 = load i32, i32* %29, align 4               ; [#uses = 1]
  %31 = sext i32 %30 to i64                       ; [#uses = 1]
  %32 = srem i64 %28, %31                         ; [#uses = 1]
  %33 = add i64 %32, 1                            ; [#uses = 1]
  store i64 %33, i64* %.makelvaluetmp, align 8
  store i64* %.makelvaluetmp, i64** %condtmp, align 8
  br label %condend

condfalse:                                        ; preds = %andandend11
  store i64 0, i64* %.makelvaluetmp13, align 8
  store i64* %.makelvaluetmp13, i64** %condtmp, align 8
  br label %condend

condend:                                          ; preds = %condfalse, %condtrue
  %34 = load i64*, i64** %condtmp, align 8        ; [#uses = 1]
  %35 = load i64, i64* %34, align 8               ; [#uses = 1]
  store i64 %35, i64* %front, align 8
  %36 = load i8, i8* %doGrouping, align 1         ; [#uses = 1]
  %37 = trunc i8 %36 to i1                        ; [#uses = 1]
  br i1 %37, label %condtrue15, label %condfalse16

condtrue15:                                       ; preds = %condend
  %38 = load i64, i64* %groupedWidth, align 8     ; [#uses = 1]
  %39 = sub i64 %38, 1                            ; [#uses = 1]
  %40 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %41 = load i32, i32* %40, align 4               ; [#uses = 1]
  %42 = sext i32 %41 to i64                       ; [#uses = 1]
  %43 = sdiv i64 %39, %42                         ; [#uses = 1]
  store i64 %43, i64* %.makelvaluetmp18, align 8
  store i64* %.makelvaluetmp18, i64** %condtmp14, align 8
  br label %condend17

condfalse16:                                      ; preds = %condend
  store i64 0, i64* %.makelvaluetmp19, align 8
  store i64* %.makelvaluetmp19, i64** %condtmp14, align 8
  br label %condend17

condend17:                                        ; preds = %condfalse16, %condtrue15
  %44 = load i64*, i64** %condtmp14, align 8      ; [#uses = 1]
  %45 = load i64, i64* %44, align 8               ; [#uses = 1]
  store i64 %45, i64* %sepCount, align 8
  store i64 0, i64* %trailingZeros, align 8
  %46 = load i32, i32* %p, align 4                ; [#uses = 1]
  %47 = icmp eq i32 %46, 2                        ; [#uses = 1]
  br i1 %47, label %if20, label %endif21

if20:                                             ; preds = %condend17
  %48 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %49 = load i32, i32* %48, align 4               ; [#uses = 1]
  %50 = sext i32 %49 to i64                       ; [#uses = 1]
  %51 = load i64, i64* %fractsWidth, align 8      ; [#uses = 1]
  %52 = sub i64 %51, 1                            ; [#uses = 1]
  %53 = sub i64 %50, %52                          ; [#uses = 1]
  store i64 %53, i64* %trailingZeros, align 8
  br label %endif21

endif21:                                          ; preds = %if20, %condend17
  %54 = load i32, i32* %p, align 4                ; [#uses = 1]
  %55 = icmp eq i32 %54, 3                        ; [#uses = 1]
  br i1 %55, label %andand22, label %andandend23

andand22:                                         ; preds = %endif21
  %56 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flHashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  br label %andandend23

andandend23:                                      ; preds = %andand22, %endif21
  %andandval24 = phi i1 [ false, %endif21 ], [ %56, %andand22 ] ; [#uses = 1, type = i1]
  br i1 %andandval24, label %if25, label %endif26

if25:                                             ; preds = %andandend23
  %57 = load { i64, i8* }, { i64, i8* }* %grouped, align 8 ; [#uses = 1]
  %58 = call zeroext i1 @_D4core8internal5array8equality__T8__equalsTaTaZQoFNaNbNiNeMxAaMxQeZb({ i64, i8* } %57, { i64, i8* } { i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.119, i32 0, i32 0) }) #0 ; [#uses = 1]
  %59 = icmp eq i1 %58, false                     ; [#uses = 1]
  br i1 %59, label %if27, label %else

if27:                                             ; preds = %if25
  %60 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %61 = load i32, i32* %60, align 4               ; [#uses = 1]
  %62 = sext i32 %61 to i64                       ; [#uses = 1]
  %63 = load i64, i64* %fractsWidth, align 8      ; [#uses = 1]
  %64 = sub i64 %63, 1                            ; [#uses = 1]
  %65 = sub i64 %62, %64                          ; [#uses = 1]
  %66 = load i64, i64* %groupedWidth, align 8     ; [#uses = 1]
  %67 = sub i64 %65, %66                          ; [#uses = 1]
  store i64 %67, i64* %trailingZeros, align 8
  br label %endif28

else:                                             ; preds = %if25
  %68 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %69 = load i32, i32* %68, align 4               ; [#uses = 1]
  %70 = sext i32 %69 to i64                       ; [#uses = 1]
  %71 = load i64, i64* %fractsWidth, align 8      ; [#uses = 1]
  %72 = sub i64 %70, %71                          ; [#uses = 1]
  store i64 %72, i64* %trailingZeros, align 8
  store i64 0, i64* %__key2201, align 8
  %73 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fracts, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len29 = load i64, i64* %73, align 8           ; [#uses = 1]
  store i64 %.len29, i64* %__limit2202, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %else
  %74 = load i64, i64* %__key2201, align 8        ; [#uses = 1]
  %75 = load i64, i64* %__limit2202, align 8      ; [#uses = 1]
  %76 = icmp ult i64 %74, %75                     ; [#uses = 1]
  br i1 %76, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %77 = load i64, i64* %__key2201, align 8        ; [#uses = 1]
  store i64 %77, i64* %i, align 8
  %78 = load i64, i64* %i, align 8                ; [#uses = 2]
  %79 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fracts, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len30 = load i64, i64* %79, align 8           ; [#uses = 2]
  %bounds.cmp = icmp ult i64 %78, %.len30         ; [#uses = 1]
  br i1 %bounds.cmp, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %forbody
  %80 = load i64, i64* %i, align 8                ; [#uses = 1]
  %81 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fracts, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %81, align 8             ; [#uses = 1]
  %82 = getelementptr inbounds i8, i8* %.ptr, i64 %80 ; [#uses = 1, type = i8*]
  %83 = load i8, i8* %82, align 1                 ; [#uses = 1]
  %84 = zext i8 %83 to i32                        ; [#uses = 1]
  %85 = icmp ne i32 %84, 48                       ; [#uses = 1]
  br i1 %85, label %andand31, label %andandend32

andand31:                                         ; preds = %bounds.ok
  %86 = load i64, i64* %i, align 8                ; [#uses = 2]
  %87 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fracts, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len33 = load i64, i64* %87, align 8           ; [#uses = 2]
  %bounds.cmp34 = icmp ult i64 %86, %.len33       ; [#uses = 1]
  br i1 %bounds.cmp34, label %bounds.ok35, label %bounds.fail36

bounds.ok35:                                      ; preds = %andand31
  %88 = load i64, i64* %i, align 8                ; [#uses = 1]
  %89 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fracts, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr37 = load i8*, i8** %89, align 8           ; [#uses = 1]
  %90 = getelementptr inbounds i8, i8* %.ptr37, i64 %88 ; [#uses = 1, type = i8*]
  %91 = load i8, i8* %90, align 1                 ; [#uses = 1]
  %92 = zext i8 %91 to i32                        ; [#uses = 1]
  %93 = icmp ne i32 %92, 46                       ; [#uses = 1]
  br label %andandend32

bounds.fail36:                                    ; preds = %andand31
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 3362, i64 %86, i64 %.len33) #5
  unreachable

andandend32:                                      ; preds = %bounds.ok35, %bounds.ok
  %andandval38 = phi i1 [ false, %bounds.ok ], [ %93, %bounds.ok35 ] ; [#uses = 1, type = i1]
  br i1 %andandval38, label %if39, label %endif40

if39:                                             ; preds = %andandend32
  %94 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %95 = load i32, i32* %94, align 4               ; [#uses = 1]
  %96 = sext i32 %95 to i64                       ; [#uses = 1]
  %97 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %fracts, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len41 = load i64, i64* %97, align 8           ; [#uses = 1]
  %98 = load i64, i64* %i, align 8                ; [#uses = 1]
  %99 = sub i64 %.len41, %98                      ; [#uses = 1]
  %100 = sub i64 %96, %99                         ; [#uses = 1]
  store i64 %100, i64* %trailingZeros, align 8
  br label %endfor

afterbreak:                                       ; No predecessors!
  br label %endif40

endif40:                                          ; preds = %afterbreak, %andandend32
  br label %forinc

bounds.fail:                                      ; preds = %forbody
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 3362, i64 %78, i64 %.len30) #5
  unreachable

forinc:                                           ; preds = %endif40
  %101 = load i64, i64* %__key2201, align 8       ; [#uses = 1]
  %102 = add i64 %101, 1                          ; [#uses = 1]
  store i64 %102, i64* %__key2201, align 8
  br label %forcond

endfor:                                           ; preds = %if39, %forcond
  br label %endif28

endif28:                                          ; preds = %endfor, %if27
  br label %endif26

endif26:                                          ; preds = %endif28, %andandend23
  %103 = load { i64, i8* }, { i64, i8* }* %fracts, align 8 ; [#uses = 1]
  %104 = call zeroext i1 @_D4core8internal5array8equality__T8__equalsTaTaZQoFNaNbNiNeMxAaMxQeZb({ i64, i8* } %103, { i64, i8* } { i64 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.97, i32 0, i32 0) }) #0 ; [#uses = 1]
  br i1 %104, label %andand42, label %andandend43

andand42:                                         ; preds = %endif26
  %105 = load i64, i64* %trailingZeros, align 8   ; [#uses = 1]
  %106 = icmp eq i64 %105, 0                      ; [#uses = 1]
  br label %andandend43

andandend43:                                      ; preds = %andand42, %endif26
  %andandval44 = phi i1 [ false, %endif26 ], [ %106, %andand42 ] ; [#uses = 1, type = i1]
  br i1 %andandval44, label %andand45, label %andandend46

andand45:                                         ; preds = %andandend43
  %107 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flHashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  %108 = icmp eq i1 %107, false                   ; [#uses = 1]
  br label %andandend46

andandend46:                                      ; preds = %andand45, %andandend43
  %andandval47 = phi i1 [ false, %andandend43 ], [ %108, %andand45 ] ; [#uses = 1, type = i1]
  %109 = zext i1 %andandval47 to i8               ; [#uses = 1]
  store i8 %109, i8* %nodot, align 1
  %110 = load i8, i8* %nodot, align 1             ; [#uses = 1]
  %111 = trunc i8 %110 to i1                      ; [#uses = 1]
  br i1 %111, label %if48, label %endif49

if48:                                             ; preds = %andandend46
  store i64 0, i64* %fractsWidth, align 8
  br label %endif49

endif49:                                          ; preds = %if48, %andandend46
  %112 = load i64, i64* %prefixWidth, align 8     ; [#uses = 1]
  %113 = load i64, i64* %sepCount, align 8        ; [#uses = 1]
  %114 = add i64 %112, %113                       ; [#uses = 1]
  %115 = load i64, i64* %groupedWidth, align 8    ; [#uses = 1]
  %116 = add i64 %114, %115                       ; [#uses = 1]
  %117 = load i64, i64* %fractsWidth, align 8     ; [#uses = 1]
  %118 = add i64 %116, %117                       ; [#uses = 1]
  %119 = load i64, i64* %trailingZeros, align 8   ; [#uses = 1]
  %120 = add i64 %118, %119                       ; [#uses = 1]
  %121 = load i64, i64* %suffixWidth, align 8     ; [#uses = 1]
  %122 = add i64 %120, %121                       ; [#uses = 1]
  store i64 %122, i64* %width, align 8
  %123 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 0 ; [#uses = 1, type = i32*]
  %124 = load i32, i32* %123, align 4             ; [#uses = 1]
  %125 = sext i32 %124 to i64                     ; [#uses = 1]
  %126 = load i64, i64* %width, align 8           ; [#uses = 1]
  %127 = sub i64 %125, %126                       ; [#uses = 1]
  store i64 %127, i64* %delta, align 8
  store i64 0, i64* %pregrouped, align 8
  %128 = load i32, i32* %p, align 4               ; [#uses = 1]
  %129 = icmp eq i32 %128, 1                      ; [#uses = 1]
  br i1 %129, label %andand50, label %andandend51

andand50:                                         ; preds = %endif49
  %130 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %131 = load i32, i32* %130, align 4             ; [#uses = 1]
  %132 = sext i32 %131 to i64                     ; [#uses = 1]
  %133 = load i64, i64* %groupedWidth, align 8    ; [#uses = 1]
  %134 = icmp slt i64 %133, %132                  ; [#uses = 1]
  br label %andandend51

andandend51:                                      ; preds = %andand50, %endif49
  %andandval52 = phi i1 [ false, %endif49 ], [ %134, %andand50 ] ; [#uses = 1, type = i1]
  br i1 %andandval52, label %if53, label %endif54

if53:                                             ; preds = %andandend51
  %135 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %136 = load i32, i32* %135, align 4             ; [#uses = 1]
  %137 = sext i32 %136 to i64                     ; [#uses = 1]
  %138 = load i64, i64* %groupedWidth, align 8    ; [#uses = 1]
  %139 = sub i64 %137, %138                       ; [#uses = 1]
  store i64 %139, i64* %pregrouped, align 8
  %140 = load i64, i64* %pregrouped, align 8      ; [#uses = 1]
  %141 = load i64, i64* %delta, align 8           ; [#uses = 1]
  %142 = sub i64 %141, %140                       ; [#uses = 1]
  store i64 %142, i64* %delta, align 8
  %143 = load i8, i8* %doGrouping, align 1        ; [#uses = 1]
  %144 = trunc i8 %143 to i1                      ; [#uses = 1]
  br i1 %144, label %if55, label %endif56

if55:                                             ; preds = %if53
  %145 = load i64, i64* %front, align 8           ; [#uses = 1]
  %146 = sub i64 %145, 1                          ; [#uses = 1]
  %147 = load i64, i64* %pregrouped, align 8      ; [#uses = 1]
  %148 = add i64 %146, %147                       ; [#uses = 1]
  %149 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %150 = load i32, i32* %149, align 4             ; [#uses = 1]
  %151 = sext i32 %150 to i64                     ; [#uses = 1]
  %152 = srem i64 %148, %151                      ; [#uses = 1]
  %153 = add i64 %152, 1                          ; [#uses = 1]
  store i64 %153, i64* %front, align 8
  %154 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 1 ; [#uses = 1, type = i32*]
  %155 = load i32, i32* %154, align 4             ; [#uses = 1]
  %156 = sub i32 %155, 1                          ; [#uses = 1]
  %157 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %158 = load i32, i32* %157, align 4             ; [#uses = 1]
  %159 = sdiv i32 %156, %158                      ; [#uses = 1]
  %160 = sext i32 %159 to i64                     ; [#uses = 1]
  %161 = load i64, i64* %sepCount, align 8        ; [#uses = 1]
  %162 = sub i64 %160, %161                       ; [#uses = 1]
  %163 = load i64, i64* %delta, align 8           ; [#uses = 1]
  %164 = sub i64 %163, %162                       ; [#uses = 1]
  store i64 %164, i64* %delta, align 8
  br label %endif56

endif56:                                          ; preds = %if55, %if53
  br label %endif54

endif54:                                          ; preds = %endif56, %andandend51
  %165 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flZeroMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  %166 = icmp eq i1 %165, false                   ; [#uses = 1]
  br i1 %166, label %ororend, label %oror

oror:                                             ; preds = %endif54
  %167 = load i32, i32* %p, align 4               ; [#uses = 1]
  %168 = icmp eq i32 %167, 1                      ; [#uses = 1]
  br label %ororend

ororend:                                          ; preds = %oror, %endif54
  %ororval = phi i1 [ true, %endif54 ], [ %168, %oror ] ; [#uses = 1, type = i1]
  br i1 %ororval, label %andand57, label %andandend58

andand57:                                         ; preds = %ororend
  %169 = load i64, i64* %delta, align 8           ; [#uses = 1]
  %170 = icmp sgt i64 %169, 0                     ; [#uses = 1]
  br label %andandend58

andandend58:                                      ; preds = %andand57, %ororend
  %andandval59 = phi i1 [ false, %ororend ], [ %170, %andand57 ] ; [#uses = 1, type = i1]
  br i1 %andandval59, label %if60, label %endif61

if60:                                             ; preds = %andandend58
  %171 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp7flEqualMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  br i1 %171, label %if62, label %else64

if62:                                             ; preds = %if60
  store i64 0, i64* %__key2203, align 8
  %172 = load i64, i64* %delta, align 8           ; [#uses = 1]
  %173 = sdiv i64 %172, 2                         ; [#uses = 1]
  %174 = load i64, i64* %delta, align 8           ; [#uses = 1]
  %175 = srem i64 %174, 2                         ; [#uses = 1]
  %176 = icmp eq i64 %175, 1                      ; [#uses = 1]
  br i1 %176, label %andand69, label %andandend70

andand69:                                         ; preds = %if62
  %177 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flDashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  %178 = icmp eq i1 %177, false                   ; [#uses = 1]
  br label %andandend70

andandend70:                                      ; preds = %andand69, %if62
  %andandval71 = phi i1 [ false, %if62 ], [ %178, %andand69 ] ; [#uses = 1, type = i1]
  br i1 %andandval71, label %condtrue66, label %condfalse67

condtrue66:                                       ; preds = %andandend70
  store i64 1, i64* %.makelvaluetmp72, align 8
  store i64* %.makelvaluetmp72, i64** %condtmp65, align 8
  br label %condend68

condfalse67:                                      ; preds = %andandend70
  store i64 0, i64* %.makelvaluetmp73, align 8
  store i64* %.makelvaluetmp73, i64** %condtmp65, align 8
  br label %condend68

condend68:                                        ; preds = %condfalse67, %condtrue66
  %179 = load i64*, i64** %condtmp65, align 8     ; [#uses = 1]
  %180 = load i64, i64* %179, align 8             ; [#uses = 1]
  %181 = add i64 %173, %180                       ; [#uses = 1]
  store i64 %181, i64* %__limit2204, align 8
  br label %forcond74

forcond74:                                        ; preds = %forinc76, %condend68
  %182 = load i64, i64* %__key2203, align 8       ; [#uses = 1]
  %183 = load i64, i64* %__limit2204, align 8     ; [#uses = 1]
  %184 = icmp slt i64 %182, %183                  ; [#uses = 1]
  br i1 %184, label %forbody75, label %endfor77

forbody75:                                        ; preds = %forcond74
  %185 = load i64, i64* %__key2203, align 8       ; [#uses = 1]
  store i64 %185, i64* %i78, align 8
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 32) #0
  br label %forinc76

forinc76:                                         ; preds = %forbody75
  %186 = load i64, i64* %__key2203, align 8       ; [#uses = 1]
  %187 = add i64 %186, 1                          ; [#uses = 1]
  store i64 %187, i64* %__key2203, align 8
  br label %forcond74

endfor77:                                         ; preds = %forcond74
  br label %endif63

else64:                                           ; preds = %if60
  %188 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flDashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  %189 = icmp eq i1 %188, false                   ; [#uses = 1]
  br i1 %189, label %if79, label %endif80

if79:                                             ; preds = %else64
  store i64 0, i64* %__key2205, align 8
  %190 = load i64, i64* %delta, align 8           ; [#uses = 1]
  store i64 %190, i64* %__limit2206, align 8
  br label %forcond81

forcond81:                                        ; preds = %forinc83, %if79
  %191 = load i64, i64* %__key2205, align 8       ; [#uses = 1]
  %192 = load i64, i64* %__limit2206, align 8     ; [#uses = 1]
  %193 = icmp slt i64 %191, %192                  ; [#uses = 1]
  br i1 %193, label %forbody82, label %endfor84

forbody82:                                        ; preds = %forcond81
  %194 = load i64, i64* %__key2205, align 8       ; [#uses = 1]
  store i64 %194, i64* %i85, align 8
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 32) #0
  br label %forinc83

forinc83:                                         ; preds = %forbody82
  %195 = load i64, i64* %__key2205, align 8       ; [#uses = 1]
  %196 = add i64 %195, 1                          ; [#uses = 1]
  store i64 %196, i64* %__key2205, align 8
  br label %forcond81

endfor84:                                         ; preds = %forcond81
  br label %endif80

endif80:                                          ; preds = %endfor84, %else64
  br label %endif63

endif63:                                          ; preds = %endif80, %endfor77
  br label %endif61

endif61:                                          ; preds = %endif63, %andandend58
  %197 = load { i64, i8* }, { i64, i8* }* %prefix, align 8 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %197) #0
  %198 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flZeroMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  br i1 %198, label %andand86, label %andandend87

andand86:                                         ; preds = %endif61
  %199 = load i32, i32* %p, align 4               ; [#uses = 1]
  %200 = icmp ne i32 %199, 1                      ; [#uses = 1]
  br label %andandend87

andandend87:                                      ; preds = %andand86, %endif61
  %andandval88 = phi i1 [ false, %endif61 ], [ %200, %andand86 ] ; [#uses = 1, type = i1]
  br i1 %andandval88, label %andand89, label %andandend90

andand89:                                         ; preds = %andandend87
  %201 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flDashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  %202 = icmp eq i1 %201, false                   ; [#uses = 1]
  br label %andandend90

andandend90:                                      ; preds = %andand89, %andandend87
  %andandval91 = phi i1 [ false, %andandend87 ], [ %202, %andand89 ] ; [#uses = 1, type = i1]
  br i1 %andandval91, label %andand92, label %andandend93

andand92:                                         ; preds = %andandend90
  %203 = load i64, i64* %delta, align 8           ; [#uses = 1]
  %204 = icmp sgt i64 %203, 0                     ; [#uses = 1]
  br label %andandend93

andandend93:                                      ; preds = %andand92, %andandend90
  %andandval94 = phi i1 [ false, %andandend90 ], [ %204, %andand92 ] ; [#uses = 1, type = i1]
  br i1 %andandval94, label %if95, label %endif96

if95:                                             ; preds = %andandend93
  %205 = load i8, i8* %doGrouping, align 1        ; [#uses = 1]
  %206 = trunc i8 %205 to i1                      ; [#uses = 1]
  br i1 %206, label %if97, label %else99

if97:                                             ; preds = %if95
  %207 = load i64, i64* %delta, align 8           ; [#uses = 1]
  %208 = load i64, i64* %front, align 8           ; [#uses = 1]
  %209 = add i64 %207, %208                       ; [#uses = 1]
  %210 = sub i64 %209, 1                          ; [#uses = 1]
  %211 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %212 = load i32, i32* %211, align 4             ; [#uses = 1]
  %213 = add i32 %212, 1                          ; [#uses = 1]
  %214 = sext i32 %213 to i64                     ; [#uses = 1]
  %215 = srem i64 %210, %214                      ; [#uses = 1]
  %216 = add i64 %215, 1                          ; [#uses = 1]
  store i64 %216, i64* %front2, align 8
  %217 = load i64, i64* %delta, align 8           ; [#uses = 1]
  %218 = load i64, i64* %front, align 8           ; [#uses = 1]
  %219 = add i64 %217, %218                       ; [#uses = 1]
  %220 = sub i64 %219, 1                          ; [#uses = 1]
  %221 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %222 = load i32, i32* %221, align 4             ; [#uses = 1]
  %223 = add i32 %222, 1                          ; [#uses = 1]
  %224 = sext i32 %223 to i64                     ; [#uses = 1]
  %225 = sdiv i64 %220, %224                      ; [#uses = 1]
  store i64 %225, i64* %sepCount2, align 8
  %226 = load i64, i64* %sepCount2, align 8       ; [#uses = 1]
  %227 = load i64, i64* %delta, align 8           ; [#uses = 1]
  %228 = sub i64 %227, %226                       ; [#uses = 1]
  store i64 %228, i64* %delta, align 8
  %229 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %230 = load i32, i32* %229, align 4             ; [#uses = 1]
  %231 = sext i32 %230 to i64                     ; [#uses = 1]
  %232 = load i64, i64* %front2, align 8          ; [#uses = 1]
  %233 = icmp sgt i64 %232, %231                  ; [#uses = 1]
  br i1 %233, label %if100, label %endif101

if100:                                            ; preds = %if97
  store i64 1, i64* %front2, align 8
  br label %endif101

endif101:                                         ; preds = %if100, %if97
  store i64 0, i64* %__key2207, align 8
  %234 = load i64, i64* %delta, align 8           ; [#uses = 1]
  store i64 %234, i64* %__limit2208, align 8
  br label %forcond102

forcond102:                                       ; preds = %forinc104, %endif101
  %235 = load i64, i64* %__key2207, align 8       ; [#uses = 1]
  %236 = load i64, i64* %__limit2208, align 8     ; [#uses = 1]
  %237 = icmp slt i64 %235, %236                  ; [#uses = 1]
  br i1 %237, label %forbody103, label %endfor105

forbody103:                                       ; preds = %forcond102
  %238 = load i64, i64* %__key2207, align 8       ; [#uses = 1]
  store i64 %238, i64* %i106, align 8
  %239 = load i64, i64* %front2, align 8          ; [#uses = 1]
  %240 = icmp eq i64 %239, 0                      ; [#uses = 1]
  br i1 %240, label %if107, label %endif108

if107:                                            ; preds = %forbody103
  %241 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 5 ; [#uses = 1, type = i32*]
  %242 = load i32, i32* %241, align 4             ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxwZQBmFNaNfKQBqxwZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32 %242) #1
  %243 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %244 = load i32, i32* %243, align 4             ; [#uses = 1]
  %245 = sext i32 %244 to i64                     ; [#uses = 1]
  store i64 %245, i64* %front2, align 8
  br label %endif108

endif108:                                         ; preds = %if107, %forbody103
  %246 = load i64, i64* %front2, align 8          ; [#uses = 1]
  %247 = sub i64 %246, 1                          ; [#uses = 1]
  store i64 %247, i64* %front2, align 8
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 48) #0
  br label %forinc104

forinc104:                                        ; preds = %endif108
  %248 = load i64, i64* %__key2207, align 8       ; [#uses = 1]
  %249 = add i64 %248, 1                          ; [#uses = 1]
  store i64 %249, i64* %__key2207, align 8
  br label %forcond102

endfor105:                                        ; preds = %forcond102
  %250 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %251 = load i32, i32* %250, align 4             ; [#uses = 1]
  %252 = sext i32 %251 to i64                     ; [#uses = 1]
  %253 = load i64, i64* %front, align 8           ; [#uses = 1]
  %254 = icmp eq i64 %253, %252                   ; [#uses = 1]
  br i1 %254, label %if109, label %endif110

if109:                                            ; preds = %endfor105
  %255 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 5 ; [#uses = 1, type = i32*]
  %256 = load i32, i32* %255, align 4             ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxwZQBmFNaNfKQBqxwZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32 %256) #1
  br label %endif110

endif110:                                         ; preds = %if109, %endfor105
  br label %endif98

else99:                                           ; preds = %if95
  store i64 0, i64* %__key2209, align 8
  %257 = load i64, i64* %delta, align 8           ; [#uses = 1]
  store i64 %257, i64* %__limit2210, align 8
  br label %forcond111

forcond111:                                       ; preds = %forinc113, %else99
  %258 = load i64, i64* %__key2209, align 8       ; [#uses = 1]
  %259 = load i64, i64* %__limit2210, align 8     ; [#uses = 1]
  %260 = icmp slt i64 %258, %259                  ; [#uses = 1]
  br i1 %260, label %forbody112, label %endfor114

forbody112:                                       ; preds = %forcond111
  %261 = load i64, i64* %__key2209, align 8       ; [#uses = 1]
  store i64 %261, i64* %i115, align 8
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 48) #0
  br label %forinc113

forinc113:                                        ; preds = %forbody112
  %262 = load i64, i64* %__key2209, align 8       ; [#uses = 1]
  %263 = add i64 %262, 1                          ; [#uses = 1]
  store i64 %263, i64* %__key2209, align 8
  br label %forcond111

endfor114:                                        ; preds = %forcond111
  br label %endif98

endif98:                                          ; preds = %endfor114, %endif110
  br label %endif96

endif96:                                          ; preds = %endif98, %andandend93
  %264 = load i8, i8* %doGrouping, align 1        ; [#uses = 1]
  %265 = trunc i8 %264 to i1                      ; [#uses = 1]
  br i1 %265, label %if116, label %else118

if116:                                            ; preds = %endif96
  store i64 0, i64* %__key2211, align 8
  %266 = load i64, i64* %pregrouped, align 8      ; [#uses = 1]
  %267 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %grouped, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len119 = load i64, i64* %267, align 8         ; [#uses = 1]
  %268 = add i64 %266, %.len119                   ; [#uses = 1]
  store i64 %268, i64* %__limit2212, align 8
  br label %forcond120

forcond120:                                       ; preds = %forinc122, %if116
  %269 = load i64, i64* %__key2211, align 8       ; [#uses = 1]
  %270 = load i64, i64* %__limit2212, align 8     ; [#uses = 1]
  %271 = icmp ult i64 %269, %270                  ; [#uses = 1]
  br i1 %271, label %forbody121, label %endfor123

forbody121:                                       ; preds = %forcond120
  %272 = load i64, i64* %__key2211, align 8       ; [#uses = 1]
  store i64 %272, i64* %i124, align 8
  %273 = load i64, i64* %front, align 8           ; [#uses = 1]
  %274 = icmp eq i64 %273, 0                      ; [#uses = 1]
  br i1 %274, label %if125, label %endif126

if125:                                            ; preds = %forbody121
  %275 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 5 ; [#uses = 1, type = i32*]
  %276 = load i32, i32* %275, align 4             ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxwZQBmFNaNfKQBqxwZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i32 %276) #1
  %277 = getelementptr inbounds %"std.format.spec.FormatSpec!char.FormatSpec", %"std.format.spec.FormatSpec!char.FormatSpec"* %f, i32 0, i32 2 ; [#uses = 1, type = i32*]
  %278 = load i32, i32* %277, align 4             ; [#uses = 1]
  %279 = sext i32 %278 to i64                     ; [#uses = 1]
  store i64 %279, i64* %front, align 8
  br label %endif126

endif126:                                         ; preds = %if125, %forbody121
  %280 = load i64, i64* %front, align 8           ; [#uses = 1]
  %281 = sub i64 %280, 1                          ; [#uses = 1]
  store i64 %281, i64* %front, align 8
  %282 = load i64, i64* %pregrouped, align 8      ; [#uses = 1]
  %283 = load i64, i64* %i124, align 8            ; [#uses = 1]
  %284 = icmp ult i64 %283, %282                  ; [#uses = 1]
  br i1 %284, label %condtrue128, label %condfalse129

condtrue128:                                      ; preds = %endif126
  store i8 48, i8* %.makelvaluetmp131, align 1
  store i8* %.makelvaluetmp131, i8** %condtmp127, align 8
  br label %condend130

condfalse129:                                     ; preds = %endif126
  %285 = load i64, i64* %i124, align 8            ; [#uses = 1]
  %286 = load i64, i64* %pregrouped, align 8      ; [#uses = 1]
  %287 = sub i64 %285, %286                       ; [#uses = 3]
  %288 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %grouped, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len132 = load i64, i64* %288, align 8         ; [#uses = 2]
  %bounds.cmp133 = icmp ult i64 %287, %.len132    ; [#uses = 1]
  br i1 %bounds.cmp133, label %bounds.ok134, label %bounds.fail135

bounds.ok134:                                     ; preds = %condfalse129
  %289 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %grouped, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr136 = load i8*, i8** %289, align 8         ; [#uses = 1]
  %290 = getelementptr inbounds i8, i8* %.ptr136, i64 %287 ; [#uses = 1, type = i8*]
  store i8* %290, i8** %condtmp127, align 8
  br label %condend130

bounds.fail135:                                   ; preds = %condfalse129
  call void @_d_arraybounds_index({ i64, i8* } { i64 67, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.76, i32 0, i32 0) }, i32 3458, i64 %287, i64 %.len132) #5
  unreachable

condend130:                                       ; preds = %bounds.ok134, %condtrue128
  %291 = load i8*, i8** %condtmp127, align 8      ; [#uses = 1]
  %292 = load i8, i8* %291, align 1               ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxaZQBmFNaNbNfKQBsxaZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext %292) #0
  br label %forinc122

forinc122:                                        ; preds = %condend130
  %293 = load i64, i64* %__key2211, align 8       ; [#uses = 1]
  %294 = add i64 %293, 1                          ; [#uses = 1]
  store i64 %294, i64* %__key2211, align 8
  br label %forcond120

endfor123:                                        ; preds = %forcond120
  br label %endif117

else118:                                          ; preds = %endif96
  store i64 0, i64* %__key2213, align 8
  %295 = load i64, i64* %pregrouped, align 8      ; [#uses = 1]
  store i64 %295, i64* %__limit2214, align 8
  br label %forcond137

forcond137:                                       ; preds = %forinc139, %else118
  %296 = load i64, i64* %__key2213, align 8       ; [#uses = 1]
  %297 = load i64, i64* %__limit2214, align 8     ; [#uses = 1]
  %298 = icmp slt i64 %296, %297                  ; [#uses = 1]
  br i1 %298, label %forbody138, label %endfor140

forbody138:                                       ; preds = %forcond137
  %299 = load i64, i64* %__key2213, align 8       ; [#uses = 1]
  store i64 %299, i64* %i141, align 8
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 48) #0
  br label %forinc139

forinc139:                                        ; preds = %forbody138
  %300 = load i64, i64* %__key2213, align 8       ; [#uses = 1]
  %301 = add i64 %300, 1                          ; [#uses = 1]
  store i64 %301, i64* %__key2213, align 8
  br label %forcond137

endfor140:                                        ; preds = %forcond137
  %302 = load { i64, i8* }, { i64, i8* }* %grouped, align 8 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %302) #0
  br label %endif117

endif117:                                         ; preds = %endfor140, %endfor123
  %303 = load i8, i8* %nodot, align 1             ; [#uses = 1]
  %304 = trunc i8 %303 to i1                      ; [#uses = 1]
  %305 = icmp eq i1 %304, false                   ; [#uses = 1]
  br i1 %305, label %if142, label %endif143

if142:                                            ; preds = %endif117
  %306 = load { i64, i8* }, { i64, i8* }* %fracts, align 8 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTQhZQBmFNaNbNfKQBsQyZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %306) #0
  br label %endif143

endif143:                                         ; preds = %if142, %endif117
  store i64 0, i64* %__key2215, align 8
  %307 = load i64, i64* %trailingZeros, align 8   ; [#uses = 1]
  store i64 %307, i64* %__limit2216, align 8
  br label %forcond144

forcond144:                                       ; preds = %forinc146, %endif143
  %308 = load i64, i64* %__key2215, align 8       ; [#uses = 1]
  %309 = load i64, i64* %__limit2216, align 8     ; [#uses = 1]
  %310 = icmp slt i64 %308, %309                  ; [#uses = 1]
  br i1 %310, label %forbody145, label %endfor147

forbody145:                                       ; preds = %forcond144
  %311 = load i64, i64* %__key2215, align 8       ; [#uses = 1]
  store i64 %311, i64* %i148, align 8
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 48) #0
  br label %forinc146

forinc146:                                        ; preds = %forbody145
  %312 = load i64, i64* %__key2215, align 8       ; [#uses = 1]
  %313 = add i64 %312, 1                          ; [#uses = 1]
  store i64 %313, i64* %__key2215, align 8
  br label %forcond144

endfor147:                                        ; preds = %forcond144
  %314 = load { i64, i8* }, { i64, i8* }* %suffix, align 8 ; [#uses = 1]
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTAxaZQBnFNaNbNfKQBtQsZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, { i64, i8* } %314) #0
  %315 = load i64, i64* %delta, align 8           ; [#uses = 1]
  %316 = icmp sgt i64 %315, 0                     ; [#uses = 1]
  br i1 %316, label %if149, label %endif150

if149:                                            ; preds = %endfor147
  %317 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp7flEqualMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  br i1 %317, label %if151, label %else153

if151:                                            ; preds = %if149
  store i64 0, i64* %__key2217, align 8
  %318 = load i64, i64* %delta, align 8           ; [#uses = 1]
  %319 = sdiv i64 %318, 2                         ; [#uses = 1]
  %320 = load i64, i64* %delta, align 8           ; [#uses = 1]
  %321 = srem i64 %320, 2                         ; [#uses = 1]
  %322 = icmp eq i64 %321, 1                      ; [#uses = 1]
  br i1 %322, label %andand158, label %andandend159

andand158:                                        ; preds = %if151
  %323 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flDashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  br label %andandend159

andandend159:                                     ; preds = %andand158, %if151
  %andandval160 = phi i1 [ false, %if151 ], [ %323, %andand158 ] ; [#uses = 1, type = i1]
  br i1 %andandval160, label %condtrue155, label %condfalse156

condtrue155:                                      ; preds = %andandend159
  store i64 1, i64* %.makelvaluetmp161, align 8
  store i64* %.makelvaluetmp161, i64** %condtmp154, align 8
  br label %condend157

condfalse156:                                     ; preds = %andandend159
  store i64 0, i64* %.makelvaluetmp162, align 8
  store i64* %.makelvaluetmp162, i64** %condtmp154, align 8
  br label %condend157

condend157:                                       ; preds = %condfalse156, %condtrue155
  %324 = load i64*, i64** %condtmp154, align 8    ; [#uses = 1]
  %325 = load i64, i64* %324, align 8             ; [#uses = 1]
  %326 = add i64 %319, %325                       ; [#uses = 1]
  store i64 %326, i64* %__limit2218, align 8
  br label %forcond163

forcond163:                                       ; preds = %forinc165, %condend157
  %327 = load i64, i64* %__key2217, align 8       ; [#uses = 1]
  %328 = load i64, i64* %__limit2218, align 8     ; [#uses = 1]
  %329 = icmp slt i64 %327, %328                  ; [#uses = 1]
  br i1 %329, label %forbody164, label %endfor166

forbody164:                                       ; preds = %forcond163
  %330 = load i64, i64* %__key2217, align 8       ; [#uses = 1]
  store i64 %330, i64* %i167, align 8
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 32) #0
  br label %forinc165

forinc165:                                        ; preds = %forbody164
  %331 = load i64, i64* %__key2217, align 8       ; [#uses = 1]
  %332 = add i64 %331, 1                          ; [#uses = 1]
  store i64 %332, i64* %__key2217, align 8
  br label %forcond163

endfor166:                                        ; preds = %forcond163
  br label %endif152

else153:                                          ; preds = %if149
  %333 = call zeroext i1 @_D3std6format4spec__T10FormatSpecTaZQp6flDashMxFNaNbNdNiNfZb(%"std.format.spec.FormatSpec!char.FormatSpec"* nonnull %f) #0 ; [#uses = 1]
  br i1 %333, label %if168, label %endif169

if168:                                            ; preds = %else153
  store i64 0, i64* %__key2219, align 8
  %334 = load i64, i64* %delta, align 8           ; [#uses = 1]
  store i64 %334, i64* %__limit2220, align 8
  br label %forcond170

forcond170:                                       ; preds = %forinc172, %if168
  %335 = load i64, i64* %__key2219, align 8       ; [#uses = 1]
  %336 = load i64, i64* %__limit2220, align 8     ; [#uses = 1]
  %337 = icmp slt i64 %335, %336                  ; [#uses = 1]
  br i1 %337, label %forbody171, label %endfor173

forbody171:                                       ; preds = %forcond170
  %338 = load i64, i64* %__key2219, align 8       ; [#uses = 1]
  store i64 %338, i64* %i174, align 8
  call void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTaZQBlFNaNbNfKQBraZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %w, i8 zeroext 32) #0
  br label %forinc172

forinc172:                                        ; preds = %forbody171
  %339 = load i64, i64* %__key2219, align 8       ; [#uses = 1]
  %340 = add i64 %339, 1                          ; [#uses = 1]
  store i64 %340, i64* %__key2219, align 8
  br label %forcond170

endfor173:                                        ; preds = %forcond170
  br label %endif169

endif169:                                         ; preds = %endfor173, %else153
  br label %endif152

endif152:                                         ; preds = %endif169, %endfor166
  br label %endif150

endif150:                                         ; preds = %endif152, %endfor147
  ret void
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i64 @_D3std6format8internal5write__T8getWidthTAyaZQoFNaNfQlZl({ i64, i8* } %s_arg) #0 {
  %s = alloca { i64, i8* }, align 8               ; [#uses = 5, size/byte = 16]
  %width = alloca i64, align 8                    ; [#uses = 5, size/byte = 8]
  %i = alloca i64, align 8                        ; [#uses = 5, size/byte = 8]
  store { i64, i8* } %s_arg, { i64, i8* }* %s, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %s, align 8 ; [#uses = 1]
  %2 = call zeroext i1 @_D3std9algorithm9searching__T3allSQBg6format8internal5write__T8getWidthTAyaZQoFQhZ9__lambda2Z__TQCpTQBcZQCxMFNaNfQBpZb(i8* nonnull null, { i64, i8* } %1) #1 ; [#uses = 1]
  br i1 %2, label %if, label %endif

if:                                               ; preds = %0
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %3, align 8              ; [#uses = 1]
  ret i64 %.len

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %0
  store i64 0, i64* %width, align 8
  store i64 0, i64* %i, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %endif
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %4, align 8             ; [#uses = 1]
  %5 = load i64, i64* %i, align 8                 ; [#uses = 1]
  %6 = icmp ult i64 %5, %.len1                    ; [#uses = 1]
  br i1 %6, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %7 = load i64, i64* %width, align 8             ; [#uses = 1]
  %8 = add i64 %7, 1                              ; [#uses = 1]
  store i64 %8, i64* %width, align 8
  br label %forinc

forinc:                                           ; preds = %forbody
  %9 = load { i64, i8* }, { i64, i8* }* %s, align 8 ; [#uses = 1]
  %10 = load i64, i64* %i, align 8                ; [#uses = 1]
  %11 = call i64 @_D3std3uni__T14graphemeStrideTaZQtFNaNfMxAamZm({ i64, i8* } %9, i64 %10) #1 ; [#uses = 1]
  %12 = load i64, i64* %i, align 8                ; [#uses = 1]
  %13 = add i64 %12, %11                          ; [#uses = 1]
  store i64 %13, i64* %i, align 8
  br label %forcond

endfor:                                           ; preds = %forcond
  %14 = load i64, i64* %width, align 8            ; [#uses = 0]
  %15 = load i64, i64* %width, align 8            ; [#uses = 1]
  ret i64 %15
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr i64 @_D3std6format8internal5write__T8getWidthTAxaZQoFNaNfQlZl({ i64, i8* } %s_arg) #0 {
  %s = alloca { i64, i8* }, align 8               ; [#uses = 5, size/byte = 16]
  %width = alloca i64, align 8                    ; [#uses = 5, size/byte = 8]
  %i = alloca i64, align 8                        ; [#uses = 5, size/byte = 8]
  store { i64, i8* } %s_arg, { i64, i8* }* %s, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %s, align 8 ; [#uses = 1]
  %2 = call zeroext i1 @_D3std9algorithm9searching__T3allSQBg6format8internal5write__T8getWidthTAxaZQoFQhZ9__lambda2Z__TQCpTQBcZQCxMFNaNfQBpZb(i8* nonnull null, { i64, i8* } %1) #1 ; [#uses = 1]
  br i1 %2, label %if, label %endif

if:                                               ; preds = %0
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %3, align 8              ; [#uses = 1]
  ret i64 %.len

dummy.afterreturn:                                ; No predecessors!
  br label %endif

endif:                                            ; preds = %dummy.afterreturn, %0
  store i64 0, i64* %width, align 8
  store i64 0, i64* %i, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %endif
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %s, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %4, align 8             ; [#uses = 1]
  %5 = load i64, i64* %i, align 8                 ; [#uses = 1]
  %6 = icmp ult i64 %5, %.len1                    ; [#uses = 1]
  br i1 %6, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %7 = load i64, i64* %width, align 8             ; [#uses = 1]
  %8 = add i64 %7, 1                              ; [#uses = 1]
  store i64 %8, i64* %width, align 8
  br label %forinc

forinc:                                           ; preds = %forbody
  %9 = load { i64, i8* }, { i64, i8* }* %s, align 8 ; [#uses = 1]
  %10 = load i64, i64* %i, align 8                ; [#uses = 1]
  %11 = call i64 @_D3std3uni__T14graphemeStrideTaZQtFNaNfMxAamZm({ i64, i8* } %9, i64 %10) #1 ; [#uses = 1]
  %12 = load i64, i64* %i, align 8                ; [#uses = 1]
  %13 = add i64 %12, %11                          ; [#uses = 1]
  store i64 %13, i64* %i, align 8
  br label %forcond

endfor:                                           ; preds = %forcond
  %14 = load i64, i64* %width, align 8            ; [#uses = 0]
  %15 = load i64, i64* %width, align 8            ; [#uses = 1]
  ret i64 %15
}

; [#uses = 3]
; Function Attrs: uwtable
define weak_odr void @_D3std5range10primitives__T3putTSQBf5array__T8AppenderTAyaZQoTxwZQBmFNaNfKQBqxwZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, i32 %e_arg) #0 {
  %e = alloca i32, align 4                        ; [#uses = 2, size/byte = 4]
  store i32 %e_arg, i32* %e, align 4
  call void @_D3std5range10primitives__T5doPutTSQBh5array__T8AppenderTAyaZQoTxwZQBoFNaNfKQBqKxwZv(%"std.array.Appender!string.Appender"* dereferenceable(8) %r, i32* dereferenceable(4) %e) #0
  ret void
}

; [#uses = 1]
declare zeroext i1 @_D3std9algorithm9searching__T3allSQBg6format8internal5write__T8getWidthTAyaZQoFQhZ9__lambda2Z__TQCpTQBcZQCxMFNaNfQBpZb(i8* nonnull, { i64, i8* }) #1

; [#uses = 2]
; Function Attrs: uwtable
define weak_odr i64 @_D3std3uni__T14graphemeStrideTaZQtFNaNfMxAamZm({ i64, i8* } %input_arg, i64 %index_arg) #0 {
  %input = alloca { i64, i8* }, align 8           ; [#uses = 4, size/byte = 16]
  %index = alloca i64, align 8                    ; [#uses = 2, size/byte = 8]
  %src = alloca { i64, i8* }, align 8             ; [#uses = 5, size/byte = 16]
  %n = alloca i64, align 8                        ; [#uses = 2, size/byte = 8]
  store { i64, i8* } %input_arg, { i64, i8* }* %input, align 8
  store i64 %index_arg, i64* %index, align 8
  %1 = load i64, i64* %index, align 8             ; [#uses = 4]
  %2 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %input, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %2, align 8              ; [#uses = 3]
  %3 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %input, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %3, align 8             ; [#uses = 1]
  %bounds.cmp.lo = icmp ule i64 %1, %.len         ; [#uses = 1]
  br i1 %bounds.cmp.lo, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %0
  %4 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %input, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %4, align 8              ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr, i64 %1 ; [#uses = 2, type = i8*]
  %5 = sub i64 %.len, %1                          ; [#uses = 2]
  %6 = insertvalue { i64, i8* } undef, i64 %5, 0  ; [#uses = 1]
  %7 = insertvalue { i64, i8* } %6, i8* %lowerbound, 1 ; [#uses = 0]
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %src, i32 0, i32 0 ; [#uses = 1, type = i64*]
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %src, i32 0, i32 1 ; [#uses = 1, type = i8**]
  store i8* %lowerbound, i8** %9, align 8
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %src, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len2 = load i64, i64* %10, align 8            ; [#uses = 1]
  store i64 %.len2, i64* %n, align 8
  call void @_D3std3uni__T21genericDecodeGraphemeVbi0Z__TQBfTAxaZQBnFNaNfKQnZv({ i64, i8* }* dereferenceable(16) %src) #1
  %11 = load i64, i64* %n, align 8                ; [#uses = 1]
  %12 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %src, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len3 = load i64, i64* %12, align 8            ; [#uses = 1]
  %13 = sub i64 %11, %.len3                       ; [#uses = 1]
  ret i64 %13

bounds.fail:                                      ; preds = %0
  call void @_d_arraybounds_slice({ i64, i8* } { i64 57, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.121, i32 0, i32 0) }, i32 7218, i64 %1, i64 %.len, i64 %.len1) #5
  unreachable
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std9algorithm9searching__T3allSQBg6format8internal5write__T8getWidthTAxaZQoFQhZ9__lambda2Z__TQCpTQBcZQCxMFNaNfQBpZb(i8* nonnull %.nest_arg, { i64, i8* } %range_arg) #0 {
  %range = alloca { i64, i8* }, align 8           ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %range_arg, { i64, i8* }* %range, align 8
  %1 = load { i64, i8* }, { i64, i8* }* %range, align 8 ; [#uses = 1]
  %2 = call { i64, i8* } @_D3std9algorithm9searching__T4findSQBh10functional__T3notSQCe6format8internal5write__T8getWidthTAxaZQoFQhZ9__lambda2ZQCmTQzZQDrMFNaNfQBlZQBp(i8* nonnull null, { i64, i8* } %1) #1 ; [#uses = 1]
  %3 = call zeroext i1 @_D3std5range10primitives__T5emptyTAxaZQlFNaNbNdNiNfMQsZb({ i64, i8* } %2) #1 ; [#uses = 1]
  ret i1 %3
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std5range10primitives__T5emptyTAxaZQlFNaNbNdNiNfMQsZb({ i64, i8* } %a_arg) #0 {
  %a = alloca { i64, i8* }, align 8               ; [#uses = 2, size/byte = 16]
  store { i64, i8* } %a_arg, { i64, i8* }* %a, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %a, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  %2 = icmp ne i64 %.len, 0                       ; [#uses = 1]
  %3 = icmp eq i1 %2, false                       ; [#uses = 1]
  ret i1 %3
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr { i64, i8* } @_D3std9algorithm9searching__T4findSQBh10functional__T3notSQCe6format8internal5write__T8getWidthTAxaZQoFQhZ9__lambda2ZQCmTQzZQDrMFNaNfQBlZQBp(i8* nonnull %.nest_arg, { i64, i8* } %haystack_arg) #0 {
  %haystack = alloca { i64, i8* }, align 8        ; [#uses = 10, size/byte = 16]
  %len = alloca i64, align 8                      ; [#uses = 2, size/byte = 8]
  %i = alloca i64, align 8                        ; [#uses = 3, size/byte = 8]
  %next = alloca i64, align 8                     ; [#uses = 4, size/byte = 8]
  store { i64, i8* } %haystack_arg, { i64, i8* }* %haystack, align 8
  %1 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %haystack, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len = load i64, i64* %1, align 8              ; [#uses = 1]
  store i64 %.len, i64* %len, align 8
  store i64 0, i64* %i, align 8
  store i64 0, i64* %next, align 8
  br label %forcond

forcond:                                          ; preds = %forinc, %0
  %2 = load i64, i64* %next, align 8              ; [#uses = 1]
  %3 = load i64, i64* %len, align 8               ; [#uses = 1]
  %4 = icmp ult i64 %2, %3                        ; [#uses = 1]
  br i1 %4, label %forbody, label %endfor

forbody:                                          ; preds = %forcond
  %5 = call i32 @_D3std3utf__T6decodeVEQu8typecons__T4FlagVAyaa19_7573655265706c6163656d656e744463686172ZQCai0TAxaZQDhFNaNeMKQoKmZw({ i64, i8* }* dereferenceable(16) %haystack, i64* dereferenceable(8) %next) #0 ; [#uses = 1]
  %6 = call zeroext i1 @_D3std10functional__T3notSQy6format8internal5write__T8getWidthTAxaZQoFQhZ9__lambda2Z__TQCoTwZQCuMFNaNbNiNfwZb(i8* nonnull null, i32 %5) #1 ; [#uses = 1]
  br i1 %6, label %if, label %endif

if:                                               ; preds = %forbody
  %7 = load i64, i64* %i, align 8                 ; [#uses = 4]
  %8 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %haystack, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len1 = load i64, i64* %8, align 8             ; [#uses = 3]
  %9 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %haystack, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len2 = load i64, i64* %9, align 8             ; [#uses = 1]
  %bounds.cmp.lo = icmp ule i64 %7, %.len1        ; [#uses = 1]
  br i1 %bounds.cmp.lo, label %bounds.ok, label %bounds.fail

bounds.ok:                                        ; preds = %if
  %10 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %haystack, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr = load i8*, i8** %10, align 8             ; [#uses = 1]
  %lowerbound = getelementptr inbounds i8, i8* %.ptr, i64 %7 ; [#uses = 1, type = i8*]
  %11 = sub i64 %.len1, %7                        ; [#uses = 1]
  %12 = insertvalue { i64, i8* } undef, i64 %11, 0 ; [#uses = 1]
  %13 = insertvalue { i64, i8* } %12, i8* %lowerbound, 1 ; [#uses = 1]
  ret { i64, i8* } %13

dummy.afterreturn:                                ; No predecessors!
  br label %endif

bounds.fail:                                      ; preds = %if
  call void @_d_arraybounds_slice({ i64, i8* } { i64 65, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.120, i32 0, i32 0) }, i32 1880, i64 %7, i64 %.len1, i64 %.len2) #5
  unreachable

endif:                                            ; preds = %dummy.afterreturn, %forbody
  %14 = load i64, i64* %next, align 8             ; [#uses = 1]
  store i64 %14, i64* %i, align 8
  br label %forinc

forinc:                                           ; preds = %endif
  br label %forcond

endfor:                                           ; preds = %forcond
  %15 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %haystack, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len3 = load i64, i64* %15, align 8            ; [#uses = 4]
  %16 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %haystack, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len4 = load i64, i64* %16, align 8            ; [#uses = 3]
  %17 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %haystack, i32 0, i32 0 ; [#uses = 1, type = i64*]
  %.len7 = load i64, i64* %17, align 8            ; [#uses = 1]
  %bounds.cmp.lo8 = icmp ule i64 %.len3, %.len4   ; [#uses = 1]
  br i1 %bounds.cmp.lo8, label %bounds.ok5, label %bounds.fail6

bounds.ok5:                                       ; preds = %endfor
  %18 = getelementptr inbounds { i64, i8* }, { i64, i8* }* %haystack, i32 0, i32 1 ; [#uses = 1, type = i8**]
  %.ptr9 = load i8*, i8** %18, align 8            ; [#uses = 1]
  %lowerbound10 = getelementptr inbounds i8, i8* %.ptr9, i64 %.len3 ; [#uses = 1, type = i8*]
  %19 = sub i64 %.len4, %.len3                    ; [#uses = 1]
  %20 = insertvalue { i64, i8* } undef, i64 %19, 0 ; [#uses = 1]
  %21 = insertvalue { i64, i8* } %20, i8* %lowerbound10, 1 ; [#uses = 1]
  ret { i64, i8* } %21

bounds.fail6:                                     ; preds = %endfor
  call void @_d_arraybounds_slice({ i64, i8* } { i64 65, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.120, i32 0, i32 0) }, i32 1883, i64 %.len3, i64 %.len4, i64 %.len7) #5
  unreachable
}

; [#uses = 1]
; Function Attrs: uwtable
define weak_odr zeroext i1 @_D3std10functional__T3notSQy6format8internal5write__T8getWidthTAxaZQoFQhZ9__lambda2Z__TQCoTwZQCuMFNaNbNiNfwZb(i8* nonnull %.nest_arg, i32 %__param_0_arg) #0 {
  %__param_0 = alloca i32, align 4                ; [#uses = 2, size/byte = 4]
  store i32 %__param_0_arg, i32* %__param_0, align 4
  %1 = load i32, i32* %__param_0, align 4         ; [#uses = 1]
  %2 = call zeroext i1 @_D3std6format8internal5write__T8getWidthTAxaZQoFQhZ__T9__lambda2TwZQnFNaNbNiNfwZb(i32 %1) #0 ; [#uses = 1]
  %3 = icmp eq i1 %2, false                       ; [#uses = 1]
  ret i1 %3
}

; [#uses = 1]
; Function Attrs: uwtable
define internal zeroext i1 @_D3std6format8internal5write__T8getWidthTAxaZQoFQhZ__T9__lambda2TwZQnFNaNbNiNfwZb(i32 %a_arg) #0 {
  %a = alloca i32, align 4                        ; [#uses = 2, size/byte = 4]
  store i32 %a_arg, i32* %a, align 4
  %1 = load i32, i32* %a, align 4                 ; [#uses = 1]
  %2 = icmp ule i32 %1, 127                       ; [#uses = 1]
  ret i1 %2
}

; [#uses = 1]
declare void @_D3std3uni__T21genericDecodeGraphemeVbi0Z__TQBfTAxaZQBnFNaNfKQnZv({ i64, i8* }* dereferenceable(16)) #1

; [#uses = 1]
; Function Attrs: uwtable
define internal { i64, i8* } @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTwTaZQBwFKQBnwMKxSQDdQDc4spec__T10FormatSpecTaZQpZ12__dgliteral4MFNaNbNiNfZAxa(i8* nonnull %.nest_arg) #0 {
  ret { i64, i8* } { i64 46, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.82, i32 0, i32 0) }
}

; [#uses = 1]
declare void @_D3std6format8internal5write__T15formatValueImplTSQBw5array__T8AppenderTAyaZQoTwTaZQCaFNaNfKQBrxwMKxSQDvQDu4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8), i32, %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72)) #1

; [#uses = 1]
declare void @_D3std6format8internal5write__T10formatCharTSQBr5array__T8AppenderTAyaZQoZQBrFNaNfKQBnIwIaZv(%"std.array.Appender!string.Appender"* dereferenceable(8), i32, i8 zeroext) #1

; [#uses = 1]
declare void @_D3std6format5write__T11formatValueTSQBj5array__T8AppenderTAyaZQoTwTaZQBwFNaNfKQBrKwMKxSQDiQDh4spec__T10FormatSpecTaZQpZv(%"std.array.Appender!string.Appender"* dereferenceable(8), i32* dereferenceable(4), %"std.format.spec.FormatSpec!char.FormatSpec"* dereferenceable(72)) #1

; [#uses = 1]
declare { i64, i8* } @_D3std4conv__T8textImplTAyaTQeTxaZQuFNaNbNfQtxaZQy({ i64, i8* }, i8 zeroext) #1

attributes #0 = { uwtable "frame-pointer"="all" "target-cpu"="x86-64" "target-features"="+cx16" }
attributes #1 = { "frame-pointer"="all" "target-cpu"="x86-64" "target-features"="+cx16" }
attributes #2 = { uwtable }
attributes #3 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { noreturn uwtable "frame-pointer"="all" "target-cpu"="x86-64" "target-features"="+cx16" }
attributes #5 = { cold noreturn uwtable }
attributes #6 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #7 = { memory(read) uwtable }
attributes #8 = { alwaysinline uwtable "frame-pointer"="all" "target-cpu"="x86-64" "target-features"="+cx16" }
attributes #9 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) "frame-pointer"="all" "target-cpu"="x86-64" "target-features"="+cx16" }
attributes #10 = { nounwind uwtable }
attributes #11 = { nounwind memory(none) }
attributes #12 = { noreturn "frame-pointer"="all" "target-cpu"="x86-64" "target-features"="+cx16" }

!llvm.ldc.typeinfo._D66TypeInfo_HAyaDFC4hunt10validation26ConstraintValidatorContextQBcZv6__initZ = !{!0}
!llvm.ldc.typeinfo._D62TypeInfo_DFC4hunt10validation26ConstraintValidatorContextQBcZv6__initZ = !{!1}
!llvm.ldc.typeinfo._D12TypeInfo_Aya6__initZ = !{!2, !3}
!llvm.ldc.typeinfo._D4hunt9framework4http12JsonResponseQo7__ClassZ = !{!4}
!llvm.ldc.classinfo._D4hunt9framework4http12JsonResponseQo7__ClassZ = !{!5}
!llvm.ldc.typeinfo._D3app10controller13ApiControllerQp7__ClassZ = !{!6}
!llvm.ldc.classinfo._D3app10controller13ApiControllerQp7__ClassZ = !{!7}
!llvm.ldc.typeinfo._D4hunt9framework10controller10ControllerQm7__ClassZ = !{!8}
!llvm.ldc.classinfo._D4hunt9framework10controller10ControllerQm7__ClassZ = !{!9}
!llvm.ldc.typeinfo._D9Exception7__ClassZ = !{!10}
!llvm.ldc.classinfo._D9Exception7__ClassZ = !{!11}
!llvm.ldc.typeinfo._D12TypeInfo_Axa6__initZ = !{!2, !3}
!llvm.ldc.typeinfo._D3std3utf12UTFException7__ClassZ = !{!12}
!llvm.ldc.classinfo._D3std3utf12UTFException7__ClassZ = !{!13}
!llvm.ldc.typeinfo._D13TypeInfo_xAya6__initZ = !{!2, !3}
!llvm.ldc.typeinfo._D11TypeInfo_xm6__initZ = !{!14}
!llvm.ldc.typeinfo._D10TypeInfo_m6__initZ = !{!14}
!llvm.ldc.typeinfo._D14TypeInfo_xAAya6__initZ = !{!15, !2}
!llvm.ldc.typeinfo._D14TypeInfo_AxAya6__initZ = !{!15, !2}
!llvm.ldc.typeinfo._D11TypeInfo_xb6__initZ = !{!16}
!llvm.ldc.typeinfo._D10TypeInfo_b6__initZ = !{!16}
!llvm.ldc.typeinfo._D13TypeInfo_AAya6__initZ = !{!15, !2}
!llvm.ldc.typeinfo._D4hunt9framework4http8ResponseQj7__ClassZ = !{!17}
!llvm.ldc.classinfo._D4hunt9framework4http8ResponseQj7__ClassZ = !{!18}
!llvm.ldc.typeinfo._D6object9Throwable7__ClassZ = !{!19}
!llvm.ldc.classinfo._D6object9Throwable7__ClassZ = !{!20}
!llvm.ldc.typeinfo._D3std6format15FormatException7__ClassZ = !{!21}
!llvm.ldc.classinfo._D3std6format15FormatException7__ClassZ = !{!22}
!llvm.ldc.typeinfo._D11TypeInfo_xi6__initZ = !{!23}
!llvm.ldc.typeinfo._D10TypeInfo_i6__initZ = !{!23}
!llvm.ldc.typeinfo._D11TypeInfo_xw6__initZ = !{!23}
!llvm.ldc.typeinfo._D10TypeInfo_w6__initZ = !{!23}
!llvm.ldc.typeinfo._D11TypeInfo_xa6__initZ = !{!3}
!llvm.ldc.typeinfo._D10TypeInfo_a6__initZ = !{!3}
!llvm.ldc.typeinfo._D11TypeInfo_xh6__initZ = !{!3}
!llvm.ldc.typeinfo._D10TypeInfo_h6__initZ = !{!3}
!llvm.ldc.typeinfo._D12TypeInfo_xAa6__initZ = !{!2, !3}
!llvm.ldc.typeinfo._D33TypeInfo_HAyaS3std4json9JSONValue6__initZ = !{!0}
!llvm.ldc.typeinfo._D29TypeInfo_S3std4json9JSONValue6__initZ = !{!24}
!llvm.ldc.typeinfo._D3std4json13JSONException7__ClassZ = !{!25}
!llvm.ldc.classinfo._D3std4json13JSONException7__ClassZ = !{!26}
!llvm.ldc.typeinfo._D3std4conv21ConvOverflowException7__ClassZ = !{!27}
!llvm.ldc.classinfo._D3std4conv21ConvOverflowException7__ClassZ = !{!28}
!llvm.ldc.typeinfo._D3std4conv13ConvException7__ClassZ = !{!29}
!llvm.ldc.classinfo._D3std4conv13ConvException7__ClassZ = !{!30}
!llvm.ident = !{!31}

!0 = !{i8* undef}
!1 = !{{ i8*, void (i8*, %hunt.validation.ConstraintValidatorContext.ConstraintValidatorContext*)* } undef}
!2 = !{{ i64, i8* } undef}
!3 = !{i8 undef}
!4 = !{%hunt.framework.http.JsonResponse.JsonResponse* undef}
!5 = !{%hunt.framework.http.JsonResponse.JsonResponse undef, i1 false}
!6 = !{%app.controller.ApiController.ApiController* undef}
!7 = !{%app.controller.ApiController.ApiController undef, i1 false}
!8 = !{%hunt.framework.controller.Controller.Controller* undef}
!9 = !{%hunt.framework.controller.Controller.Controller undef, i1 false}
!10 = !{%object.Exception* undef}
!11 = !{%object.Exception undef, i1 false}
!12 = !{%std.utf.UTFException* undef}
!13 = !{%std.utf.UTFException undef, i1 false}
!14 = !{i64 undef}
!15 = !{{ i64, { i64, i8* }* } undef}
!16 = !{i1 undef}
!17 = !{%hunt.framework.http.Response.Response* undef}
!18 = !{%hunt.framework.http.Response.Response undef, i1 false}
!19 = !{%object.Throwable* undef}
!20 = !{%object.Throwable undef, i1 true}
!21 = !{%std.format.FormatException* undef}
!22 = !{%std.format.FormatException undef, i1 false}
!23 = !{i32 undef}
!24 = !{%std.json.JSONValue undef}
!25 = !{%std.json.JSONException* undef}
!26 = !{%std.json.JSONException undef, i1 false}
!27 = !{%std.conv.ConvOverflowException* undef}
!28 = !{%std.conv.ConvOverflowException undef, i1 false}
!29 = !{%std.conv.ConvException* undef}
!30 = !{%std.conv.ConvException undef, i1 false}
!31 = !{!"ldc version 1.35.0"}
